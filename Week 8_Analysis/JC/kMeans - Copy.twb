<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20232.23.0805.0415                               -->
<workbook original-version='18.1' source-build='2023.2.1 (20232.23.0805.0415)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <SavingAnalyticObjects />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='socioeconomic_predictors' inline='true' name='federated.0cl0ztz1eeohc51e85dpd1v5fkta' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='socioeconomic_predictors' name='textscan.0ptthz816dtrur16wgst10fvry0m'>
            <connection class='textscan' directory='D:/GitHub Repos/culminating-project-group-1/Week 8 - Analysis/JC' filename='socioeconomic_predictors.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0ptthz816dtrur16wgst10fvry0m' name='socioeconomic_predictors.csv' table='[socioeconomic_predictors#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='CountryShortName' ordinal='0' />
            <column datatype='real' name='Year' ordinal='1' />
            <column datatype='real' name='Life expectancy at birth, total (years)' ordinal='2' />
            <column datatype='integer' name='Region_Sub-Saharan Africa' ordinal='3' />
            <column datatype='real' name='Claims on central government, etc. (% GDP)' ordinal='4' />
            <column datatype='real' name='Adjusted savings: energy depletion (% of GNI)' ordinal='5' />
            <column datatype='real' name='GOAL 11: Sustainable Cities and Communities (5 year moving average)' ordinal='6' />
            <column datatype='real' name='Primary education, pupils' ordinal='7' />
            <column datatype='real' name='Final consumption expenditure (annual % growth)' ordinal='8' />
            <column datatype='real' name='Travel services (% of commercial service imports)' ordinal='9' />
            <column datatype='real' name='Agriculture, forestry, and fishing, value added per worker (constant 2015 US$)' ordinal='10' />
            <column datatype='real' name='Commercial bank branches (per 100,000 adults)' ordinal='11' />
            <column datatype='real' name='Unemployment, youth total (% of total labor force ages 15-24) (modeled ILO estimate)' ordinal='12' />
            <column datatype='real' name='International tourism, expenditures for travel items (current US$)' ordinal='13' />
            <column datatype='integer' name='Income Group_Low income' ordinal='14' />
            <column datatype='integer' name='Region_South Asia' ordinal='15' />
            <column datatype='integer' name='Region_Latin America &amp; Caribbean' ordinal='16' />
            <column datatype='integer' name='Income Group_Upper middle income' ordinal='17' />
            <column datatype='real' name='Communications, computer, etc. (% of service exports, BoP)' ordinal='18' />
            <column datatype='real' name='Ores and metals imports (% of merchandise imports)' ordinal='19' />
            <column datatype='real' name='Inflation, GDP deflator (annual %)' ordinal='20' />
            <column datatype='real' name='International tourism, number of arrivals' ordinal='21' />
            <column datatype='real' name='External balance on goods and services (% of GDP)' ordinal='22' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0ptthz816dtrur16wgst10fvry0m' name='socioeconomic_predictors.csv' table='[socioeconomic_predictors#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='CountryShortName' ordinal='0' />
            <column datatype='real' name='Year' ordinal='1' />
            <column datatype='real' name='Life expectancy at birth, total (years)' ordinal='2' />
            <column datatype='integer' name='Region_Sub-Saharan Africa' ordinal='3' />
            <column datatype='real' name='Claims on central government, etc. (% GDP)' ordinal='4' />
            <column datatype='real' name='Adjusted savings: energy depletion (% of GNI)' ordinal='5' />
            <column datatype='real' name='GOAL 11: Sustainable Cities and Communities (5 year moving average)' ordinal='6' />
            <column datatype='real' name='Primary education, pupils' ordinal='7' />
            <column datatype='real' name='Final consumption expenditure (annual % growth)' ordinal='8' />
            <column datatype='real' name='Travel services (% of commercial service imports)' ordinal='9' />
            <column datatype='real' name='Agriculture, forestry, and fishing, value added per worker (constant 2015 US$)' ordinal='10' />
            <column datatype='real' name='Commercial bank branches (per 100,000 adults)' ordinal='11' />
            <column datatype='real' name='Unemployment, youth total (% of total labor force ages 15-24) (modeled ILO estimate)' ordinal='12' />
            <column datatype='real' name='International tourism, expenditures for travel items (current US$)' ordinal='13' />
            <column datatype='integer' name='Income Group_Low income' ordinal='14' />
            <column datatype='integer' name='Region_South Asia' ordinal='15' />
            <column datatype='integer' name='Region_Latin America &amp; Caribbean' ordinal='16' />
            <column datatype='integer' name='Income Group_Upper middle income' ordinal='17' />
            <column datatype='real' name='Communications, computer, etc. (% of service exports, BoP)' ordinal='18' />
            <column datatype='real' name='Ores and metals imports (% of merchandise imports)' ordinal='19' />
            <column datatype='real' name='Inflation, GDP deflator (annual %)' ordinal='20' />
            <column datatype='real' name='International tourism, number of arrivals' ordinal='21' />
            <column datatype='real' name='External balance on goods and services (% of GDP)' ordinal='22' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[socioeconomic_predictors.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CountryShortName</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CountryShortName]</local-name>
            <parent-name>[socioeconomic_predictors.csv]</parent-name>
            <remote-alias>CountryShortName</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[socioeconomic_predictors.csv_A2CC5C7939CA4D2B96E1AA8401F54AF7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[socioeconomic_predictors.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[socioeconomic_predictors.csv_A2CC5C7939CA4D2B96E1AA8401F54AF7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Life expectancy at birth, total (years)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Life expectancy at birth, total (years)]</local-name>
            <parent-name>[socioeconomic_predictors.csv]</parent-name>
            <remote-alias>Life expectancy at birth, total (years)</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[socioeconomic_predictors.csv_A2CC5C7939CA4D2B96E1AA8401F54AF7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region_Sub-Saharan Africa</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Region_Sub-Saharan Africa]</local-name>
            <parent-name>[socioeconomic_predictors.csv]</parent-name>
            <remote-alias>Region_Sub-Saharan Africa</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[socioeconomic_predictors.csv_A2CC5C7939CA4D2B96E1AA8401F54AF7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Claims on central government, etc. (% GDP)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Claims on central government, etc. (% GDP)]</local-name>
            <parent-name>[socioeconomic_predictors.csv]</parent-name>
            <remote-alias>Claims on central government, etc. (% GDP)</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[socioeconomic_predictors.csv_A2CC5C7939CA4D2B96E1AA8401F54AF7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Adjusted savings: energy depletion (% of GNI)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Adjusted savings: energy depletion (% of GNI)]</local-name>
            <parent-name>[socioeconomic_predictors.csv]</parent-name>
            <remote-alias>Adjusted savings: energy depletion (% of GNI)</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[socioeconomic_predictors.csv_A2CC5C7939CA4D2B96E1AA8401F54AF7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GOAL 11: Sustainable Cities and Communities (5 year moving average)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[GOAL 11: Sustainable Cities and Communities (5 year moving average)]</local-name>
            <parent-name>[socioeconomic_predictors.csv]</parent-name>
            <remote-alias>GOAL 11: Sustainable Cities and Communities (5 year moving average)</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[socioeconomic_predictors.csv_A2CC5C7939CA4D2B96E1AA8401F54AF7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Primary education, pupils</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Primary education, pupils]</local-name>
            <parent-name>[socioeconomic_predictors.csv]</parent-name>
            <remote-alias>Primary education, pupils</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[socioeconomic_predictors.csv_A2CC5C7939CA4D2B96E1AA8401F54AF7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Final consumption expenditure (annual % growth)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Final consumption expenditure (annual % growth)]</local-name>
            <parent-name>[socioeconomic_predictors.csv]</parent-name>
            <remote-alias>Final consumption expenditure (annual % growth)</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[socioeconomic_predictors.csv_A2CC5C7939CA4D2B96E1AA8401F54AF7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Travel services (% of commercial service imports)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Travel services (% of commercial service imports)]</local-name>
            <parent-name>[socioeconomic_predictors.csv]</parent-name>
            <remote-alias>Travel services (% of commercial service imports)</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[socioeconomic_predictors.csv_A2CC5C7939CA4D2B96E1AA8401F54AF7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Agriculture, forestry, and fishing, value added per worker (constant 2015 US$)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Agriculture, forestry, and fishing, value added per worker (constant 2015 US$)]</local-name>
            <parent-name>[socioeconomic_predictors.csv]</parent-name>
            <remote-alias>Agriculture, forestry, and fishing, value added per worker (constant 2015 US$)</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[socioeconomic_predictors.csv_A2CC5C7939CA4D2B96E1AA8401F54AF7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Commercial bank branches (per 100,000 adults)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Commercial bank branches (per 100,000 adults)]</local-name>
            <parent-name>[socioeconomic_predictors.csv]</parent-name>
            <remote-alias>Commercial bank branches (per 100,000 adults)</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[socioeconomic_predictors.csv_A2CC5C7939CA4D2B96E1AA8401F54AF7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unemployment, youth total (% of total labor force ages 15-24) (modeled ILO estimate)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Unemployment, youth total (% of total labor force ages 15-24) (modeled ILO estimate)]</local-name>
            <parent-name>[socioeconomic_predictors.csv]</parent-name>
            <remote-alias>Unemployment, youth total (% of total labor force ages 15-24) (modeled ILO estimate)</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[socioeconomic_predictors.csv_A2CC5C7939CA4D2B96E1AA8401F54AF7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>International tourism, expenditures for travel items (current US$)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[International tourism, expenditures for travel items (current US$)]</local-name>
            <parent-name>[socioeconomic_predictors.csv]</parent-name>
            <remote-alias>International tourism, expenditures for travel items (current US$)</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[socioeconomic_predictors.csv_A2CC5C7939CA4D2B96E1AA8401F54AF7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Income Group_Low income</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Income Group_Low income]</local-name>
            <parent-name>[socioeconomic_predictors.csv]</parent-name>
            <remote-alias>Income Group_Low income</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[socioeconomic_predictors.csv_A2CC5C7939CA4D2B96E1AA8401F54AF7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region_South Asia</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Region_South Asia]</local-name>
            <parent-name>[socioeconomic_predictors.csv]</parent-name>
            <remote-alias>Region_South Asia</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[socioeconomic_predictors.csv_A2CC5C7939CA4D2B96E1AA8401F54AF7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region_Latin America &amp; Caribbean</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Region_Latin America &amp; Caribbean]</local-name>
            <parent-name>[socioeconomic_predictors.csv]</parent-name>
            <remote-alias>Region_Latin America &amp; Caribbean</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[socioeconomic_predictors.csv_A2CC5C7939CA4D2B96E1AA8401F54AF7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Income Group_Upper middle income</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Income Group_Upper middle income]</local-name>
            <parent-name>[socioeconomic_predictors.csv]</parent-name>
            <remote-alias>Income Group_Upper middle income</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[socioeconomic_predictors.csv_A2CC5C7939CA4D2B96E1AA8401F54AF7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Communications, computer, etc. (% of service exports, BoP)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Communications, computer, etc. (% of service exports, BoP)]</local-name>
            <parent-name>[socioeconomic_predictors.csv]</parent-name>
            <remote-alias>Communications, computer, etc. (% of service exports, BoP)</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[socioeconomic_predictors.csv_A2CC5C7939CA4D2B96E1AA8401F54AF7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ores and metals imports (% of merchandise imports)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Ores and metals imports (% of merchandise imports)]</local-name>
            <parent-name>[socioeconomic_predictors.csv]</parent-name>
            <remote-alias>Ores and metals imports (% of merchandise imports)</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[socioeconomic_predictors.csv_A2CC5C7939CA4D2B96E1AA8401F54AF7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Inflation, GDP deflator (annual %)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Inflation, GDP deflator (annual %)]</local-name>
            <parent-name>[socioeconomic_predictors.csv]</parent-name>
            <remote-alias>Inflation, GDP deflator (annual %)</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[socioeconomic_predictors.csv_A2CC5C7939CA4D2B96E1AA8401F54AF7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>International tourism, number of arrivals</remote-name>
            <remote-type>5</remote-type>
            <local-name>[International tourism, number of arrivals]</local-name>
            <parent-name>[socioeconomic_predictors.csv]</parent-name>
            <remote-alias>International tourism, number of arrivals</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[socioeconomic_predictors.csv_A2CC5C7939CA4D2B96E1AA8401F54AF7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>External balance on goods and services (% of GDP)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[External balance on goods and services (% of GDP)]</local-name>
            <parent-name>[socioeconomic_predictors.csv]</parent-name>
            <remote-alias>External balance on goods and services (% of GDP)</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[socioeconomic_predictors.csv_A2CC5C7939CA4D2B96E1AA8401F54AF7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='real' name='[Adjusted savings: energy depletion (% of GNI)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Agriculture, forestry, and fishing, value added per worker (constant 2015 US$)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Claims on central government, etc. (% GDP)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Commercial bank branches (per 100,000 adults)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Communications, computer, etc. (% of service exports, BoP)]' role='measure' type='quantitative' />
      <column caption='Country Short Name' datatype='string' name='[CountryShortName]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='real' name='[External balance on goods and services (% of GDP)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Final consumption expenditure (annual % growth)]' role='measure' type='quantitative' />
      <column datatype='real' name='[GOAL 11: Sustainable Cities and Communities (5 year moving average)]' role='measure' type='quantitative' />
      <column caption='Income Group Low income' datatype='integer' name='[Income Group_Low income]' role='measure' type='quantitative' />
      <column caption='Income Group Upper middle income' datatype='integer' name='[Income Group_Upper middle income]' role='measure' type='quantitative' />
      <column datatype='real' name='[Inflation, GDP deflator (annual %)]' role='measure' type='quantitative' />
      <column datatype='real' name='[International tourism, expenditures for travel items (current US$)]' role='measure' type='quantitative' />
      <column datatype='real' name='[International tourism, number of arrivals]' role='measure' type='quantitative' />
      <column datatype='real' name='[Ores and metals imports (% of merchandise imports)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Primary education, pupils]' role='measure' type='quantitative' />
      <column caption='Region Latin America &amp; Caribbean' datatype='integer' name='[Region_Latin America &amp; Caribbean]' role='measure' type='quantitative' />
      <column caption='Region South Asia' datatype='integer' name='[Region_South Asia]' role='measure' type='quantitative' />
      <column caption='Region Sub-Saharan Africa' datatype='integer' name='[Region_Sub-Saharan Africa]' role='measure' type='quantitative' />
      <column datatype='real' name='[Travel services (% of commercial service imports)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Unemployment, youth total (% of total labor force ages 15-24) (modeled ILO estimate)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='socioeconomic_predictors.csv' datatype='table' name='[__tableau_internal_object_id__].[socioeconomic_predictors.csv_A2CC5C7939CA4D2B96E1AA8401F54AF7]' role='measure' type='quantitative' />
      <column-instance column='[Adjusted savings: energy depletion (% of GNI)]' derivation='Avg' name='[avg:Adjusted savings: energy depletion (% of GNI):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Agriculture, forestry, and fishing, value added per worker (constant 2015 US$)]' derivation='Avg' name='[avg:Agriculture, forestry, and fishing, value added per worker (constant 2015 US$):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Claims on central government, etc. (% GDP)]' derivation='Avg' name='[avg:Claims on central government, etc. (% GDP):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Commercial bank branches (per 100,000 adults)]' derivation='Avg' name='[avg:Commercial bank branches (per 100,000 adults):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Communications, computer, etc. (% of service exports, BoP)]' derivation='Avg' name='[avg:Communications, computer, etc. (% of service exports, BoP):qk]' pivot='key' type='quantitative' />
      <column-instance column='[External balance on goods and services (% of GDP)]' derivation='Avg' name='[avg:External balance on goods and services (% of GDP):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Final consumption expenditure (annual % growth)]' derivation='Avg' name='[avg:Final consumption expenditure (annual % growth):qk]' pivot='key' type='quantitative' />
      <column-instance column='[GOAL 11: Sustainable Cities and Communities (5 year moving average)]' derivation='Avg' name='[avg:GOAL 11: Sustainable Cities and Communities (5 year moving average):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Income Group_Low income]' derivation='Avg' name='[avg:Income Group_Low income:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Income Group_Upper middle income]' derivation='Avg' name='[avg:Income Group_Upper middle income:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Inflation, GDP deflator (annual %)]' derivation='Avg' name='[avg:Inflation, GDP deflator (annual %):qk]' pivot='key' type='quantitative' />
      <column-instance column='[International tourism, expenditures for travel items (current US$)]' derivation='Avg' name='[avg:International tourism, expenditures for travel items (current US$):qk]' pivot='key' type='quantitative' />
      <column-instance column='[International tourism, number of arrivals]' derivation='Avg' name='[avg:International tourism, number of arrivals:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Ores and metals imports (% of merchandise imports)]' derivation='Avg' name='[avg:Ores and metals imports (% of merchandise imports):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Primary education, pupils]' derivation='Avg' name='[avg:Primary education, pupils:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Region_Latin America &amp; Caribbean]' derivation='Avg' name='[avg:Region_Latin America &amp; Caribbean:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Region_South Asia]' derivation='Avg' name='[avg:Region_South Asia:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Region_Sub-Saharan Africa]' derivation='Avg' name='[avg:Region_Sub-Saharan Africa:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Travel services (% of commercial service imports)]' derivation='Avg' name='[avg:Travel services (% of commercial service imports):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Unemployment, youth total (% of total labor force ages 15-24) (modeled ILO estimate)]' derivation='Avg' name='[avg:Unemployment, youth total (% of total labor force ages 15-24) (modeled ILO estimate):qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <analytic-model>
        <name>
          <field name='[AnalyticModel:{5321eba1-2efc-4fb9-a2c4-4458fd3c9fd1}]' />
        </name>
        <analytic-model-specifications class='cluster-specifications'>
          <analysis-fields>
            <field name='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Adjusted savings: energy depletion (% of GNI):qk]' />
            <field name='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Agriculture, forestry, and fishing, value added per worker (constant 2015 US$):qk]' />
            <field name='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Claims on central government, etc. (% GDP):qk]' />
            <field name='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Commercial bank branches (per 100,000 adults):qk]' />
            <field name='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Communications, computer, etc. (% of service exports, BoP):qk]' />
            <field name='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:External balance on goods and services (% of GDP):qk]' />
            <field name='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Final consumption expenditure (annual % growth):qk]' />
            <field name='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:GOAL 11: Sustainable Cities and Communities (5 year moving average):qk]' />
            <field name='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Income Group_Low income:qk]' />
            <field name='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Income Group_Upper middle income:qk]' />
            <field name='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Inflation, GDP deflator (annual %):qk]' />
            <field name='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:International tourism, expenditures for travel items (current US$):qk]' />
            <field name='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:International tourism, number of arrivals:qk]' />
            <field name='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Ores and metals imports (% of merchandise imports):qk]' />
            <field name='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Primary education, pupils:qk]' />
            <field name='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Region_Latin America &amp; Caribbean:qk]' />
            <field name='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Region_South Asia:qk]' />
            <field name='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Region_Sub-Saharan Africa:qk]' />
            <field name='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Travel services (% of commercial service imports):qk]' />
            <field name='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Unemployment, youth total (% of total labor force ages 15-24) (modeled ILO estimate):qk]' />
          </analysis-fields>
          <filter-fields />
          <lod-fields />
          <number-of-desired-clusters>0</number-of-desired-clusters>
          <is-dissagregate>false</is-dissagregate>
        </analytic-model-specifications>
        <result-fields />
      </analytic-model>
      <analytic-model>
        <name>
          <field name='[AnalyticModel:{551cd312-311f-499f-95f4-b5a374527863}]' />
        </name>
        <analytic-model-specifications class='cluster-specifications'>
          <analysis-fields>
            <field name='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Adjusted savings: energy depletion (% of GNI):qk]' />
            <field name='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Agriculture, forestry, and fishing, value added per worker (constant 2015 US$):qk]' />
            <field name='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Claims on central government, etc. (% GDP):qk]' />
            <field name='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Commercial bank branches (per 100,000 adults):qk]' />
            <field name='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Communications, computer, etc. (% of service exports, BoP):qk]' />
            <field name='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:External balance on goods and services (% of GDP):qk]' />
            <field name='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Final consumption expenditure (annual % growth):qk]' />
            <field name='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:GOAL 11: Sustainable Cities and Communities (5 year moving average):qk]' />
            <field name='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Income Group_Low income:qk]' />
            <field name='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Income Group_Upper middle income:qk]' />
            <field name='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Inflation, GDP deflator (annual %):qk]' />
            <field name='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:International tourism, expenditures for travel items (current US$):qk]' />
            <field name='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:International tourism, number of arrivals:qk]' />
            <field name='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Ores and metals imports (% of merchandise imports):qk]' />
            <field name='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Primary education, pupils:qk]' />
            <field name='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Region_Latin America &amp; Caribbean:qk]' />
            <field name='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Region_South Asia:qk]' />
            <field name='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Region_Sub-Saharan Africa:qk]' />
            <field name='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Travel services (% of commercial service imports):qk]' />
            <field name='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Unemployment, youth total (% of total labor force ages 15-24) (modeled ILO estimate):qk]' />
          </analysis-fields>
          <filter-fields />
          <lod-fields />
          <number-of-desired-clusters>0</number-of-desired-clusters>
          <is-dissagregate>false</is-dissagregate>
        </analytic-model-specifications>
        <result-fields>
          <field name='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[AdhocCluster:2]' />
        </result-fields>
      </analytic-model>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='socioeconomic_predictors.csv' id='socioeconomic_predictors.csv_A2CC5C7939CA4D2B96E1AA8401F54AF7'>
            <properties context=''>
              <relation connection='textscan.0ptthz816dtrur16wgst10fvry0m' name='socioeconomic_predictors.csv' table='[socioeconomic_predictors#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='CountryShortName' ordinal='0' />
                  <column datatype='real' name='Year' ordinal='1' />
                  <column datatype='real' name='Life expectancy at birth, total (years)' ordinal='2' />
                  <column datatype='integer' name='Region_Sub-Saharan Africa' ordinal='3' />
                  <column datatype='real' name='Claims on central government, etc. (% GDP)' ordinal='4' />
                  <column datatype='real' name='Adjusted savings: energy depletion (% of GNI)' ordinal='5' />
                  <column datatype='real' name='GOAL 11: Sustainable Cities and Communities (5 year moving average)' ordinal='6' />
                  <column datatype='real' name='Primary education, pupils' ordinal='7' />
                  <column datatype='real' name='Final consumption expenditure (annual % growth)' ordinal='8' />
                  <column datatype='real' name='Travel services (% of commercial service imports)' ordinal='9' />
                  <column datatype='real' name='Agriculture, forestry, and fishing, value added per worker (constant 2015 US$)' ordinal='10' />
                  <column datatype='real' name='Commercial bank branches (per 100,000 adults)' ordinal='11' />
                  <column datatype='real' name='Unemployment, youth total (% of total labor force ages 15-24) (modeled ILO estimate)' ordinal='12' />
                  <column datatype='real' name='International tourism, expenditures for travel items (current US$)' ordinal='13' />
                  <column datatype='integer' name='Income Group_Low income' ordinal='14' />
                  <column datatype='integer' name='Region_South Asia' ordinal='15' />
                  <column datatype='integer' name='Region_Latin America &amp; Caribbean' ordinal='16' />
                  <column datatype='integer' name='Income Group_Upper middle income' ordinal='17' />
                  <column datatype='real' name='Communications, computer, etc. (% of service exports, BoP)' ordinal='18' />
                  <column datatype='real' name='Ores and metals imports (% of merchandise imports)' ordinal='19' />
                  <column datatype='real' name='Inflation, GDP deflator (annual %)' ordinal='20' />
                  <column datatype='real' name='International tourism, number of arrivals' ordinal='21' />
                  <column datatype='real' name='External balance on goods and services (% of GDP)' ordinal='22' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='environmental_predictors' inline='true' name='federated.01cgkm51l5oq0x10q382e1vejl59' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='environmental_predictors' name='textscan.1bqo8tn0ylvcp217j4xi601fo05m'>
            <connection class='textscan' directory='D:/GitHub Repos/culminating-project-group-1/Week 8 - Analysis/JC' filename='environmental_predictors.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1bqo8tn0ylvcp217j4xi601fo05m' name='environmental_predictors.csv' table='[environmental_predictors#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='CountryShortName' ordinal='0' />
            <column datatype='real' name='Year' ordinal='1' />
            <column datatype='real' name='Life expectancy at birth, total (years)' ordinal='2' />
            <column datatype='real' name='Arable land (% of land area)' ordinal='3' />
            <column datatype='real' name='Aquaculture production (metric tons)' ordinal='4' />
            <column datatype='real' name='Forest rents (% of GDP)' ordinal='5' />
            <column datatype='real' name='Fertilizer consumption (kilograms per hectare of arable land)' ordinal='6' />
            <column datatype='real' name='Coal rents (% of GDP)' ordinal='7' />
            <column datatype='real' name='Renewable internal freshwater resources per capita (cubic meters)' ordinal='8' />
            <column datatype='real' name='Forest area (% of land area)' ordinal='9' />
            <column datatype='real' name='Rural population growth (annual %)' ordinal='10' />
            <column datatype='real' name='Carbon dioxide (CO2) emissions excluding LULUCF per capita (t CO2e/capita)' ordinal='11' />
            <column datatype='real' name='Natural gas rents (% of GDP)' ordinal='12' />
            <column datatype='real' name='GOAL 13: Climate Action (5 year moving average)' ordinal='13' />
            <column datatype='real' name='Water productivity, total (constant 2015 US$ GDP per cubic meter of total freshwater withdrawal)' ordinal='14' />
            <column datatype='real' name='Population density (people per sq. km of land area)' ordinal='15' />
            <column datatype='real' name='Mineral rents (% of GDP)' ordinal='16' />
            <column datatype='real' name='Oil rents (% of GDP)' ordinal='17' />
            <column datatype='real' name='Methane (CH4) emissions from Building (Energy) (Mt CO2e)' ordinal='18' />
            <column datatype='real' name='Nitrous oxide (N2O) emissions (total) excluding LULUCF (% change from 1990)' ordinal='19' />
            <column datatype='real' name='Capture fisheries production (metric tons)' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1bqo8tn0ylvcp217j4xi601fo05m' name='environmental_predictors.csv' table='[environmental_predictors#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='CountryShortName' ordinal='0' />
            <column datatype='real' name='Year' ordinal='1' />
            <column datatype='real' name='Life expectancy at birth, total (years)' ordinal='2' />
            <column datatype='real' name='Arable land (% of land area)' ordinal='3' />
            <column datatype='real' name='Aquaculture production (metric tons)' ordinal='4' />
            <column datatype='real' name='Forest rents (% of GDP)' ordinal='5' />
            <column datatype='real' name='Fertilizer consumption (kilograms per hectare of arable land)' ordinal='6' />
            <column datatype='real' name='Coal rents (% of GDP)' ordinal='7' />
            <column datatype='real' name='Renewable internal freshwater resources per capita (cubic meters)' ordinal='8' />
            <column datatype='real' name='Forest area (% of land area)' ordinal='9' />
            <column datatype='real' name='Rural population growth (annual %)' ordinal='10' />
            <column datatype='real' name='Carbon dioxide (CO2) emissions excluding LULUCF per capita (t CO2e/capita)' ordinal='11' />
            <column datatype='real' name='Natural gas rents (% of GDP)' ordinal='12' />
            <column datatype='real' name='GOAL 13: Climate Action (5 year moving average)' ordinal='13' />
            <column datatype='real' name='Water productivity, total (constant 2015 US$ GDP per cubic meter of total freshwater withdrawal)' ordinal='14' />
            <column datatype='real' name='Population density (people per sq. km of land area)' ordinal='15' />
            <column datatype='real' name='Mineral rents (% of GDP)' ordinal='16' />
            <column datatype='real' name='Oil rents (% of GDP)' ordinal='17' />
            <column datatype='real' name='Methane (CH4) emissions from Building (Energy) (Mt CO2e)' ordinal='18' />
            <column datatype='real' name='Nitrous oxide (N2O) emissions (total) excluding LULUCF (% change from 1990)' ordinal='19' />
            <column datatype='real' name='Capture fisheries production (metric tons)' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[environmental_predictors.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CountryShortName</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CountryShortName]</local-name>
            <parent-name>[environmental_predictors.csv]</parent-name>
            <remote-alias>CountryShortName</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[environmental_predictors.csv_C4E0CB1711F946B080BA8EE5F35C6DE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[environmental_predictors.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[environmental_predictors.csv_C4E0CB1711F946B080BA8EE5F35C6DE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Life expectancy at birth, total (years)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Life expectancy at birth, total (years)]</local-name>
            <parent-name>[environmental_predictors.csv]</parent-name>
            <remote-alias>Life expectancy at birth, total (years)</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[environmental_predictors.csv_C4E0CB1711F946B080BA8EE5F35C6DE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Arable land (% of land area)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Arable land (% of land area)]</local-name>
            <parent-name>[environmental_predictors.csv]</parent-name>
            <remote-alias>Arable land (% of land area)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[environmental_predictors.csv_C4E0CB1711F946B080BA8EE5F35C6DE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Aquaculture production (metric tons)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Aquaculture production (metric tons)]</local-name>
            <parent-name>[environmental_predictors.csv]</parent-name>
            <remote-alias>Aquaculture production (metric tons)</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[environmental_predictors.csv_C4E0CB1711F946B080BA8EE5F35C6DE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Forest rents (% of GDP)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Forest rents (% of GDP)]</local-name>
            <parent-name>[environmental_predictors.csv]</parent-name>
            <remote-alias>Forest rents (% of GDP)</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[environmental_predictors.csv_C4E0CB1711F946B080BA8EE5F35C6DE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Fertilizer consumption (kilograms per hectare of arable land)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Fertilizer consumption (kilograms per hectare of arable land)]</local-name>
            <parent-name>[environmental_predictors.csv]</parent-name>
            <remote-alias>Fertilizer consumption (kilograms per hectare of arable land)</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[environmental_predictors.csv_C4E0CB1711F946B080BA8EE5F35C6DE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Coal rents (% of GDP)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Coal rents (% of GDP)]</local-name>
            <parent-name>[environmental_predictors.csv]</parent-name>
            <remote-alias>Coal rents (% of GDP)</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[environmental_predictors.csv_C4E0CB1711F946B080BA8EE5F35C6DE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Renewable internal freshwater resources per capita (cubic meters)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Renewable internal freshwater resources per capita (cubic meters)]</local-name>
            <parent-name>[environmental_predictors.csv]</parent-name>
            <remote-alias>Renewable internal freshwater resources per capita (cubic meters)</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[environmental_predictors.csv_C4E0CB1711F946B080BA8EE5F35C6DE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Forest area (% of land area)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Forest area (% of land area)]</local-name>
            <parent-name>[environmental_predictors.csv]</parent-name>
            <remote-alias>Forest area (% of land area)</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[environmental_predictors.csv_C4E0CB1711F946B080BA8EE5F35C6DE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Rural population growth (annual %)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Rural population growth (annual %)]</local-name>
            <parent-name>[environmental_predictors.csv]</parent-name>
            <remote-alias>Rural population growth (annual %)</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[environmental_predictors.csv_C4E0CB1711F946B080BA8EE5F35C6DE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Carbon dioxide (CO2) emissions excluding LULUCF per capita (t CO2e/capita)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Carbon dioxide (CO2) emissions excluding LULUCF per capita (t CO2e/capita)]</local-name>
            <parent-name>[environmental_predictors.csv]</parent-name>
            <remote-alias>Carbon dioxide (CO2) emissions excluding LULUCF per capita (t CO2e/capita)</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[environmental_predictors.csv_C4E0CB1711F946B080BA8EE5F35C6DE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Natural gas rents (% of GDP)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Natural gas rents (% of GDP)]</local-name>
            <parent-name>[environmental_predictors.csv]</parent-name>
            <remote-alias>Natural gas rents (% of GDP)</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[environmental_predictors.csv_C4E0CB1711F946B080BA8EE5F35C6DE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GOAL 13: Climate Action (5 year moving average)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[GOAL 13: Climate Action (5 year moving average)]</local-name>
            <parent-name>[environmental_predictors.csv]</parent-name>
            <remote-alias>GOAL 13: Climate Action (5 year moving average)</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[environmental_predictors.csv_C4E0CB1711F946B080BA8EE5F35C6DE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Water productivity, total (constant 2015 US$ GDP per cubic meter of total freshwater withdrawal)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Water productivity, total (constant 2015 US$ GDP per cubic meter of total freshwater withdrawal)]</local-name>
            <parent-name>[environmental_predictors.csv]</parent-name>
            <remote-alias>Water productivity, total (constant 2015 US$ GDP per cubic meter of total freshwater withdrawal)</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[environmental_predictors.csv_C4E0CB1711F946B080BA8EE5F35C6DE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population density (people per sq. km of land area)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Population density (people per sq. km of land area)]</local-name>
            <parent-name>[environmental_predictors.csv]</parent-name>
            <remote-alias>Population density (people per sq. km of land area)</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[environmental_predictors.csv_C4E0CB1711F946B080BA8EE5F35C6DE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Mineral rents (% of GDP)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Mineral rents (% of GDP)]</local-name>
            <parent-name>[environmental_predictors.csv]</parent-name>
            <remote-alias>Mineral rents (% of GDP)</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[environmental_predictors.csv_C4E0CB1711F946B080BA8EE5F35C6DE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Oil rents (% of GDP)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Oil rents (% of GDP)]</local-name>
            <parent-name>[environmental_predictors.csv]</parent-name>
            <remote-alias>Oil rents (% of GDP)</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[environmental_predictors.csv_C4E0CB1711F946B080BA8EE5F35C6DE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Methane (CH4) emissions from Building (Energy) (Mt CO2e)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Methane (CH4) emissions from Building (Energy) (Mt CO2e)]</local-name>
            <parent-name>[environmental_predictors.csv]</parent-name>
            <remote-alias>Methane (CH4) emissions from Building (Energy) (Mt CO2e)</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[environmental_predictors.csv_C4E0CB1711F946B080BA8EE5F35C6DE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Nitrous oxide (N2O) emissions (total) excluding LULUCF (% change from 1990)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Nitrous oxide (N2O) emissions (total) excluding LULUCF (% change from 1990)]</local-name>
            <parent-name>[environmental_predictors.csv]</parent-name>
            <remote-alias>Nitrous oxide (N2O) emissions (total) excluding LULUCF (% change from 1990)</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[environmental_predictors.csv_C4E0CB1711F946B080BA8EE5F35C6DE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Capture fisheries production (metric tons)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Capture fisheries production (metric tons)]</local-name>
            <parent-name>[environmental_predictors.csv]</parent-name>
            <remote-alias>Capture fisheries production (metric tons)</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[environmental_predictors.csv_C4E0CB1711F946B080BA8EE5F35C6DE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='real' name='[Aquaculture production (metric tons)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Arable land (% of land area)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Capture fisheries production (metric tons)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Carbon dioxide (CO2) emissions excluding LULUCF per capita (t CO2e/capita)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Coal rents (% of GDP)]' role='measure' type='quantitative' />
      <column caption='Country Short Name' datatype='string' name='[CountryShortName]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='real' name='[Fertilizer consumption (kilograms per hectare of arable land)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Forest area (% of land area)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Forest rents (% of GDP)]' role='measure' type='quantitative' />
      <column datatype='real' name='[GOAL 13: Climate Action (5 year moving average)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Methane (CH4) emissions from Building (Energy) (Mt CO2e)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Mineral rents (% of GDP)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Natural gas rents (% of GDP)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Nitrous oxide (N2O) emissions (total) excluding LULUCF (% change from 1990)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Oil rents (% of GDP)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Population density (people per sq. km of land area)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Renewable internal freshwater resources per capita (cubic meters)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Rural population growth (annual %)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Water productivity, total (constant 2015 US$ GDP per cubic meter of total freshwater withdrawal)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='environmental_predictors.csv' datatype='table' name='[__tableau_internal_object_id__].[environmental_predictors.csv_C4E0CB1711F946B080BA8EE5F35C6DE8]' role='measure' type='quantitative' />
      <column-instance column='[Aquaculture production (metric tons)]' derivation='Avg' name='[avg:Aquaculture production (metric tons):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Arable land (% of land area)]' derivation='Avg' name='[avg:Arable land (% of land area):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Capture fisheries production (metric tons)]' derivation='Avg' name='[avg:Capture fisheries production (metric tons):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Carbon dioxide (CO2) emissions excluding LULUCF per capita (t CO2e/capita)]' derivation='Avg' name='[avg:Carbon dioxide (CO2) emissions excluding LULUCF per capita (t CO2e/capita):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Coal rents (% of GDP)]' derivation='Avg' name='[avg:Coal rents (% of GDP):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Fertilizer consumption (kilograms per hectare of arable land)]' derivation='Avg' name='[avg:Fertilizer consumption (kilograms per hectare of arable land):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Forest area (% of land area)]' derivation='Avg' name='[avg:Forest area (% of land area):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Forest rents (% of GDP)]' derivation='Avg' name='[avg:Forest rents (% of GDP):qk]' pivot='key' type='quantitative' />
      <column-instance column='[GOAL 13: Climate Action (5 year moving average)]' derivation='Avg' name='[avg:GOAL 13: Climate Action (5 year moving average):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Methane (CH4) emissions from Building (Energy) (Mt CO2e)]' derivation='Avg' name='[avg:Methane (CH4) emissions from Building (Energy) (Mt CO2e):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Mineral rents (% of GDP)]' derivation='Avg' name='[avg:Mineral rents (% of GDP):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Natural gas rents (% of GDP)]' derivation='Avg' name='[avg:Natural gas rents (% of GDP):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Nitrous oxide (N2O) emissions (total) excluding LULUCF (% change from 1990)]' derivation='Avg' name='[avg:Nitrous oxide (N2O) emissions (total) excluding LULUCF (% change from 1990):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Oil rents (% of GDP)]' derivation='Avg' name='[avg:Oil rents (% of GDP):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Population density (people per sq. km of land area)]' derivation='Avg' name='[avg:Population density (people per sq. km of land area):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Renewable internal freshwater resources per capita (cubic meters)]' derivation='Avg' name='[avg:Renewable internal freshwater resources per capita (cubic meters):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Rural population growth (annual %)]' derivation='Avg' name='[avg:Rural population growth (annual %):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Water productivity, total (constant 2015 US$ GDP per cubic meter of total freshwater withdrawal)]' derivation='Avg' name='[avg:Water productivity, total (constant 2015 US$ GDP per cubic meter of total freshwater withdrawal):qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <analytic-model>
        <name>
          <field name='[AnalyticModel:{513deeca-ef57-4ab3-a1eb-00e45d62fec9}]' />
        </name>
        <analytic-model-specifications class='cluster-specifications'>
          <analysis-fields>
            <field name='[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Aquaculture production (metric tons):qk]' />
            <field name='[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Arable land (% of land area):qk]' />
            <field name='[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Capture fisheries production (metric tons):qk]' />
            <field name='[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Carbon dioxide (CO2) emissions excluding LULUCF per capita (t CO2e/capita):qk]' />
            <field name='[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Coal rents (% of GDP):qk]' />
            <field name='[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Fertilizer consumption (kilograms per hectare of arable land):qk]' />
            <field name='[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Forest area (% of land area):qk]' />
            <field name='[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Forest rents (% of GDP):qk]' />
            <field name='[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:GOAL 13: Climate Action (5 year moving average):qk]' />
            <field name='[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Methane (CH4) emissions from Building (Energy) (Mt CO2e):qk]' />
            <field name='[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Mineral rents (% of GDP):qk]' />
            <field name='[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Natural gas rents (% of GDP):qk]' />
            <field name='[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Nitrous oxide (N2O) emissions (total) excluding LULUCF (% change from 1990):qk]' />
            <field name='[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Oil rents (% of GDP):qk]' />
            <field name='[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Population density (people per sq. km of land area):qk]' />
            <field name='[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Renewable internal freshwater resources per capita (cubic meters):qk]' />
            <field name='[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Rural population growth (annual %):qk]' />
            <field name='[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Water productivity, total (constant 2015 US$ GDP per cubic meter of total freshwater withdrawal):qk]' />
          </analysis-fields>
          <filter-fields />
          <lod-fields />
          <number-of-desired-clusters>0</number-of-desired-clusters>
          <is-dissagregate>false</is-dissagregate>
        </analytic-model-specifications>
        <result-fields>
          <field name='[federated.01cgkm51l5oq0x10q382e1vejl59].[AdhocCluster:2]' />
        </result-fields>
      </analytic-model>
      <analytic-model>
        <name>
          <field name='[AnalyticModel:{f77f02b8-282d-401a-9347-4726b76790e4}]' />
        </name>
        <analytic-model-specifications class='cluster-specifications'>
          <analysis-fields>
            <field name='[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Aquaculture production (metric tons):qk]' />
            <field name='[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Arable land (% of land area):qk]' />
            <field name='[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Capture fisheries production (metric tons):qk]' />
            <field name='[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Carbon dioxide (CO2) emissions excluding LULUCF per capita (t CO2e/capita):qk]' />
            <field name='[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Coal rents (% of GDP):qk]' />
            <field name='[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Fertilizer consumption (kilograms per hectare of arable land):qk]' />
            <field name='[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Forest area (% of land area):qk]' />
            <field name='[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Forest rents (% of GDP):qk]' />
            <field name='[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:GOAL 13: Climate Action (5 year moving average):qk]' />
            <field name='[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Methane (CH4) emissions from Building (Energy) (Mt CO2e):qk]' />
            <field name='[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Mineral rents (% of GDP):qk]' />
            <field name='[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Natural gas rents (% of GDP):qk]' />
            <field name='[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Nitrous oxide (N2O) emissions (total) excluding LULUCF (% change from 1990):qk]' />
            <field name='[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Oil rents (% of GDP):qk]' />
            <field name='[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Population density (people per sq. km of land area):qk]' />
            <field name='[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Renewable internal freshwater resources per capita (cubic meters):qk]' />
            <field name='[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Rural population growth (annual %):qk]' />
            <field name='[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Water productivity, total (constant 2015 US$ GDP per cubic meter of total freshwater withdrawal):qk]' />
          </analysis-fields>
          <filter-fields />
          <lod-fields />
          <number-of-desired-clusters>0</number-of-desired-clusters>
          <is-dissagregate>false</is-dissagregate>
        </analytic-model-specifications>
        <result-fields />
      </analytic-model>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='environmental_predictors.csv' id='environmental_predictors.csv_C4E0CB1711F946B080BA8EE5F35C6DE8'>
            <properties context=''>
              <relation connection='textscan.1bqo8tn0ylvcp217j4xi601fo05m' name='environmental_predictors.csv' table='[environmental_predictors#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='CountryShortName' ordinal='0' />
                  <column datatype='real' name='Year' ordinal='1' />
                  <column datatype='real' name='Life expectancy at birth, total (years)' ordinal='2' />
                  <column datatype='real' name='Arable land (% of land area)' ordinal='3' />
                  <column datatype='real' name='Aquaculture production (metric tons)' ordinal='4' />
                  <column datatype='real' name='Forest rents (% of GDP)' ordinal='5' />
                  <column datatype='real' name='Fertilizer consumption (kilograms per hectare of arable land)' ordinal='6' />
                  <column datatype='real' name='Coal rents (% of GDP)' ordinal='7' />
                  <column datatype='real' name='Renewable internal freshwater resources per capita (cubic meters)' ordinal='8' />
                  <column datatype='real' name='Forest area (% of land area)' ordinal='9' />
                  <column datatype='real' name='Rural population growth (annual %)' ordinal='10' />
                  <column datatype='real' name='Carbon dioxide (CO2) emissions excluding LULUCF per capita (t CO2e/capita)' ordinal='11' />
                  <column datatype='real' name='Natural gas rents (% of GDP)' ordinal='12' />
                  <column datatype='real' name='GOAL 13: Climate Action (5 year moving average)' ordinal='13' />
                  <column datatype='real' name='Water productivity, total (constant 2015 US$ GDP per cubic meter of total freshwater withdrawal)' ordinal='14' />
                  <column datatype='real' name='Population density (people per sq. km of land area)' ordinal='15' />
                  <column datatype='real' name='Mineral rents (% of GDP)' ordinal='16' />
                  <column datatype='real' name='Oil rents (% of GDP)' ordinal='17' />
                  <column datatype='real' name='Methane (CH4) emissions from Building (Energy) (Mt CO2e)' ordinal='18' />
                  <column datatype='real' name='Nitrous oxide (N2O) emissions (total) excluding LULUCF (% change from 1990)' ordinal='19' />
                  <column datatype='real' name='Capture fisheries production (metric tons)' ordinal='20' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='health_predictors' inline='true' name='federated.0vh5wok1xft0gw17xhskh1bhtrdb' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='health_predictors' name='textscan.0j4lq7a1obdwpj17t4jfp0msscko'>
            <connection class='textscan' directory='D:/GitHub Repos/culminating-project-group-1/Week 8 - Analysis/JC' filename='health_predictors.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0j4lq7a1obdwpj17t4jfp0msscko' name='health_predictors.csv' table='[health_predictors#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='CountryShortName' ordinal='0' />
            <column datatype='real' name='Year' ordinal='1' />
            <column datatype='real' name='Life expectancy at birth, total (years)' ordinal='2' />
            <column datatype='real' name='Prevalence of undernourishment (% of population)' ordinal='3' />
            <column datatype='real' name='Incidence of tuberculosis (per 100,000 people)' ordinal='4' />
            <column datatype='real' name='Prevalence of overweight (modeled estimate, % of children under 5)' ordinal='5' />
            <column datatype='real' name='Domestic private health expenditure per capita (current US$)' ordinal='6' />
            <column datatype='real' name='Number of maternal deaths' ordinal='7' />
            <column datatype='real' name='People practicing open defecation (% of population)' ordinal='8' />
            <column datatype='real' name='Lifetime risk of maternal death (1 in: rate varies by country)' ordinal='9' />
            <column datatype='real' name='Lifetime risk of maternal death (%)' ordinal='10' />
            <column datatype='real' name='Total alcohol consumption per capita (liters of pure alcohol, projected estimates, 15+ years of age)' ordinal='11' />
            <column datatype='real' name='Population ages 0-14, total' ordinal='12' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0j4lq7a1obdwpj17t4jfp0msscko' name='health_predictors.csv' table='[health_predictors#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='CountryShortName' ordinal='0' />
            <column datatype='real' name='Year' ordinal='1' />
            <column datatype='real' name='Life expectancy at birth, total (years)' ordinal='2' />
            <column datatype='real' name='Prevalence of undernourishment (% of population)' ordinal='3' />
            <column datatype='real' name='Incidence of tuberculosis (per 100,000 people)' ordinal='4' />
            <column datatype='real' name='Prevalence of overweight (modeled estimate, % of children under 5)' ordinal='5' />
            <column datatype='real' name='Domestic private health expenditure per capita (current US$)' ordinal='6' />
            <column datatype='real' name='Number of maternal deaths' ordinal='7' />
            <column datatype='real' name='People practicing open defecation (% of population)' ordinal='8' />
            <column datatype='real' name='Lifetime risk of maternal death (1 in: rate varies by country)' ordinal='9' />
            <column datatype='real' name='Lifetime risk of maternal death (%)' ordinal='10' />
            <column datatype='real' name='Total alcohol consumption per capita (liters of pure alcohol, projected estimates, 15+ years of age)' ordinal='11' />
            <column datatype='real' name='Population ages 0-14, total' ordinal='12' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[health_predictors.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CountryShortName</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CountryShortName]</local-name>
            <parent-name>[health_predictors.csv]</parent-name>
            <remote-alias>CountryShortName</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[health_predictors.csv_8F42F0CAB74647D09CE650B2B5647606]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[health_predictors.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[health_predictors.csv_8F42F0CAB74647D09CE650B2B5647606]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Life expectancy at birth, total (years)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Life expectancy at birth, total (years)]</local-name>
            <parent-name>[health_predictors.csv]</parent-name>
            <remote-alias>Life expectancy at birth, total (years)</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[health_predictors.csv_8F42F0CAB74647D09CE650B2B5647606]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Prevalence of undernourishment (% of population)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Prevalence of undernourishment (% of population)]</local-name>
            <parent-name>[health_predictors.csv]</parent-name>
            <remote-alias>Prevalence of undernourishment (% of population)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[health_predictors.csv_8F42F0CAB74647D09CE650B2B5647606]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Incidence of tuberculosis (per 100,000 people)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Incidence of tuberculosis (per 100,000 people)]</local-name>
            <parent-name>[health_predictors.csv]</parent-name>
            <remote-alias>Incidence of tuberculosis (per 100,000 people)</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[health_predictors.csv_8F42F0CAB74647D09CE650B2B5647606]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Prevalence of overweight (modeled estimate, % of children under 5)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Prevalence of overweight (modeled estimate, % of children under 5)]</local-name>
            <parent-name>[health_predictors.csv]</parent-name>
            <remote-alias>Prevalence of overweight (modeled estimate, % of children under 5)</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[health_predictors.csv_8F42F0CAB74647D09CE650B2B5647606]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Domestic private health expenditure per capita (current US$)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Domestic private health expenditure per capita (current US$)]</local-name>
            <parent-name>[health_predictors.csv]</parent-name>
            <remote-alias>Domestic private health expenditure per capita (current US$)</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[health_predictors.csv_8F42F0CAB74647D09CE650B2B5647606]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of maternal deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Number of maternal deaths]</local-name>
            <parent-name>[health_predictors.csv]</parent-name>
            <remote-alias>Number of maternal deaths</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[health_predictors.csv_8F42F0CAB74647D09CE650B2B5647606]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>People practicing open defecation (% of population)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[People practicing open defecation (% of population)]</local-name>
            <parent-name>[health_predictors.csv]</parent-name>
            <remote-alias>People practicing open defecation (% of population)</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[health_predictors.csv_8F42F0CAB74647D09CE650B2B5647606]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Lifetime risk of maternal death (1 in: rate varies by country)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Lifetime risk of maternal death (1 in: rate varies by country)]</local-name>
            <parent-name>[health_predictors.csv]</parent-name>
            <remote-alias>Lifetime risk of maternal death (1 in: rate varies by country)</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[health_predictors.csv_8F42F0CAB74647D09CE650B2B5647606]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Lifetime risk of maternal death (%)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Lifetime risk of maternal death (%)]</local-name>
            <parent-name>[health_predictors.csv]</parent-name>
            <remote-alias>Lifetime risk of maternal death (%)</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[health_predictors.csv_8F42F0CAB74647D09CE650B2B5647606]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total alcohol consumption per capita (liters of pure alcohol, projected estimates, 15+ years of age)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total alcohol consumption per capita (liters of pure alcohol, projected estimates, 15+ years of age)]</local-name>
            <parent-name>[health_predictors.csv]</parent-name>
            <remote-alias>Total alcohol consumption per capita (liters of pure alcohol, projected estimates, 15+ years of age)</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[health_predictors.csv_8F42F0CAB74647D09CE650B2B5647606]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population ages 0-14, total</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Population ages 0-14, total]</local-name>
            <parent-name>[health_predictors.csv]</parent-name>
            <remote-alias>Population ages 0-14, total</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[health_predictors.csv_8F42F0CAB74647D09CE650B2B5647606]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Country Short Name' datatype='string' name='[CountryShortName]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='real' name='[Domestic private health expenditure per capita (current US$)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Incidence of tuberculosis (per 100,000 people)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Lifetime risk of maternal death (%)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Lifetime risk of maternal death (1 in: rate varies by country)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Number of maternal deaths]' role='measure' type='quantitative' />
      <column datatype='real' name='[People practicing open defecation (% of population)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Population ages 0-14, total]' role='measure' type='quantitative' />
      <column datatype='real' name='[Prevalence of overweight (modeled estimate, % of children under 5)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Prevalence of undernourishment (% of population)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Total alcohol consumption per capita (liters of pure alcohol, projected estimates, 15+ years of age)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='health_predictors.csv' datatype='table' name='[__tableau_internal_object_id__].[health_predictors.csv_8F42F0CAB74647D09CE650B2B5647606]' role='measure' type='quantitative' />
      <column-instance column='[Domestic private health expenditure per capita (current US$)]' derivation='Avg' name='[avg:Domestic private health expenditure per capita (current US$):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Incidence of tuberculosis (per 100,000 people)]' derivation='Avg' name='[avg:Incidence of tuberculosis (per 100,000 people):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Lifetime risk of maternal death (%)]' derivation='Avg' name='[avg:Lifetime risk of maternal death (%):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Lifetime risk of maternal death (1 in: rate varies by country)]' derivation='Avg' name='[avg:Lifetime risk of maternal death (1 in: rate varies by country):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of maternal deaths]' derivation='Avg' name='[avg:Number of maternal deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[People practicing open defecation (% of population)]' derivation='Avg' name='[avg:People practicing open defecation (% of population):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Population ages 0-14, total]' derivation='Avg' name='[avg:Population ages 0-14, total:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Prevalence of overweight (modeled estimate, % of children under 5)]' derivation='Avg' name='[avg:Prevalence of overweight (modeled estimate, % of children under 5):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Prevalence of undernourishment (% of population)]' derivation='Avg' name='[avg:Prevalence of undernourishment (% of population):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total alcohol consumption per capita (liters of pure alcohol, projected estimates, 15+ years of age)]' derivation='Avg' name='[avg:Total alcohol consumption per capita (liters of pure alcohol, projected estimates, 15+ years of age):qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <analytic-model>
        <name>
          <field name='[AnalyticModel:{78b05925-5a2f-4447-b79f-a92a35ccc233}]' />
        </name>
        <analytic-model-specifications class='cluster-specifications'>
          <analysis-fields>
            <field name='[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[avg:Domestic private health expenditure per capita (current US$):qk]' />
            <field name='[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[avg:Incidence of tuberculosis (per 100,000 people):qk]' />
            <field name='[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[avg:Lifetime risk of maternal death (%):qk]' />
            <field name='[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[avg:Lifetime risk of maternal death (1 in: rate varies by country):qk]' />
            <field name='[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[avg:Number of maternal deaths:qk]' />
            <field name='[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[avg:People practicing open defecation (% of population):qk]' />
            <field name='[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[avg:Population ages 0-14, total:qk]' />
            <field name='[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[avg:Prevalence of overweight (modeled estimate, % of children under 5):qk]' />
            <field name='[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[avg:Prevalence of undernourishment (% of population):qk]' />
            <field name='[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[avg:Total alcohol consumption per capita (liters of pure alcohol, projected estimates, 15+ years of age):qk]' />
          </analysis-fields>
          <filter-fields />
          <lod-fields />
          <number-of-desired-clusters>0</number-of-desired-clusters>
          <is-dissagregate>false</is-dissagregate>
        </analytic-model-specifications>
        <result-fields />
      </analytic-model>
      <analytic-model>
        <name>
          <field name='[AnalyticModel:{acc4996c-858f-45c4-9d8b-6a7b6abbd507}]' />
        </name>
        <analytic-model-specifications class='cluster-specifications'>
          <analysis-fields>
            <field name='[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[avg:Domestic private health expenditure per capita (current US$):qk]' />
            <field name='[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[avg:Incidence of tuberculosis (per 100,000 people):qk]' />
            <field name='[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[avg:Lifetime risk of maternal death (%):qk]' />
            <field name='[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[avg:Lifetime risk of maternal death (1 in: rate varies by country):qk]' />
            <field name='[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[avg:Number of maternal deaths:qk]' />
            <field name='[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[avg:People practicing open defecation (% of population):qk]' />
            <field name='[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[avg:Population ages 0-14, total:qk]' />
            <field name='[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[avg:Prevalence of overweight (modeled estimate, % of children under 5):qk]' />
            <field name='[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[avg:Prevalence of undernourishment (% of population):qk]' />
            <field name='[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[avg:Total alcohol consumption per capita (liters of pure alcohol, projected estimates, 15+ years of age):qk]' />
          </analysis-fields>
          <filter-fields />
          <lod-fields />
          <number-of-desired-clusters>0</number-of-desired-clusters>
          <is-dissagregate>false</is-dissagregate>
        </analytic-model-specifications>
        <result-fields>
          <field name='[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[AdhocCluster:2]' />
        </result-fields>
      </analytic-model>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='health_predictors.csv' id='health_predictors.csv_8F42F0CAB74647D09CE650B2B5647606'>
            <properties context=''>
              <relation connection='textscan.0j4lq7a1obdwpj17t4jfp0msscko' name='health_predictors.csv' table='[health_predictors#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='CountryShortName' ordinal='0' />
                  <column datatype='real' name='Year' ordinal='1' />
                  <column datatype='real' name='Life expectancy at birth, total (years)' ordinal='2' />
                  <column datatype='real' name='Prevalence of undernourishment (% of population)' ordinal='3' />
                  <column datatype='real' name='Incidence of tuberculosis (per 100,000 people)' ordinal='4' />
                  <column datatype='real' name='Prevalence of overweight (modeled estimate, % of children under 5)' ordinal='5' />
                  <column datatype='real' name='Domestic private health expenditure per capita (current US$)' ordinal='6' />
                  <column datatype='real' name='Number of maternal deaths' ordinal='7' />
                  <column datatype='real' name='People practicing open defecation (% of population)' ordinal='8' />
                  <column datatype='real' name='Lifetime risk of maternal death (1 in: rate varies by country)' ordinal='9' />
                  <column datatype='real' name='Lifetime risk of maternal death (%)' ordinal='10' />
                  <column datatype='real' name='Total alcohol consumption per capita (liters of pure alcohol, projected estimates, 15+ years of age)' ordinal='11' />
                  <column datatype='real' name='Population ages 0-14, total' ordinal='12' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Country List' inline='true' name='federated.0jmjax50bycgbl135loo1074ulkk' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Country List' name='excel-direct.07kam0t0ndy88r16rxufl10sohb9'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/GitHub Repos/culminating-project-group-1/Week 8 - Analysis/JC/Country List.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.07kam0t0ndy88r16rxufl10sohb9' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C172:no:A1:C172:0' header='yes' outcome='6'>
            <column datatype='string' name='CountryShortName' ordinal='0' />
            <column datatype='string' name='Income' ordinal='1' />
            <column datatype='string' name='Region' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.07kam0t0ndy88r16rxufl10sohb9' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C172:no:A1:C172:0' header='yes' outcome='6'>
            <column datatype='string' name='CountryShortName' ordinal='0' />
            <column datatype='string' name='Income' ordinal='1' />
            <column datatype='string' name='Region' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C172:no:A1:C172:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CountryShortName</remote-name>
            <remote-type>130</remote-type>
            <local-name>[CountryShortName]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>CountryShortName</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_A2CE8C3E3C314E808991A6430EA3FB3E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Income</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Income]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Income</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_A2CE8C3E3C314E808991A6430EA3FB3E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_A2CE8C3E3C314E808991A6430EA3FB3E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Country Short Name' datatype='string' name='[CountryShortName]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_A2CE8C3E3C314E808991A6430EA3FB3E]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_A2CE8C3E3C314E808991A6430EA3FB3E'>
            <properties context=''>
              <relation connection='excel-direct.07kam0t0ndy88r16rxufl10sohb9' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:C172:no:A1:C172:0' header='yes' outcome='6'>
                  <column datatype='string' name='CountryShortName' ordinal='0' />
                  <column datatype='string' name='Income' ordinal='1' />
                  <column datatype='string' name='Region' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='By Income Group'>
      <table>
        <view>
          <datasources>
            <datasource caption='Country List' name='federated.0jmjax50bycgbl135loo1074ulkk' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0jmjax50bycgbl135loo1074ulkk'>
            <column caption='Country Short Name' datatype='string' name='[CountryShortName]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Income]' role='dimension' type='nominal' />
            <column-instance column='[CountryShortName]' derivation='None' name='[none:CountryShortName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Income]' derivation='None' name='[none:Income:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0jmjax50bycgbl135loo1074ulkk].[Longitude (generated)]' field-type='quantitative' max='25359451.329844408' min='-19095513.015482429' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0jmjax50bycgbl135loo1074ulkk].[Latitude (generated)]' field-type='quantitative' max='16112475.466756612' min='-9163663.3133121189' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.0jmjax50bycgbl135loo1074ulkk].[none:Income:nk]' />
              <lod column='[federated.0jmjax50bycgbl135loo1074ulkk].[none:CountryShortName:nk]' />
              <geometry column='[federated.0jmjax50bycgbl135loo1074ulkk].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0jmjax50bycgbl135loo1074ulkk].[Latitude (generated)]</rows>
        <cols>[federated.0jmjax50bycgbl135loo1074ulkk].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{C8784680-D7B3-494D-A20E-FAFBD4C95AC9}' />
    </worksheet>
    <worksheet name='By Region'>
      <table>
        <view>
          <datasources>
            <datasource caption='Country List' name='federated.0jmjax50bycgbl135loo1074ulkk' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0jmjax50bycgbl135loo1074ulkk'>
            <column caption='Country Short Name' datatype='string' name='[CountryShortName]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column-instance column='[CountryShortName]' derivation='None' name='[none:CountryShortName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0jmjax50bycgbl135loo1074ulkk].[Longitude (generated)]' field-type='quantitative' max='24637413.213391669' min='-14844617.112408483' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0jmjax50bycgbl135loo1074ulkk].[Latitude (generated)]' field-type='quantitative' max='13889605.856805457' min='-8559029.3525648918' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.0jmjax50bycgbl135loo1074ulkk].[none:Region:nk]' />
              <lod column='[federated.0jmjax50bycgbl135loo1074ulkk].[none:CountryShortName:nk]' />
              <geometry column='[federated.0jmjax50bycgbl135loo1074ulkk].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0jmjax50bycgbl135loo1074ulkk].[Latitude (generated)]</rows>
        <cols>[federated.0jmjax50bycgbl135loo1074ulkk].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{90D6CC0D-F7BD-4CE3-8324-B9C3A8C2F74C}' />
    </worksheet>
    <worksheet name='Sheet 9'>
      <table>
        <view>
          <datasources>
            <datasource caption='health_predictors' name='federated.0vh5wok1xft0gw17xhskh1bhtrdb' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0vh5wok1xft0gw17xhskh1bhtrdb'>
            <column caption='Country Short Name' datatype='string' name='[CountryShortName]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[People practicing open defecation (% of population)]' role='measure' type='quantitative' />
            <column-instance column='[People practicing open defecation (% of population)]' derivation='Avg' name='[avg:People practicing open defecation (% of population):qk]' pivot='key' type='quantitative' />
            <column-instance column='[CountryShortName]' derivation='None' name='[none:CountryShortName:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[Longitude (generated)]' field-type='quantitative' max='17041649.601493482' min='-13097669.623220522' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[Latitude (generated)]' field-type='quantitative' max='9894574.543831801' min='-8528387.4282077868' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[avg:People practicing open defecation (% of population):qk]' />
              <lod column='[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[none:CountryShortName:nk]' />
              <geometry column='[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[Latitude (generated)]</rows>
        <cols>[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{5513EEBE-AAD5-4EC9-888C-ED24EABE04D4}' />
    </worksheet>
    <worksheet name='env'>
      <table>
        <view>
          <datasources>
            <datasource caption='environmental_predictors' name='federated.01cgkm51l5oq0x10q382e1vejl59' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.01cgkm51l5oq0x10q382e1vejl59'>
            <column auto-hidden='true' caption='Clusters' datatype='integer' hidden='true' is-adhoc-cluster='true' name='[AdhocCluster:1]' parent-model='[AnalyticModel:{f77f02b8-282d-401a-9347-4726b76790e4}]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='-1' value='Cluster Outliers' />
                <alias key='0' value='Not Clustered' />
                <alias key='1' value='Cluster 1' />
                <alias key='2' value='Cluster 2' />
                <alias key='3' value='Cluster 3' />
                <alias key='4' value='Cluster 4' />
                <alias key='5' value='Cluster 5' />
                <alias key='6' value='Cluster 6' />
                <alias key='7' value='Cluster 7' />
                <alias key='8' value='Cluster 8' />
                <alias key='9' value='Cluster 9' />
                <alias key='10' value='Cluster 10' />
                <alias key='11' value='Cluster 11' />
                <alias key='12' value='Cluster 12' />
                <alias key='13' value='Cluster 13' />
                <alias key='14' value='Cluster 14' />
                <alias key='15' value='Cluster 15' />
                <alias key='16' value='Cluster 16' />
                <alias key='17' value='Cluster 17' />
                <alias key='18' value='Cluster 18' />
                <alias key='19' value='Cluster 19' />
                <alias key='20' value='Cluster 20' />
                <alias key='21' value='Cluster 21' />
                <alias key='22' value='Cluster 22' />
                <alias key='23' value='Cluster 23' />
                <alias key='24' value='Cluster 24' />
                <alias key='25' value='Cluster 25' />
                <alias key='26' value='Cluster 26' />
                <alias key='27' value='Cluster 27' />
                <alias key='28' value='Cluster 28' />
                <alias key='29' value='Cluster 29' />
                <alias key='30' value='Cluster 30' />
                <alias key='31' value='Cluster 31' />
                <alias key='32' value='Cluster 32' />
                <alias key='33' value='Cluster 33' />
                <alias key='34' value='Cluster 34' />
                <alias key='35' value='Cluster 35' />
                <alias key='36' value='Cluster 36' />
                <alias key='37' value='Cluster 37' />
                <alias key='38' value='Cluster 38' />
                <alias key='39' value='Cluster 39' />
                <alias key='40' value='Cluster 40' />
                <alias key='41' value='Cluster 41' />
                <alias key='42' value='Cluster 42' />
                <alias key='43' value='Cluster 43' />
                <alias key='44' value='Cluster 44' />
                <alias key='45' value='Cluster 45' />
                <alias key='46' value='Cluster 46' />
                <alias key='47' value='Cluster 47' />
                <alias key='48' value='Cluster 48' />
                <alias key='49' value='Cluster 49' />
                <alias key='50' value='Cluster 50' />
              </aliases>
            </column>
            <column datatype='real' name='[Aquaculture production (metric tons)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Arable land (% of land area)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Capture fisheries production (metric tons)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Carbon dioxide (CO2) emissions excluding LULUCF per capita (t CO2e/capita)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Coal rents (% of GDP)]' role='measure' type='quantitative' />
            <column caption='Country Short Name' datatype='string' name='[CountryShortName]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Fertilizer consumption (kilograms per hectare of arable land)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Forest area (% of land area)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Forest rents (% of GDP)]' role='measure' type='quantitative' />
            <column datatype='real' name='[GOAL 13: Climate Action (5 year moving average)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Methane (CH4) emissions from Building (Energy) (Mt CO2e)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Mineral rents (% of GDP)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Natural gas rents (% of GDP)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Nitrous oxide (N2O) emissions (total) excluding LULUCF (% change from 1990)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Oil rents (% of GDP)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Population density (people per sq. km of land area)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Renewable internal freshwater resources per capita (cubic meters)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Rural population growth (annual %)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Water productivity, total (constant 2015 US$ GDP per cubic meter of total freshwater withdrawal)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Aquaculture production (metric tons)]' derivation='Avg' name='[avg:Aquaculture production (metric tons):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Arable land (% of land area)]' derivation='Avg' name='[avg:Arable land (% of land area):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Capture fisheries production (metric tons)]' derivation='Avg' name='[avg:Capture fisheries production (metric tons):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Carbon dioxide (CO2) emissions excluding LULUCF per capita (t CO2e/capita)]' derivation='Avg' name='[avg:Carbon dioxide (CO2) emissions excluding LULUCF per capita (t CO2e/capita):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Coal rents (% of GDP)]' derivation='Avg' name='[avg:Coal rents (% of GDP):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Fertilizer consumption (kilograms per hectare of arable land)]' derivation='Avg' name='[avg:Fertilizer consumption (kilograms per hectare of arable land):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forest area (% of land area)]' derivation='Avg' name='[avg:Forest area (% of land area):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forest rents (% of GDP)]' derivation='Avg' name='[avg:Forest rents (% of GDP):qk]' pivot='key' type='quantitative' />
            <column-instance column='[GOAL 13: Climate Action (5 year moving average)]' derivation='Avg' name='[avg:GOAL 13: Climate Action (5 year moving average):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Methane (CH4) emissions from Building (Energy) (Mt CO2e)]' derivation='Avg' name='[avg:Methane (CH4) emissions from Building (Energy) (Mt CO2e):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Mineral rents (% of GDP)]' derivation='Avg' name='[avg:Mineral rents (% of GDP):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Natural gas rents (% of GDP)]' derivation='Avg' name='[avg:Natural gas rents (% of GDP):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Nitrous oxide (N2O) emissions (total) excluding LULUCF (% change from 1990)]' derivation='Avg' name='[avg:Nitrous oxide (N2O) emissions (total) excluding LULUCF (% change from 1990):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Oil rents (% of GDP)]' derivation='Avg' name='[avg:Oil rents (% of GDP):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population density (people per sq. km of land area)]' derivation='Avg' name='[avg:Population density (people per sq. km of land area):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Renewable internal freshwater resources per capita (cubic meters)]' derivation='Avg' name='[avg:Renewable internal freshwater resources per capita (cubic meters):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Rural population growth (annual %)]' derivation='Avg' name='[avg:Rural population growth (annual %):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Water productivity, total (constant 2015 US$ GDP per cubic meter of total freshwater withdrawal)]' derivation='Avg' name='[avg:Water productivity, total (constant 2015 US$ GDP per cubic meter of total freshwater withdrawal):qk]' pivot='key' type='quantitative' />
            <column-instance column='[AdhocCluster:1]' derivation='None' is-adhoc-cluster='true' name='[none:AdhocCluster:1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[CountryShortName]' derivation='None' name='[none:CountryShortName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.01cgkm51l5oq0x10q382e1vejl59].[none:Year:qk]' included-values='in-range'>
            <min>2005.0</min>
            <max>2005.0</max>
          </filter>
          <slices>
            <column>[federated.01cgkm51l5oq0x10q382e1vejl59].[none:Year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Aquaculture production (metric tons):qk]' />
              <lod column='[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Arable land (% of land area):qk]' />
              <lod column='[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Capture fisheries production (metric tons):qk]' />
              <lod column='[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Carbon dioxide (CO2) emissions excluding LULUCF per capita (t CO2e/capita):qk]' />
              <lod column='[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Coal rents (% of GDP):qk]' />
              <lod column='[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Fertilizer consumption (kilograms per hectare of arable land):qk]' />
              <lod column='[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Forest area (% of land area):qk]' />
              <lod column='[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Forest rents (% of GDP):qk]' />
              <lod column='[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:GOAL 13: Climate Action (5 year moving average):qk]' />
              <lod column='[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Methane (CH4) emissions from Building (Energy) (Mt CO2e):qk]' />
              <lod column='[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Mineral rents (% of GDP):qk]' />
              <lod column='[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Natural gas rents (% of GDP):qk]' />
              <lod column='[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Nitrous oxide (N2O) emissions (total) excluding LULUCF (% change from 1990):qk]' />
              <lod column='[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Oil rents (% of GDP):qk]' />
              <lod column='[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Population density (people per sq. km of land area):qk]' />
              <lod column='[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Renewable internal freshwater resources per capita (cubic meters):qk]' />
              <lod column='[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Rural population growth (annual %):qk]' />
              <lod column='[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Water productivity, total (constant 2015 US$ GDP per cubic meter of total freshwater withdrawal):qk]' />
              <lod column='[federated.01cgkm51l5oq0x10q382e1vejl59].[none:CountryShortName:nk]' />
              <color column='[federated.01cgkm51l5oq0x10q382e1vejl59].[none:AdhocCluster:1:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.01cgkm51l5oq0x10q382e1vejl59].[Latitude (generated)]</rows>
        <cols>[federated.01cgkm51l5oq0x10q382e1vejl59].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{D737B8B4-74AC-483E-AFF3-B019D7748D98}' />
    </worksheet>
    <worksheet name='env_kMeans'>
      <table>
        <view>
          <datasources>
            <datasource caption='environmental_predictors' name='federated.01cgkm51l5oq0x10q382e1vejl59' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.01cgkm51l5oq0x10q382e1vejl59'>
            <column auto-hidden='true' caption='Clusters (1)' datatype='integer' hidden='true' is-adhoc-cluster='true' name='[AdhocCluster:2]' parent-model='[AnalyticModel:{513deeca-ef57-4ab3-a1eb-00e45d62fec9}]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='-1' value='Cluster Outliers' />
                <alias key='0' value='Not Clustered' />
                <alias key='1' value='Cluster 1' />
                <alias key='2' value='Cluster 2' />
                <alias key='3' value='Cluster 3' />
                <alias key='4' value='Cluster 4' />
                <alias key='5' value='Cluster 5' />
                <alias key='6' value='Cluster 6' />
                <alias key='7' value='Cluster 7' />
                <alias key='8' value='Cluster 8' />
                <alias key='9' value='Cluster 9' />
                <alias key='10' value='Cluster 10' />
                <alias key='11' value='Cluster 11' />
                <alias key='12' value='Cluster 12' />
                <alias key='13' value='Cluster 13' />
                <alias key='14' value='Cluster 14' />
                <alias key='15' value='Cluster 15' />
                <alias key='16' value='Cluster 16' />
                <alias key='17' value='Cluster 17' />
                <alias key='18' value='Cluster 18' />
                <alias key='19' value='Cluster 19' />
                <alias key='20' value='Cluster 20' />
                <alias key='21' value='Cluster 21' />
                <alias key='22' value='Cluster 22' />
                <alias key='23' value='Cluster 23' />
                <alias key='24' value='Cluster 24' />
                <alias key='25' value='Cluster 25' />
                <alias key='26' value='Cluster 26' />
                <alias key='27' value='Cluster 27' />
                <alias key='28' value='Cluster 28' />
                <alias key='29' value='Cluster 29' />
                <alias key='30' value='Cluster 30' />
                <alias key='31' value='Cluster 31' />
                <alias key='32' value='Cluster 32' />
                <alias key='33' value='Cluster 33' />
                <alias key='34' value='Cluster 34' />
                <alias key='35' value='Cluster 35' />
                <alias key='36' value='Cluster 36' />
                <alias key='37' value='Cluster 37' />
                <alias key='38' value='Cluster 38' />
                <alias key='39' value='Cluster 39' />
                <alias key='40' value='Cluster 40' />
                <alias key='41' value='Cluster 41' />
                <alias key='42' value='Cluster 42' />
                <alias key='43' value='Cluster 43' />
                <alias key='44' value='Cluster 44' />
                <alias key='45' value='Cluster 45' />
                <alias key='46' value='Cluster 46' />
                <alias key='47' value='Cluster 47' />
                <alias key='48' value='Cluster 48' />
                <alias key='49' value='Cluster 49' />
                <alias key='50' value='Cluster 50' />
              </aliases>
            </column>
            <column datatype='real' name='[Aquaculture production (metric tons)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Arable land (% of land area)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Capture fisheries production (metric tons)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Carbon dioxide (CO2) emissions excluding LULUCF per capita (t CO2e/capita)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Coal rents (% of GDP)]' role='measure' type='quantitative' />
            <column caption='Country Short Name' datatype='string' name='[CountryShortName]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Fertilizer consumption (kilograms per hectare of arable land)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Forest area (% of land area)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Forest rents (% of GDP)]' role='measure' type='quantitative' />
            <column datatype='real' name='[GOAL 13: Climate Action (5 year moving average)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Methane (CH4) emissions from Building (Energy) (Mt CO2e)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Mineral rents (% of GDP)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Natural gas rents (% of GDP)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Nitrous oxide (N2O) emissions (total) excluding LULUCF (% change from 1990)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Oil rents (% of GDP)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Population density (people per sq. km of land area)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Renewable internal freshwater resources per capita (cubic meters)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Rural population growth (annual %)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Water productivity, total (constant 2015 US$ GDP per cubic meter of total freshwater withdrawal)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Aquaculture production (metric tons)]' derivation='Avg' name='[avg:Aquaculture production (metric tons):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Arable land (% of land area)]' derivation='Avg' name='[avg:Arable land (% of land area):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Capture fisheries production (metric tons)]' derivation='Avg' name='[avg:Capture fisheries production (metric tons):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Carbon dioxide (CO2) emissions excluding LULUCF per capita (t CO2e/capita)]' derivation='Avg' name='[avg:Carbon dioxide (CO2) emissions excluding LULUCF per capita (t CO2e/capita):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Coal rents (% of GDP)]' derivation='Avg' name='[avg:Coal rents (% of GDP):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Fertilizer consumption (kilograms per hectare of arable land)]' derivation='Avg' name='[avg:Fertilizer consumption (kilograms per hectare of arable land):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forest area (% of land area)]' derivation='Avg' name='[avg:Forest area (% of land area):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forest rents (% of GDP)]' derivation='Avg' name='[avg:Forest rents (% of GDP):qk]' pivot='key' type='quantitative' />
            <column-instance column='[GOAL 13: Climate Action (5 year moving average)]' derivation='Avg' name='[avg:GOAL 13: Climate Action (5 year moving average):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Methane (CH4) emissions from Building (Energy) (Mt CO2e)]' derivation='Avg' name='[avg:Methane (CH4) emissions from Building (Energy) (Mt CO2e):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Mineral rents (% of GDP)]' derivation='Avg' name='[avg:Mineral rents (% of GDP):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Natural gas rents (% of GDP)]' derivation='Avg' name='[avg:Natural gas rents (% of GDP):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Nitrous oxide (N2O) emissions (total) excluding LULUCF (% change from 1990)]' derivation='Avg' name='[avg:Nitrous oxide (N2O) emissions (total) excluding LULUCF (% change from 1990):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Oil rents (% of GDP)]' derivation='Avg' name='[avg:Oil rents (% of GDP):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population density (people per sq. km of land area)]' derivation='Avg' name='[avg:Population density (people per sq. km of land area):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Renewable internal freshwater resources per capita (cubic meters)]' derivation='Avg' name='[avg:Renewable internal freshwater resources per capita (cubic meters):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Rural population growth (annual %)]' derivation='Avg' name='[avg:Rural population growth (annual %):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Water productivity, total (constant 2015 US$ GDP per cubic meter of total freshwater withdrawal)]' derivation='Avg' name='[avg:Water productivity, total (constant 2015 US$ GDP per cubic meter of total freshwater withdrawal):qk]' pivot='key' type='quantitative' />
            <column-instance column='[AdhocCluster:2]' derivation='None' is-adhoc-cluster='true' name='[none:AdhocCluster:2:ok]' pivot='key' type='ordinal' />
            <column-instance column='[CountryShortName]' derivation='None' name='[none:CountryShortName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01cgkm51l5oq0x10q382e1vejl59].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Aquaculture production (metric tons):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Arable land (\% of land area):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Capture fisheries production (metric tons):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Carbon dioxide (CO2) emissions excluding LULUCF per capita (t CO2e/capita):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Coal rents (\% of GDP):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Fertilizer consumption (kilograms per hectare of arable land):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Forest area (\% of land area):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Forest rents (\% of GDP):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:GOAL 13: Climate Action (5 year moving average):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Methane (CH4) emissions from Building (Energy) (Mt CO2e):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Mineral rents (\% of GDP):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Natural gas rents (\% of GDP):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Nitrous oxide (N2O) emissions (total) excluding LULUCF (\% change from 1990):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Oil rents (\% of GDP):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Population density (people per sq. km of land area):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Renewable internal freshwater resources per capita (cubic meters):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Rural population growth (annual \%):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Water productivity, total (constant 2015 US$ GDP per cubic meter of total freshwater withdrawal):qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.01cgkm51l5oq0x10q382e1vejl59].[none:Year:qk]' included-values='in-range'>
            <min>2005.0</min>
            <max>2005.0</max>
          </filter>
          <slices>
            <column>[federated.01cgkm51l5oq0x10q382e1vejl59].[none:Year:qk]</column>
            <column>[federated.01cgkm51l5oq0x10q382e1vejl59].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.01cgkm51l5oq0x10q382e1vejl59].[Multiple Values]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.01cgkm51l5oq0x10q382e1vejl59].[none:CountryShortName:nk] / [federated.01cgkm51l5oq0x10q382e1vejl59].[none:AdhocCluster:2:ok])</rows>
        <cols>[federated.01cgkm51l5oq0x10q382e1vejl59].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{61D29E9E-FB19-4659-A52C-F8D7883F420A}' />
    </worksheet>
    <worksheet name='health'>
      <table>
        <view>
          <datasources>
            <datasource caption='health_predictors' name='federated.0vh5wok1xft0gw17xhskh1bhtrdb' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0vh5wok1xft0gw17xhskh1bhtrdb'>
            <column auto-hidden='true' caption='Clusters' datatype='integer' hidden='true' is-adhoc-cluster='true' name='[AdhocCluster:1]' parent-model='[AnalyticModel:{78b05925-5a2f-4447-b79f-a92a35ccc233}]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='-1' value='Cluster Outliers' />
                <alias key='0' value='Not Clustered' />
                <alias key='1' value='Cluster 1' />
                <alias key='2' value='Cluster 2' />
                <alias key='3' value='Cluster 3' />
                <alias key='4' value='Cluster 4' />
                <alias key='5' value='Cluster 5' />
                <alias key='6' value='Cluster 6' />
                <alias key='7' value='Cluster 7' />
                <alias key='8' value='Cluster 8' />
                <alias key='9' value='Cluster 9' />
                <alias key='10' value='Cluster 10' />
                <alias key='11' value='Cluster 11' />
                <alias key='12' value='Cluster 12' />
                <alias key='13' value='Cluster 13' />
                <alias key='14' value='Cluster 14' />
                <alias key='15' value='Cluster 15' />
                <alias key='16' value='Cluster 16' />
                <alias key='17' value='Cluster 17' />
                <alias key='18' value='Cluster 18' />
                <alias key='19' value='Cluster 19' />
                <alias key='20' value='Cluster 20' />
                <alias key='21' value='Cluster 21' />
                <alias key='22' value='Cluster 22' />
                <alias key='23' value='Cluster 23' />
                <alias key='24' value='Cluster 24' />
                <alias key='25' value='Cluster 25' />
                <alias key='26' value='Cluster 26' />
                <alias key='27' value='Cluster 27' />
                <alias key='28' value='Cluster 28' />
                <alias key='29' value='Cluster 29' />
                <alias key='30' value='Cluster 30' />
                <alias key='31' value='Cluster 31' />
                <alias key='32' value='Cluster 32' />
                <alias key='33' value='Cluster 33' />
                <alias key='34' value='Cluster 34' />
                <alias key='35' value='Cluster 35' />
                <alias key='36' value='Cluster 36' />
                <alias key='37' value='Cluster 37' />
                <alias key='38' value='Cluster 38' />
                <alias key='39' value='Cluster 39' />
                <alias key='40' value='Cluster 40' />
                <alias key='41' value='Cluster 41' />
                <alias key='42' value='Cluster 42' />
                <alias key='43' value='Cluster 43' />
                <alias key='44' value='Cluster 44' />
                <alias key='45' value='Cluster 45' />
                <alias key='46' value='Cluster 46' />
                <alias key='47' value='Cluster 47' />
                <alias key='48' value='Cluster 48' />
                <alias key='49' value='Cluster 49' />
                <alias key='50' value='Cluster 50' />
              </aliases>
            </column>
            <column caption='Country Short Name' datatype='string' name='[CountryShortName]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Domestic private health expenditure per capita (current US$)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Incidence of tuberculosis (per 100,000 people)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Lifetime risk of maternal death (%)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Lifetime risk of maternal death (1 in: rate varies by country)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Number of maternal deaths]' role='measure' type='quantitative' />
            <column datatype='real' name='[People practicing open defecation (% of population)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Population ages 0-14, total]' role='measure' type='quantitative' />
            <column datatype='real' name='[Prevalence of overweight (modeled estimate, % of children under 5)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Prevalence of undernourishment (% of population)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Total alcohol consumption per capita (liters of pure alcohol, projected estimates, 15+ years of age)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Domestic private health expenditure per capita (current US$)]' derivation='Avg' name='[avg:Domestic private health expenditure per capita (current US$):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Incidence of tuberculosis (per 100,000 people)]' derivation='Avg' name='[avg:Incidence of tuberculosis (per 100,000 people):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Lifetime risk of maternal death (%)]' derivation='Avg' name='[avg:Lifetime risk of maternal death (%):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Lifetime risk of maternal death (1 in: rate varies by country)]' derivation='Avg' name='[avg:Lifetime risk of maternal death (1 in: rate varies by country):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of maternal deaths]' derivation='Avg' name='[avg:Number of maternal deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[People practicing open defecation (% of population)]' derivation='Avg' name='[avg:People practicing open defecation (% of population):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population ages 0-14, total]' derivation='Avg' name='[avg:Population ages 0-14, total:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Prevalence of overweight (modeled estimate, % of children under 5)]' derivation='Avg' name='[avg:Prevalence of overweight (modeled estimate, % of children under 5):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Prevalence of undernourishment (% of population)]' derivation='Avg' name='[avg:Prevalence of undernourishment (% of population):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total alcohol consumption per capita (liters of pure alcohol, projected estimates, 15+ years of age)]' derivation='Avg' name='[avg:Total alcohol consumption per capita (liters of pure alcohol, projected estimates, 15+ years of age):qk]' pivot='key' type='quantitative' />
            <column-instance column='[AdhocCluster:1]' derivation='None' is-adhoc-cluster='true' name='[none:AdhocCluster:1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[CountryShortName]' derivation='None' name='[none:CountryShortName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[none:Year:qk]' included-values='in-range'>
            <min>2005.0</min>
            <max>2005.0</max>
          </filter>
          <slices>
            <column>[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[none:Year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[avg:Domestic private health expenditure per capita (current US$):qk]' />
              <lod column='[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[avg:Incidence of tuberculosis (per 100,000 people):qk]' />
              <lod column='[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[avg:Lifetime risk of maternal death (%):qk]' />
              <lod column='[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[avg:Lifetime risk of maternal death (1 in: rate varies by country):qk]' />
              <lod column='[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[avg:Number of maternal deaths:qk]' />
              <lod column='[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[avg:People practicing open defecation (% of population):qk]' />
              <lod column='[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[avg:Population ages 0-14, total:qk]' />
              <lod column='[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[avg:Prevalence of overweight (modeled estimate, % of children under 5):qk]' />
              <lod column='[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[avg:Prevalence of undernourishment (% of population):qk]' />
              <lod column='[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[avg:Total alcohol consumption per capita (liters of pure alcohol, projected estimates, 15+ years of age):qk]' />
              <lod column='[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[none:CountryShortName:nk]' />
              <color column='[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[none:AdhocCluster:1:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[Latitude (generated)]</rows>
        <cols>[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{EA9402BF-2F8E-4CDE-93C9-2A894F331D37}' />
    </worksheet>
    <worksheet name='health_kMeans'>
      <table>
        <view>
          <datasources>
            <datasource caption='health_predictors' name='federated.0vh5wok1xft0gw17xhskh1bhtrdb' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0vh5wok1xft0gw17xhskh1bhtrdb'>
            <column auto-hidden='true' caption='Clusters (1)' datatype='integer' hidden='true' is-adhoc-cluster='true' name='[AdhocCluster:2]' parent-model='[AnalyticModel:{acc4996c-858f-45c4-9d8b-6a7b6abbd507}]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='-1' value='Cluster Outliers' />
                <alias key='0' value='Not Clustered' />
                <alias key='1' value='Cluster 1' />
                <alias key='2' value='Cluster 2' />
                <alias key='3' value='Cluster 3' />
                <alias key='4' value='Cluster 4' />
                <alias key='5' value='Cluster 5' />
                <alias key='6' value='Cluster 6' />
                <alias key='7' value='Cluster 7' />
                <alias key='8' value='Cluster 8' />
                <alias key='9' value='Cluster 9' />
                <alias key='10' value='Cluster 10' />
                <alias key='11' value='Cluster 11' />
                <alias key='12' value='Cluster 12' />
                <alias key='13' value='Cluster 13' />
                <alias key='14' value='Cluster 14' />
                <alias key='15' value='Cluster 15' />
                <alias key='16' value='Cluster 16' />
                <alias key='17' value='Cluster 17' />
                <alias key='18' value='Cluster 18' />
                <alias key='19' value='Cluster 19' />
                <alias key='20' value='Cluster 20' />
                <alias key='21' value='Cluster 21' />
                <alias key='22' value='Cluster 22' />
                <alias key='23' value='Cluster 23' />
                <alias key='24' value='Cluster 24' />
                <alias key='25' value='Cluster 25' />
                <alias key='26' value='Cluster 26' />
                <alias key='27' value='Cluster 27' />
                <alias key='28' value='Cluster 28' />
                <alias key='29' value='Cluster 29' />
                <alias key='30' value='Cluster 30' />
                <alias key='31' value='Cluster 31' />
                <alias key='32' value='Cluster 32' />
                <alias key='33' value='Cluster 33' />
                <alias key='34' value='Cluster 34' />
                <alias key='35' value='Cluster 35' />
                <alias key='36' value='Cluster 36' />
                <alias key='37' value='Cluster 37' />
                <alias key='38' value='Cluster 38' />
                <alias key='39' value='Cluster 39' />
                <alias key='40' value='Cluster 40' />
                <alias key='41' value='Cluster 41' />
                <alias key='42' value='Cluster 42' />
                <alias key='43' value='Cluster 43' />
                <alias key='44' value='Cluster 44' />
                <alias key='45' value='Cluster 45' />
                <alias key='46' value='Cluster 46' />
                <alias key='47' value='Cluster 47' />
                <alias key='48' value='Cluster 48' />
                <alias key='49' value='Cluster 49' />
                <alias key='50' value='Cluster 50' />
              </aliases>
            </column>
            <column caption='Country Short Name' datatype='string' name='[CountryShortName]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Domestic private health expenditure per capita (current US$)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Incidence of tuberculosis (per 100,000 people)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Lifetime risk of maternal death (%)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Lifetime risk of maternal death (1 in: rate varies by country)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Number of maternal deaths]' role='measure' type='quantitative' />
            <column datatype='real' name='[People practicing open defecation (% of population)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Population ages 0-14, total]' role='measure' type='quantitative' />
            <column datatype='real' name='[Prevalence of overweight (modeled estimate, % of children under 5)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Prevalence of undernourishment (% of population)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Total alcohol consumption per capita (liters of pure alcohol, projected estimates, 15+ years of age)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Domestic private health expenditure per capita (current US$)]' derivation='Avg' name='[avg:Domestic private health expenditure per capita (current US$):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Incidence of tuberculosis (per 100,000 people)]' derivation='Avg' name='[avg:Incidence of tuberculosis (per 100,000 people):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Lifetime risk of maternal death (%)]' derivation='Avg' name='[avg:Lifetime risk of maternal death (%):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Lifetime risk of maternal death (1 in: rate varies by country)]' derivation='Avg' name='[avg:Lifetime risk of maternal death (1 in: rate varies by country):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of maternal deaths]' derivation='Avg' name='[avg:Number of maternal deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[People practicing open defecation (% of population)]' derivation='Avg' name='[avg:People practicing open defecation (% of population):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population ages 0-14, total]' derivation='Avg' name='[avg:Population ages 0-14, total:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Prevalence of overweight (modeled estimate, % of children under 5)]' derivation='Avg' name='[avg:Prevalence of overweight (modeled estimate, % of children under 5):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Prevalence of undernourishment (% of population)]' derivation='Avg' name='[avg:Prevalence of undernourishment (% of population):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total alcohol consumption per capita (liters of pure alcohol, projected estimates, 15+ years of age)]' derivation='Avg' name='[avg:Total alcohol consumption per capita (liters of pure alcohol, projected estimates, 15+ years of age):qk]' pivot='key' type='quantitative' />
            <column-instance column='[AdhocCluster:2]' derivation='None' is-adhoc-cluster='true' name='[none:AdhocCluster:2:ok]' pivot='key' type='ordinal' />
            <column-instance column='[CountryShortName]' derivation='None' name='[none:CountryShortName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[avg:Domestic private health expenditure per capita (current US$):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[avg:Incidence of tuberculosis (per 100,000 people):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[avg:Lifetime risk of maternal death (\%):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[avg:Lifetime risk of maternal death (1 in: rate varies by country):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[avg:Number of maternal deaths:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[avg:People practicing open defecation (\% of population):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[avg:Population ages 0-14, total:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[avg:Prevalence of overweight (modeled estimate, \% of children under 5):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[avg:Prevalence of undernourishment (\% of population):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[avg:Total alcohol consumption per capita (liters of pure alcohol, projected estimates, 15+ years of age):qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[none:Year:qk]' included-values='in-range'>
            <min>2005.0</min>
            <max>2005.0</max>
          </filter>
          <slices>
            <column>[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[none:Year:qk]</column>
            <column>[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[Multiple Values]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0vh5wok1xft0gw17xhskh1bhtrdb].[none:CountryShortName:nk] / [federated.0vh5wok1xft0gw17xhskh1bhtrdb].[none:AdhocCluster:2:ok])</rows>
        <cols>[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{46397701-6DDE-48BB-83B1-E9607C71B6C9}' />
    </worksheet>
    <worksheet name='socio'>
      <table>
        <view>
          <datasources>
            <datasource caption='socioeconomic_predictors' name='federated.0cl0ztz1eeohc51e85dpd1v5fkta' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0cl0ztz1eeohc51e85dpd1v5fkta'>
            <column auto-hidden='true' caption='Clusters' datatype='integer' hidden='true' is-adhoc-cluster='true' name='[AdhocCluster:1]' parent-model='[AnalyticModel:{5321eba1-2efc-4fb9-a2c4-4458fd3c9fd1}]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='-1' value='Cluster Outliers' />
                <alias key='0' value='Not Clustered' />
                <alias key='1' value='Cluster 1' />
                <alias key='2' value='Cluster 2' />
                <alias key='3' value='Cluster 3' />
                <alias key='4' value='Cluster 4' />
                <alias key='5' value='Cluster 5' />
                <alias key='6' value='Cluster 6' />
                <alias key='7' value='Cluster 7' />
                <alias key='8' value='Cluster 8' />
                <alias key='9' value='Cluster 9' />
                <alias key='10' value='Cluster 10' />
                <alias key='11' value='Cluster 11' />
                <alias key='12' value='Cluster 12' />
                <alias key='13' value='Cluster 13' />
                <alias key='14' value='Cluster 14' />
                <alias key='15' value='Cluster 15' />
                <alias key='16' value='Cluster 16' />
                <alias key='17' value='Cluster 17' />
                <alias key='18' value='Cluster 18' />
                <alias key='19' value='Cluster 19' />
                <alias key='20' value='Cluster 20' />
                <alias key='21' value='Cluster 21' />
                <alias key='22' value='Cluster 22' />
                <alias key='23' value='Cluster 23' />
                <alias key='24' value='Cluster 24' />
                <alias key='25' value='Cluster 25' />
                <alias key='26' value='Cluster 26' />
                <alias key='27' value='Cluster 27' />
                <alias key='28' value='Cluster 28' />
                <alias key='29' value='Cluster 29' />
                <alias key='30' value='Cluster 30' />
                <alias key='31' value='Cluster 31' />
                <alias key='32' value='Cluster 32' />
                <alias key='33' value='Cluster 33' />
                <alias key='34' value='Cluster 34' />
                <alias key='35' value='Cluster 35' />
                <alias key='36' value='Cluster 36' />
                <alias key='37' value='Cluster 37' />
                <alias key='38' value='Cluster 38' />
                <alias key='39' value='Cluster 39' />
                <alias key='40' value='Cluster 40' />
                <alias key='41' value='Cluster 41' />
                <alias key='42' value='Cluster 42' />
                <alias key='43' value='Cluster 43' />
                <alias key='44' value='Cluster 44' />
                <alias key='45' value='Cluster 45' />
                <alias key='46' value='Cluster 46' />
                <alias key='47' value='Cluster 47' />
                <alias key='48' value='Cluster 48' />
                <alias key='49' value='Cluster 49' />
                <alias key='50' value='Cluster 50' />
              </aliases>
            </column>
            <column datatype='real' name='[Adjusted savings: energy depletion (% of GNI)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Agriculture, forestry, and fishing, value added per worker (constant 2015 US$)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Claims on central government, etc. (% GDP)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Commercial bank branches (per 100,000 adults)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Communications, computer, etc. (% of service exports, BoP)]' role='measure' type='quantitative' />
            <column caption='Country Short Name' datatype='string' name='[CountryShortName]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[External balance on goods and services (% of GDP)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Final consumption expenditure (annual % growth)]' role='measure' type='quantitative' />
            <column datatype='real' name='[GOAL 11: Sustainable Cities and Communities (5 year moving average)]' role='measure' type='quantitative' />
            <column caption='Income Group Low income' datatype='integer' name='[Income Group_Low income]' role='measure' type='quantitative' />
            <column caption='Income Group Upper middle income' datatype='integer' name='[Income Group_Upper middle income]' role='measure' type='quantitative' />
            <column datatype='real' name='[Inflation, GDP deflator (annual %)]' role='measure' type='quantitative' />
            <column datatype='real' name='[International tourism, expenditures for travel items (current US$)]' role='measure' type='quantitative' />
            <column datatype='real' name='[International tourism, number of arrivals]' role='measure' type='quantitative' />
            <column datatype='real' name='[Ores and metals imports (% of merchandise imports)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Primary education, pupils]' role='measure' type='quantitative' />
            <column caption='Region Latin America &amp; Caribbean' datatype='integer' name='[Region_Latin America &amp; Caribbean]' role='measure' type='quantitative' />
            <column caption='Region South Asia' datatype='integer' name='[Region_South Asia]' role='measure' type='quantitative' />
            <column caption='Region Sub-Saharan Africa' datatype='integer' name='[Region_Sub-Saharan Africa]' role='measure' type='quantitative' />
            <column datatype='real' name='[Travel services (% of commercial service imports)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Unemployment, youth total (% of total labor force ages 15-24) (modeled ILO estimate)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Adjusted savings: energy depletion (% of GNI)]' derivation='Avg' name='[avg:Adjusted savings: energy depletion (% of GNI):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Agriculture, forestry, and fishing, value added per worker (constant 2015 US$)]' derivation='Avg' name='[avg:Agriculture, forestry, and fishing, value added per worker (constant 2015 US$):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Claims on central government, etc. (% GDP)]' derivation='Avg' name='[avg:Claims on central government, etc. (% GDP):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Commercial bank branches (per 100,000 adults)]' derivation='Avg' name='[avg:Commercial bank branches (per 100,000 adults):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Communications, computer, etc. (% of service exports, BoP)]' derivation='Avg' name='[avg:Communications, computer, etc. (% of service exports, BoP):qk]' pivot='key' type='quantitative' />
            <column-instance column='[External balance on goods and services (% of GDP)]' derivation='Avg' name='[avg:External balance on goods and services (% of GDP):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Final consumption expenditure (annual % growth)]' derivation='Avg' name='[avg:Final consumption expenditure (annual % growth):qk]' pivot='key' type='quantitative' />
            <column-instance column='[GOAL 11: Sustainable Cities and Communities (5 year moving average)]' derivation='Avg' name='[avg:GOAL 11: Sustainable Cities and Communities (5 year moving average):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Income Group_Low income]' derivation='Avg' name='[avg:Income Group_Low income:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Income Group_Upper middle income]' derivation='Avg' name='[avg:Income Group_Upper middle income:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Inflation, GDP deflator (annual %)]' derivation='Avg' name='[avg:Inflation, GDP deflator (annual %):qk]' pivot='key' type='quantitative' />
            <column-instance column='[International tourism, expenditures for travel items (current US$)]' derivation='Avg' name='[avg:International tourism, expenditures for travel items (current US$):qk]' pivot='key' type='quantitative' />
            <column-instance column='[International tourism, number of arrivals]' derivation='Avg' name='[avg:International tourism, number of arrivals:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ores and metals imports (% of merchandise imports)]' derivation='Avg' name='[avg:Ores and metals imports (% of merchandise imports):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Primary education, pupils]' derivation='Avg' name='[avg:Primary education, pupils:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Region_Latin America &amp; Caribbean]' derivation='Avg' name='[avg:Region_Latin America &amp; Caribbean:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Region_South Asia]' derivation='Avg' name='[avg:Region_South Asia:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Region_Sub-Saharan Africa]' derivation='Avg' name='[avg:Region_Sub-Saharan Africa:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Travel services (% of commercial service imports)]' derivation='Avg' name='[avg:Travel services (% of commercial service imports):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Unemployment, youth total (% of total labor force ages 15-24) (modeled ILO estimate)]' derivation='Avg' name='[avg:Unemployment, youth total (% of total labor force ages 15-24) (modeled ILO estimate):qk]' pivot='key' type='quantitative' />
            <column-instance column='[AdhocCluster:1]' derivation='None' is-adhoc-cluster='true' name='[none:AdhocCluster:1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[CountryShortName]' derivation='None' name='[none:CountryShortName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[none:Year:qk]' included-values='in-range'>
            <min>2005.0</min>
            <max>2005.0</max>
          </filter>
          <slices>
            <column>[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[none:Year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Adjusted savings: energy depletion (% of GNI):qk]' />
              <lod column='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Agriculture, forestry, and fishing, value added per worker (constant 2015 US$):qk]' />
              <lod column='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Claims on central government, etc. (% GDP):qk]' />
              <lod column='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Commercial bank branches (per 100,000 adults):qk]' />
              <lod column='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Communications, computer, etc. (% of service exports, BoP):qk]' />
              <lod column='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:External balance on goods and services (% of GDP):qk]' />
              <lod column='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Final consumption expenditure (annual % growth):qk]' />
              <lod column='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:GOAL 11: Sustainable Cities and Communities (5 year moving average):qk]' />
              <lod column='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Income Group_Low income:qk]' />
              <lod column='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Income Group_Upper middle income:qk]' />
              <lod column='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Inflation, GDP deflator (annual %):qk]' />
              <lod column='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:International tourism, expenditures for travel items (current US$):qk]' />
              <lod column='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:International tourism, number of arrivals:qk]' />
              <lod column='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Ores and metals imports (% of merchandise imports):qk]' />
              <lod column='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Primary education, pupils:qk]' />
              <lod column='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Region_Latin America &amp; Caribbean:qk]' />
              <lod column='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Region_South Asia:qk]' />
              <lod column='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Region_Sub-Saharan Africa:qk]' />
              <lod column='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Travel services (% of commercial service imports):qk]' />
              <lod column='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Unemployment, youth total (% of total labor force ages 15-24) (modeled ILO estimate):qk]' />
              <lod column='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[none:CountryShortName:nk]' />
              <color column='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[none:AdhocCluster:1:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[Latitude (generated)]</rows>
        <cols>[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{9D156356-DC7B-4088-BD62-38D85AB4DA1B}' />
    </worksheet>
    <worksheet name='socio_kMeans'>
      <table>
        <view>
          <datasources>
            <datasource caption='socioeconomic_predictors' name='federated.0cl0ztz1eeohc51e85dpd1v5fkta' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0cl0ztz1eeohc51e85dpd1v5fkta'>
            <column auto-hidden='true' caption='Clusters (1)' datatype='integer' hidden='true' is-adhoc-cluster='true' name='[AdhocCluster:2]' parent-model='[AnalyticModel:{551cd312-311f-499f-95f4-b5a374527863}]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='-1' value='Cluster Outliers' />
                <alias key='0' value='Not Clustered' />
                <alias key='1' value='Cluster 1' />
                <alias key='2' value='Cluster 2' />
                <alias key='3' value='Cluster 3' />
                <alias key='4' value='Cluster 4' />
                <alias key='5' value='Cluster 5' />
                <alias key='6' value='Cluster 6' />
                <alias key='7' value='Cluster 7' />
                <alias key='8' value='Cluster 8' />
                <alias key='9' value='Cluster 9' />
                <alias key='10' value='Cluster 10' />
                <alias key='11' value='Cluster 11' />
                <alias key='12' value='Cluster 12' />
                <alias key='13' value='Cluster 13' />
                <alias key='14' value='Cluster 14' />
                <alias key='15' value='Cluster 15' />
                <alias key='16' value='Cluster 16' />
                <alias key='17' value='Cluster 17' />
                <alias key='18' value='Cluster 18' />
                <alias key='19' value='Cluster 19' />
                <alias key='20' value='Cluster 20' />
                <alias key='21' value='Cluster 21' />
                <alias key='22' value='Cluster 22' />
                <alias key='23' value='Cluster 23' />
                <alias key='24' value='Cluster 24' />
                <alias key='25' value='Cluster 25' />
                <alias key='26' value='Cluster 26' />
                <alias key='27' value='Cluster 27' />
                <alias key='28' value='Cluster 28' />
                <alias key='29' value='Cluster 29' />
                <alias key='30' value='Cluster 30' />
                <alias key='31' value='Cluster 31' />
                <alias key='32' value='Cluster 32' />
                <alias key='33' value='Cluster 33' />
                <alias key='34' value='Cluster 34' />
                <alias key='35' value='Cluster 35' />
                <alias key='36' value='Cluster 36' />
                <alias key='37' value='Cluster 37' />
                <alias key='38' value='Cluster 38' />
                <alias key='39' value='Cluster 39' />
                <alias key='40' value='Cluster 40' />
                <alias key='41' value='Cluster 41' />
                <alias key='42' value='Cluster 42' />
                <alias key='43' value='Cluster 43' />
                <alias key='44' value='Cluster 44' />
                <alias key='45' value='Cluster 45' />
                <alias key='46' value='Cluster 46' />
                <alias key='47' value='Cluster 47' />
                <alias key='48' value='Cluster 48' />
                <alias key='49' value='Cluster 49' />
                <alias key='50' value='Cluster 50' />
              </aliases>
            </column>
            <column datatype='real' name='[Adjusted savings: energy depletion (% of GNI)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Agriculture, forestry, and fishing, value added per worker (constant 2015 US$)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Claims on central government, etc. (% GDP)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Commercial bank branches (per 100,000 adults)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Communications, computer, etc. (% of service exports, BoP)]' role='measure' type='quantitative' />
            <column caption='Country Short Name' datatype='string' name='[CountryShortName]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[External balance on goods and services (% of GDP)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Final consumption expenditure (annual % growth)]' role='measure' type='quantitative' />
            <column datatype='real' name='[GOAL 11: Sustainable Cities and Communities (5 year moving average)]' role='measure' type='quantitative' />
            <column caption='Income Group Low income' datatype='integer' name='[Income Group_Low income]' role='measure' type='quantitative' />
            <column caption='Income Group Upper middle income' datatype='integer' name='[Income Group_Upper middle income]' role='measure' type='quantitative' />
            <column datatype='real' name='[Inflation, GDP deflator (annual %)]' role='measure' type='quantitative' />
            <column datatype='real' name='[International tourism, expenditures for travel items (current US$)]' role='measure' type='quantitative' />
            <column datatype='real' name='[International tourism, number of arrivals]' role='measure' type='quantitative' />
            <column datatype='real' name='[Ores and metals imports (% of merchandise imports)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Primary education, pupils]' role='measure' type='quantitative' />
            <column caption='Region Latin America &amp; Caribbean' datatype='integer' name='[Region_Latin America &amp; Caribbean]' role='measure' type='quantitative' />
            <column caption='Region South Asia' datatype='integer' name='[Region_South Asia]' role='measure' type='quantitative' />
            <column caption='Region Sub-Saharan Africa' datatype='integer' name='[Region_Sub-Saharan Africa]' role='measure' type='quantitative' />
            <column datatype='real' name='[Travel services (% of commercial service imports)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Unemployment, youth total (% of total labor force ages 15-24) (modeled ILO estimate)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Adjusted savings: energy depletion (% of GNI)]' derivation='Avg' name='[avg:Adjusted savings: energy depletion (% of GNI):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Agriculture, forestry, and fishing, value added per worker (constant 2015 US$)]' derivation='Avg' name='[avg:Agriculture, forestry, and fishing, value added per worker (constant 2015 US$):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Claims on central government, etc. (% GDP)]' derivation='Avg' name='[avg:Claims on central government, etc. (% GDP):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Commercial bank branches (per 100,000 adults)]' derivation='Avg' name='[avg:Commercial bank branches (per 100,000 adults):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Communications, computer, etc. (% of service exports, BoP)]' derivation='Avg' name='[avg:Communications, computer, etc. (% of service exports, BoP):qk]' pivot='key' type='quantitative' />
            <column-instance column='[External balance on goods and services (% of GDP)]' derivation='Avg' name='[avg:External balance on goods and services (% of GDP):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Final consumption expenditure (annual % growth)]' derivation='Avg' name='[avg:Final consumption expenditure (annual % growth):qk]' pivot='key' type='quantitative' />
            <column-instance column='[GOAL 11: Sustainable Cities and Communities (5 year moving average)]' derivation='Avg' name='[avg:GOAL 11: Sustainable Cities and Communities (5 year moving average):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Income Group_Low income]' derivation='Avg' name='[avg:Income Group_Low income:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Income Group_Upper middle income]' derivation='Avg' name='[avg:Income Group_Upper middle income:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Inflation, GDP deflator (annual %)]' derivation='Avg' name='[avg:Inflation, GDP deflator (annual %):qk]' pivot='key' type='quantitative' />
            <column-instance column='[International tourism, expenditures for travel items (current US$)]' derivation='Avg' name='[avg:International tourism, expenditures for travel items (current US$):qk]' pivot='key' type='quantitative' />
            <column-instance column='[International tourism, number of arrivals]' derivation='Avg' name='[avg:International tourism, number of arrivals:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ores and metals imports (% of merchandise imports)]' derivation='Avg' name='[avg:Ores and metals imports (% of merchandise imports):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Primary education, pupils]' derivation='Avg' name='[avg:Primary education, pupils:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Region_Latin America &amp; Caribbean]' derivation='Avg' name='[avg:Region_Latin America &amp; Caribbean:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Region_South Asia]' derivation='Avg' name='[avg:Region_South Asia:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Region_Sub-Saharan Africa]' derivation='Avg' name='[avg:Region_Sub-Saharan Africa:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Travel services (% of commercial service imports)]' derivation='Avg' name='[avg:Travel services (% of commercial service imports):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Unemployment, youth total (% of total labor force ages 15-24) (modeled ILO estimate)]' derivation='Avg' name='[avg:Unemployment, youth total (% of total labor force ages 15-24) (modeled ILO estimate):qk]' pivot='key' type='quantitative' />
            <column-instance column='[AdhocCluster:2]' derivation='None' is-adhoc-cluster='true' name='[none:AdhocCluster:2:ok]' pivot='key' type='ordinal' />
            <column-instance column='[CountryShortName]' derivation='None' name='[none:CountryShortName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Adjusted savings: energy depletion (\% of GNI):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Agriculture, forestry, and fishing, value added per worker (constant 2015 US$):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Claims on central government, etc. (\% GDP):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Commercial bank branches (per 100,000 adults):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Communications, computer, etc. (\% of service exports, BoP):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:External balance on goods and services (\% of GDP):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Final consumption expenditure (annual \% growth):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:GOAL 11: Sustainable Cities and Communities (5 year moving average):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Income Group_Low income:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Income Group_Upper middle income:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Inflation, GDP deflator (annual \%):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:International tourism, expenditures for travel items (current US$):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:International tourism, number of arrivals:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Ores and metals imports (\% of merchandise imports):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Primary education, pupils:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Region_Latin America &amp; Caribbean:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Region_South Asia:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Region_Sub-Saharan Africa:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Travel services (\% of commercial service imports):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Unemployment, youth total (\% of total labor force ages 15-24) (modeled ILO estimate):qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[none:Year:qk]' included-values='in-range'>
            <min>2005.0</min>
            <max>2005.0</max>
          </filter>
          <slices>
            <column>[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[none:Year:qk]</column>
            <column>[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[Multiple Values]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0cl0ztz1eeohc51e85dpd1v5fkta].[none:CountryShortName:nk] / [federated.0cl0ztz1eeohc51e85dpd1v5fkta].[none:AdhocCluster:2:ok])</rows>
        <cols>[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{643BB176-7972-4FC7-951E-606A8727B4D3}' />
    </worksheet>
  </worksheets>
  <windows source-height='93'>
    <window class='worksheet' name='socio'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[none:AdhocCluster:1:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[none:AdhocCluster:1:ok]</field>
            <field>[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[none:CountryShortName:nk]</field>
            <field>[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5F0578E7-DB77-47BE-9E19-65D11789D96C}' />
    </window>
    <window class='worksheet' name='socio_kMeans'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{0C6CBDB4-7350-4D59-9DA4-BB18D7FB830B}' />
    </window>
    <window class='worksheet' name='env'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.01cgkm51l5oq0x10q382e1vejl59].[none:AdhocCluster:1:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01cgkm51l5oq0x10q382e1vejl59].[none:AdhocCluster:1:ok]</field>
            <field>[federated.01cgkm51l5oq0x10q382e1vejl59].[none:CountryShortName:nk]</field>
            <field>[federated.01cgkm51l5oq0x10q382e1vejl59].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{10C1C8CF-E0EB-4B01-AD14-B95095A97A34}' />
    </window>
    <window class='worksheet' name='env_kMeans'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{45B0FE43-EB42-4805-94E9-FD7FACA45003}' />
    </window>
    <window class='worksheet' name='health'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[none:AdhocCluster:1:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[none:AdhocCluster:1:ok]</field>
            <field>[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[none:CountryShortName:nk]</field>
            <field>[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DE8B2BF1-7FB4-4869-A433-FA18ECB07CB4}' />
    </window>
    <window class='worksheet' name='health_kMeans'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{E37EB439-2743-44C4-83D3-C89D887C3709}' />
    </window>
    <window class='worksheet' name='By Region'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card pane-specification-id='0' param='[federated.0jmjax50bycgbl135loo1074ulkk].[none:Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0jmjax50bycgbl135loo1074ulkk].[none:CountryShortName:nk]</field>
            <field>[federated.0jmjax50bycgbl135loo1074ulkk].[none:Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4E5D27DF-5FFE-4A2D-8592-CCCBF6C34C1F}' />
    </window>
    <window class='worksheet' name='By Income Group'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0jmjax50bycgbl135loo1074ulkk].[none:Income:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0jmjax50bycgbl135loo1074ulkk].[none:CountryShortName:nk]</field>
            <field>[federated.0jmjax50bycgbl135loo1074ulkk].[none:Income:nk]</field>
            <field>[federated.0jmjax50bycgbl135loo1074ulkk].[none:Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{823BD4A7-C1CC-4AF0-A9FF-7369257B593D}' />
    </window>
    <window class='worksheet' maximized='true' name='Sheet 9'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card pane-specification-id='0' param='[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[avg:People practicing open defecation (% of population):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[none:CountryShortName:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B923FA43-1D65-49C7-BE8A-E3964B973F04}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='By Income Group' width='192'>
      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
      A954ha91AQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='By Region' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 9' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='env' width='192'>
      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
      /w8CGd03VSTIwgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='env_kMeans' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='health' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='health_kMeans' width='192'>
      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
      CXLPG9Ts7s8AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='socio' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='socio_kMeans' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
