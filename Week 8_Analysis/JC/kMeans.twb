<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20232.23.0805.0415                               -->
<workbook original-version='18.1' source-build='2023.2.1 (20232.23.0805.0415)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <SavingAnalyticObjects />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='socioeconomic_predictors' inline='true' name='federated.0cl0ztz1eeohc51e85dpd1v5fkta' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='socioeconomic_predictors' name='textscan.0ptthz816dtrur16wgst10fvry0m'>
            <connection class='textscan' directory='D:/GitHub Repos/culminating-project-group-1/Week 8 - Analysis/JC' filename='socioeconomic_predictors.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0ptthz816dtrur16wgst10fvry0m' name='socioeconomic_predictors.csv' table='[socioeconomic_predictors#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='CountryShortName' ordinal='0' />
            <column datatype='real' name='Year' ordinal='1' />
            <column datatype='real' name='Life expectancy at birth, total (years)' ordinal='2' />
            <column datatype='real' name='Agriculture, forestry, and fishing, value added per worker (constant 2015 US$)' ordinal='3' />
            <column datatype='real' name='Commercial bank branches (per 100,000 adults)' ordinal='4' />
            <column datatype='real' name='Inflation, GDP deflator (annual %)' ordinal='5' />
            <column datatype='real' name='External balance on goods and services (% of GDP)' ordinal='6' />
            <column datatype='real' name='Primary education, pupils' ordinal='7' />
            <column datatype='integer' name='Income Group_Upper middle income' ordinal='8' />
            <column datatype='integer' name='Region_Sub-Saharan Africa' ordinal='9' />
            <column datatype='integer' name='Region_South Asia' ordinal='10' />
            <column datatype='integer' name='Income Group_Low income' ordinal='11' />
            <column datatype='real' name='Travel services (% of commercial service imports)' ordinal='12' />
            <column datatype='real' name='Adjusted savings: energy depletion (% of GNI)' ordinal='13' />
            <column datatype='real' name='Communications, computer, etc. (% of service exports, BoP)' ordinal='14' />
            <column datatype='real' name='International tourism, expenditures for travel items (current US$)' ordinal='15' />
            <column datatype='integer' name='Region_Latin America &amp; Caribbean' ordinal='16' />
            <column datatype='real' name='International tourism, number of arrivals' ordinal='17' />
            <column datatype='real' name='GOAL 11: Sustainable Cities and Communities (5 year moving average)' ordinal='18' />
            <column datatype='real' name='Final consumption expenditure (annual % growth)' ordinal='19' />
            <column datatype='real' name='Ores and metals imports (% of merchandise imports)' ordinal='20' />
            <column datatype='real' name='Claims on central government, etc. (% GDP)' ordinal='21' />
            <column datatype='real' name='Unemployment, youth total (% of total labor force ages 15-24) (modeled ILO estimate)' ordinal='22' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0ptthz816dtrur16wgst10fvry0m' name='socioeconomic_predictors.csv' table='[socioeconomic_predictors#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='CountryShortName' ordinal='0' />
            <column datatype='real' name='Year' ordinal='1' />
            <column datatype='real' name='Life expectancy at birth, total (years)' ordinal='2' />
            <column datatype='real' name='Agriculture, forestry, and fishing, value added per worker (constant 2015 US$)' ordinal='3' />
            <column datatype='real' name='Commercial bank branches (per 100,000 adults)' ordinal='4' />
            <column datatype='real' name='Inflation, GDP deflator (annual %)' ordinal='5' />
            <column datatype='real' name='External balance on goods and services (% of GDP)' ordinal='6' />
            <column datatype='real' name='Primary education, pupils' ordinal='7' />
            <column datatype='integer' name='Income Group_Upper middle income' ordinal='8' />
            <column datatype='integer' name='Region_Sub-Saharan Africa' ordinal='9' />
            <column datatype='integer' name='Region_South Asia' ordinal='10' />
            <column datatype='integer' name='Income Group_Low income' ordinal='11' />
            <column datatype='real' name='Travel services (% of commercial service imports)' ordinal='12' />
            <column datatype='real' name='Adjusted savings: energy depletion (% of GNI)' ordinal='13' />
            <column datatype='real' name='Communications, computer, etc. (% of service exports, BoP)' ordinal='14' />
            <column datatype='real' name='International tourism, expenditures for travel items (current US$)' ordinal='15' />
            <column datatype='integer' name='Region_Latin America &amp; Caribbean' ordinal='16' />
            <column datatype='real' name='International tourism, number of arrivals' ordinal='17' />
            <column datatype='real' name='GOAL 11: Sustainable Cities and Communities (5 year moving average)' ordinal='18' />
            <column datatype='real' name='Final consumption expenditure (annual % growth)' ordinal='19' />
            <column datatype='real' name='Ores and metals imports (% of merchandise imports)' ordinal='20' />
            <column datatype='real' name='Claims on central government, etc. (% GDP)' ordinal='21' />
            <column datatype='real' name='Unemployment, youth total (% of total labor force ages 15-24) (modeled ILO estimate)' ordinal='22' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[socioeconomic_predictors.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CountryShortName</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CountryShortName]</local-name>
            <parent-name>[socioeconomic_predictors.csv]</parent-name>
            <remote-alias>CountryShortName</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[socioeconomic_predictors.csv_A2CC5C7939CA4D2B96E1AA8401F54AF7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[socioeconomic_predictors.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[socioeconomic_predictors.csv_A2CC5C7939CA4D2B96E1AA8401F54AF7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Life expectancy at birth, total (years)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Life expectancy at birth, total (years)]</local-name>
            <parent-name>[socioeconomic_predictors.csv]</parent-name>
            <remote-alias>Life expectancy at birth, total (years)</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[socioeconomic_predictors.csv_A2CC5C7939CA4D2B96E1AA8401F54AF7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Agriculture, forestry, and fishing, value added per worker (constant 2015 US$)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Agriculture, forestry, and fishing, value added per worker (constant 2015 US$)]</local-name>
            <parent-name>[socioeconomic_predictors.csv]</parent-name>
            <remote-alias>Agriculture, forestry, and fishing, value added per worker (constant 2015 US$)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[socioeconomic_predictors.csv_A2CC5C7939CA4D2B96E1AA8401F54AF7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Commercial bank branches (per 100,000 adults)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Commercial bank branches (per 100,000 adults)]</local-name>
            <parent-name>[socioeconomic_predictors.csv]</parent-name>
            <remote-alias>Commercial bank branches (per 100,000 adults)</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[socioeconomic_predictors.csv_A2CC5C7939CA4D2B96E1AA8401F54AF7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Inflation, GDP deflator (annual %)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Inflation, GDP deflator (annual %)]</local-name>
            <parent-name>[socioeconomic_predictors.csv]</parent-name>
            <remote-alias>Inflation, GDP deflator (annual %)</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[socioeconomic_predictors.csv_A2CC5C7939CA4D2B96E1AA8401F54AF7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>External balance on goods and services (% of GDP)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[External balance on goods and services (% of GDP)]</local-name>
            <parent-name>[socioeconomic_predictors.csv]</parent-name>
            <remote-alias>External balance on goods and services (% of GDP)</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[socioeconomic_predictors.csv_A2CC5C7939CA4D2B96E1AA8401F54AF7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Primary education, pupils</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Primary education, pupils]</local-name>
            <parent-name>[socioeconomic_predictors.csv]</parent-name>
            <remote-alias>Primary education, pupils</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[socioeconomic_predictors.csv_A2CC5C7939CA4D2B96E1AA8401F54AF7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Income Group_Upper middle income</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Income Group_Upper middle income]</local-name>
            <parent-name>[socioeconomic_predictors.csv]</parent-name>
            <remote-alias>Income Group_Upper middle income</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[socioeconomic_predictors.csv_A2CC5C7939CA4D2B96E1AA8401F54AF7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region_Sub-Saharan Africa</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Region_Sub-Saharan Africa]</local-name>
            <parent-name>[socioeconomic_predictors.csv]</parent-name>
            <remote-alias>Region_Sub-Saharan Africa</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[socioeconomic_predictors.csv_A2CC5C7939CA4D2B96E1AA8401F54AF7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region_South Asia</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Region_South Asia]</local-name>
            <parent-name>[socioeconomic_predictors.csv]</parent-name>
            <remote-alias>Region_South Asia</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[socioeconomic_predictors.csv_A2CC5C7939CA4D2B96E1AA8401F54AF7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Income Group_Low income</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Income Group_Low income]</local-name>
            <parent-name>[socioeconomic_predictors.csv]</parent-name>
            <remote-alias>Income Group_Low income</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[socioeconomic_predictors.csv_A2CC5C7939CA4D2B96E1AA8401F54AF7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Travel services (% of commercial service imports)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Travel services (% of commercial service imports)]</local-name>
            <parent-name>[socioeconomic_predictors.csv]</parent-name>
            <remote-alias>Travel services (% of commercial service imports)</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[socioeconomic_predictors.csv_A2CC5C7939CA4D2B96E1AA8401F54AF7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Adjusted savings: energy depletion (% of GNI)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Adjusted savings: energy depletion (% of GNI)]</local-name>
            <parent-name>[socioeconomic_predictors.csv]</parent-name>
            <remote-alias>Adjusted savings: energy depletion (% of GNI)</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[socioeconomic_predictors.csv_A2CC5C7939CA4D2B96E1AA8401F54AF7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Communications, computer, etc. (% of service exports, BoP)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Communications, computer, etc. (% of service exports, BoP)]</local-name>
            <parent-name>[socioeconomic_predictors.csv]</parent-name>
            <remote-alias>Communications, computer, etc. (% of service exports, BoP)</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[socioeconomic_predictors.csv_A2CC5C7939CA4D2B96E1AA8401F54AF7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>International tourism, expenditures for travel items (current US$)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[International tourism, expenditures for travel items (current US$)]</local-name>
            <parent-name>[socioeconomic_predictors.csv]</parent-name>
            <remote-alias>International tourism, expenditures for travel items (current US$)</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[socioeconomic_predictors.csv_A2CC5C7939CA4D2B96E1AA8401F54AF7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region_Latin America &amp; Caribbean</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Region_Latin America &amp; Caribbean]</local-name>
            <parent-name>[socioeconomic_predictors.csv]</parent-name>
            <remote-alias>Region_Latin America &amp; Caribbean</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[socioeconomic_predictors.csv_A2CC5C7939CA4D2B96E1AA8401F54AF7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>International tourism, number of arrivals</remote-name>
            <remote-type>5</remote-type>
            <local-name>[International tourism, number of arrivals]</local-name>
            <parent-name>[socioeconomic_predictors.csv]</parent-name>
            <remote-alias>International tourism, number of arrivals</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[socioeconomic_predictors.csv_A2CC5C7939CA4D2B96E1AA8401F54AF7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GOAL 11: Sustainable Cities and Communities (5 year moving average)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[GOAL 11: Sustainable Cities and Communities (5 year moving average)]</local-name>
            <parent-name>[socioeconomic_predictors.csv]</parent-name>
            <remote-alias>GOAL 11: Sustainable Cities and Communities (5 year moving average)</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[socioeconomic_predictors.csv_A2CC5C7939CA4D2B96E1AA8401F54AF7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Final consumption expenditure (annual % growth)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Final consumption expenditure (annual % growth)]</local-name>
            <parent-name>[socioeconomic_predictors.csv]</parent-name>
            <remote-alias>Final consumption expenditure (annual % growth)</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[socioeconomic_predictors.csv_A2CC5C7939CA4D2B96E1AA8401F54AF7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ores and metals imports (% of merchandise imports)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Ores and metals imports (% of merchandise imports)]</local-name>
            <parent-name>[socioeconomic_predictors.csv]</parent-name>
            <remote-alias>Ores and metals imports (% of merchandise imports)</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[socioeconomic_predictors.csv_A2CC5C7939CA4D2B96E1AA8401F54AF7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Claims on central government, etc. (% GDP)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Claims on central government, etc. (% GDP)]</local-name>
            <parent-name>[socioeconomic_predictors.csv]</parent-name>
            <remote-alias>Claims on central government, etc. (% GDP)</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[socioeconomic_predictors.csv_A2CC5C7939CA4D2B96E1AA8401F54AF7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unemployment, youth total (% of total labor force ages 15-24) (modeled ILO estimate)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Unemployment, youth total (% of total labor force ages 15-24) (modeled ILO estimate)]</local-name>
            <parent-name>[socioeconomic_predictors.csv]</parent-name>
            <remote-alias>Unemployment, youth total (% of total labor force ages 15-24) (modeled ILO estimate)</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[socioeconomic_predictors.csv_A2CC5C7939CA4D2B96E1AA8401F54AF7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='real' name='[Adjusted savings: energy depletion (% of GNI)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Agriculture, forestry, and fishing, value added per worker (constant 2015 US$)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Claims on central government, etc. (% GDP)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Commercial bank branches (per 100,000 adults)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Communications, computer, etc. (% of service exports, BoP)]' role='measure' type='quantitative' />
      <column caption='Country Short Name' datatype='string' name='[CountryShortName]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='real' name='[External balance on goods and services (% of GDP)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Final consumption expenditure (annual % growth)]' role='measure' type='quantitative' />
      <column datatype='real' name='[GOAL 11: Sustainable Cities and Communities (5 year moving average)]' role='measure' type='quantitative' />
      <column caption='Income Group Low income' datatype='integer' name='[Income Group_Low income]' role='measure' type='quantitative' />
      <column caption='Income Group Upper middle income' datatype='integer' name='[Income Group_Upper middle income]' role='measure' type='quantitative' />
      <column datatype='real' name='[Inflation, GDP deflator (annual %)]' role='measure' type='quantitative' />
      <column datatype='real' name='[International tourism, expenditures for travel items (current US$)]' role='measure' type='quantitative' />
      <column datatype='real' name='[International tourism, number of arrivals]' role='measure' type='quantitative' />
      <column datatype='real' name='[Ores and metals imports (% of merchandise imports)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Primary education, pupils]' role='measure' type='quantitative' />
      <column caption='Region Latin America &amp; Caribbean' datatype='integer' name='[Region_Latin America &amp; Caribbean]' role='measure' type='quantitative' />
      <column caption='Region South Asia' datatype='integer' name='[Region_South Asia]' role='measure' type='quantitative' />
      <column caption='Region Sub-Saharan Africa' datatype='integer' name='[Region_Sub-Saharan Africa]' role='measure' type='quantitative' />
      <column datatype='real' name='[Travel services (% of commercial service imports)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Unemployment, youth total (% of total labor force ages 15-24) (modeled ILO estimate)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='socioeconomic_predictors.csv' datatype='table' name='[__tableau_internal_object_id__].[socioeconomic_predictors.csv_A2CC5C7939CA4D2B96E1AA8401F54AF7]' role='measure' type='quantitative' />
      <column-instance column='[Adjusted savings: energy depletion (% of GNI)]' derivation='Avg' name='[avg:Adjusted savings: energy depletion (% of GNI):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Agriculture, forestry, and fishing, value added per worker (constant 2015 US$)]' derivation='Avg' name='[avg:Agriculture, forestry, and fishing, value added per worker (constant 2015 US$):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Claims on central government, etc. (% GDP)]' derivation='Avg' name='[avg:Claims on central government, etc. (% GDP):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Commercial bank branches (per 100,000 adults)]' derivation='Avg' name='[avg:Commercial bank branches (per 100,000 adults):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Communications, computer, etc. (% of service exports, BoP)]' derivation='Avg' name='[avg:Communications, computer, etc. (% of service exports, BoP):qk]' pivot='key' type='quantitative' />
      <column-instance column='[External balance on goods and services (% of GDP)]' derivation='Avg' name='[avg:External balance on goods and services (% of GDP):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Final consumption expenditure (annual % growth)]' derivation='Avg' name='[avg:Final consumption expenditure (annual % growth):qk]' pivot='key' type='quantitative' />
      <column-instance column='[GOAL 11: Sustainable Cities and Communities (5 year moving average)]' derivation='Avg' name='[avg:GOAL 11: Sustainable Cities and Communities (5 year moving average):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Income Group_Low income]' derivation='Avg' name='[avg:Income Group_Low income:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Income Group_Upper middle income]' derivation='Avg' name='[avg:Income Group_Upper middle income:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Inflation, GDP deflator (annual %)]' derivation='Avg' name='[avg:Inflation, GDP deflator (annual %):qk]' pivot='key' type='quantitative' />
      <column-instance column='[International tourism, expenditures for travel items (current US$)]' derivation='Avg' name='[avg:International tourism, expenditures for travel items (current US$):qk]' pivot='key' type='quantitative' />
      <column-instance column='[International tourism, number of arrivals]' derivation='Avg' name='[avg:International tourism, number of arrivals:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Ores and metals imports (% of merchandise imports)]' derivation='Avg' name='[avg:Ores and metals imports (% of merchandise imports):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Primary education, pupils]' derivation='Avg' name='[avg:Primary education, pupils:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Region_Latin America &amp; Caribbean]' derivation='Avg' name='[avg:Region_Latin America &amp; Caribbean:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Region_South Asia]' derivation='Avg' name='[avg:Region_South Asia:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Region_Sub-Saharan Africa]' derivation='Avg' name='[avg:Region_Sub-Saharan Africa:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Travel services (% of commercial service imports)]' derivation='Avg' name='[avg:Travel services (% of commercial service imports):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Unemployment, youth total (% of total labor force ages 15-24) (modeled ILO estimate)]' derivation='Avg' name='[avg:Unemployment, youth total (% of total labor force ages 15-24) (modeled ILO estimate):qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:AdhocCluster:1:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>1</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>3</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <analytic-model>
        <name>
          <field name='[AnalyticModel:{5321eba1-2efc-4fb9-a2c4-4458fd3c9fd1}]' />
        </name>
        <analytic-model-specifications class='cluster-specifications'>
          <analysis-fields>
            <field name='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Adjusted savings: energy depletion (% of GNI):qk]' />
            <field name='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Agriculture, forestry, and fishing, value added per worker (constant 2015 US$):qk]' />
            <field name='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Claims on central government, etc. (% GDP):qk]' />
            <field name='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Commercial bank branches (per 100,000 adults):qk]' />
            <field name='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Communications, computer, etc. (% of service exports, BoP):qk]' />
            <field name='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:External balance on goods and services (% of GDP):qk]' />
            <field name='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Final consumption expenditure (annual % growth):qk]' />
            <field name='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:GOAL 11: Sustainable Cities and Communities (5 year moving average):qk]' />
            <field name='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Income Group_Low income:qk]' />
            <field name='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Income Group_Upper middle income:qk]' />
            <field name='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Inflation, GDP deflator (annual %):qk]' />
            <field name='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:International tourism, expenditures for travel items (current US$):qk]' />
            <field name='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:International tourism, number of arrivals:qk]' />
            <field name='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Ores and metals imports (% of merchandise imports):qk]' />
            <field name='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Primary education, pupils:qk]' />
            <field name='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Region_Latin America &amp; Caribbean:qk]' />
            <field name='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Region_South Asia:qk]' />
            <field name='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Region_Sub-Saharan Africa:qk]' />
            <field name='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Travel services (% of commercial service imports):qk]' />
            <field name='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Unemployment, youth total (% of total labor force ages 15-24) (modeled ILO estimate):qk]' />
          </analysis-fields>
          <filter-fields />
          <lod-fields />
          <number-of-desired-clusters>0</number-of-desired-clusters>
          <is-dissagregate>false</is-dissagregate>
        </analytic-model-specifications>
        <result-fields />
      </analytic-model>
      <analytic-model>
        <name>
          <field name='[AnalyticModel:{551cd312-311f-499f-95f4-b5a374527863}]' />
        </name>
        <analytic-model-specifications class='cluster-specifications'>
          <analysis-fields>
            <field name='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Adjusted savings: energy depletion (% of GNI):qk]' />
            <field name='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Agriculture, forestry, and fishing, value added per worker (constant 2015 US$):qk]' />
            <field name='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Claims on central government, etc. (% GDP):qk]' />
            <field name='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Commercial bank branches (per 100,000 adults):qk]' />
            <field name='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Communications, computer, etc. (% of service exports, BoP):qk]' />
            <field name='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:External balance on goods and services (% of GDP):qk]' />
            <field name='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Final consumption expenditure (annual % growth):qk]' />
            <field name='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:GOAL 11: Sustainable Cities and Communities (5 year moving average):qk]' />
            <field name='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Income Group_Low income:qk]' />
            <field name='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Income Group_Upper middle income:qk]' />
            <field name='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Inflation, GDP deflator (annual %):qk]' />
            <field name='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:International tourism, expenditures for travel items (current US$):qk]' />
            <field name='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:International tourism, number of arrivals:qk]' />
            <field name='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Ores and metals imports (% of merchandise imports):qk]' />
            <field name='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Primary education, pupils:qk]' />
            <field name='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Region_Latin America &amp; Caribbean:qk]' />
            <field name='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Region_South Asia:qk]' />
            <field name='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Region_Sub-Saharan Africa:qk]' />
            <field name='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Travel services (% of commercial service imports):qk]' />
            <field name='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Unemployment, youth total (% of total labor force ages 15-24) (modeled ILO estimate):qk]' />
          </analysis-fields>
          <filter-fields />
          <lod-fields />
          <number-of-desired-clusters>0</number-of-desired-clusters>
          <is-dissagregate>false</is-dissagregate>
        </analytic-model-specifications>
        <result-fields>
          <field name='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[AdhocCluster:2]' />
        </result-fields>
      </analytic-model>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='socioeconomic_predictors.csv' id='socioeconomic_predictors.csv_A2CC5C7939CA4D2B96E1AA8401F54AF7'>
            <properties context=''>
              <relation connection='textscan.0ptthz816dtrur16wgst10fvry0m' name='socioeconomic_predictors.csv' table='[socioeconomic_predictors#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='CountryShortName' ordinal='0' />
                  <column datatype='real' name='Year' ordinal='1' />
                  <column datatype='real' name='Life expectancy at birth, total (years)' ordinal='2' />
                  <column datatype='real' name='Agriculture, forestry, and fishing, value added per worker (constant 2015 US$)' ordinal='3' />
                  <column datatype='real' name='Commercial bank branches (per 100,000 adults)' ordinal='4' />
                  <column datatype='real' name='Inflation, GDP deflator (annual %)' ordinal='5' />
                  <column datatype='real' name='External balance on goods and services (% of GDP)' ordinal='6' />
                  <column datatype='real' name='Primary education, pupils' ordinal='7' />
                  <column datatype='integer' name='Income Group_Upper middle income' ordinal='8' />
                  <column datatype='integer' name='Region_Sub-Saharan Africa' ordinal='9' />
                  <column datatype='integer' name='Region_South Asia' ordinal='10' />
                  <column datatype='integer' name='Income Group_Low income' ordinal='11' />
                  <column datatype='real' name='Travel services (% of commercial service imports)' ordinal='12' />
                  <column datatype='real' name='Adjusted savings: energy depletion (% of GNI)' ordinal='13' />
                  <column datatype='real' name='Communications, computer, etc. (% of service exports, BoP)' ordinal='14' />
                  <column datatype='real' name='International tourism, expenditures for travel items (current US$)' ordinal='15' />
                  <column datatype='integer' name='Region_Latin America &amp; Caribbean' ordinal='16' />
                  <column datatype='real' name='International tourism, number of arrivals' ordinal='17' />
                  <column datatype='real' name='GOAL 11: Sustainable Cities and Communities (5 year moving average)' ordinal='18' />
                  <column datatype='real' name='Final consumption expenditure (annual % growth)' ordinal='19' />
                  <column datatype='real' name='Ores and metals imports (% of merchandise imports)' ordinal='20' />
                  <column datatype='real' name='Claims on central government, etc. (% GDP)' ordinal='21' />
                  <column datatype='real' name='Unemployment, youth total (% of total labor force ages 15-24) (modeled ILO estimate)' ordinal='22' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='environmental_predictors' inline='true' name='federated.01cgkm51l5oq0x10q382e1vejl59' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='environmental_predictors' name='textscan.1bqo8tn0ylvcp217j4xi601fo05m'>
            <connection class='textscan' directory='D:/GitHub Repos/culminating-project-group-1/Week 8 - Analysis/JC' filename='environmental_predictors.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1bqo8tn0ylvcp217j4xi601fo05m' name='environmental_predictors.csv' table='[environmental_predictors#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='CountryShortName' ordinal='0' />
            <column datatype='real' name='Year' ordinal='1' />
            <column datatype='real' name='Life expectancy at birth, total (years)' ordinal='2' />
            <column datatype='real' name='Nitrous oxide (N2O) emissions (total) excluding LULUCF (% change from 1990)' ordinal='3' />
            <column datatype='real' name='Forest rents (% of GDP)' ordinal='4' />
            <column datatype='real' name='Capture fisheries production (metric tons)' ordinal='5' />
            <column datatype='real' name='Aquaculture production (metric tons)' ordinal='6' />
            <column datatype='real' name='Fertilizer consumption (kilograms per hectare of arable land)' ordinal='7' />
            <column datatype='real' name='Water productivity, total (constant 2015 US$ GDP per cubic meter of total freshwater withdrawal)' ordinal='8' />
            <column datatype='real' name='Mineral rents (% of GDP)' ordinal='9' />
            <column datatype='real' name='Arable land (% of land area)' ordinal='10' />
            <column datatype='real' name='Population density (people per sq. km of land area)' ordinal='11' />
            <column datatype='real' name='Carbon dioxide (CO2) emissions excluding LULUCF per capita (t CO2e/capita)' ordinal='12' />
            <column datatype='real' name='Methane (CH4) emissions from Building (Energy) (Mt CO2e)' ordinal='13' />
            <column datatype='real' name='Forest area (% of land area)' ordinal='14' />
            <column datatype='real' name='Rural population growth (annual %)' ordinal='15' />
            <column datatype='real' name='Renewable internal freshwater resources per capita (cubic meters)' ordinal='16' />
            <column datatype='real' name='Natural gas rents (% of GDP)' ordinal='17' />
            <column datatype='real' name='GOAL 13: Climate Action (5 year moving average)' ordinal='18' />
            <column datatype='real' name='Coal rents (% of GDP)' ordinal='19' />
            <column datatype='real' name='Oil rents (% of GDP)' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1bqo8tn0ylvcp217j4xi601fo05m' name='environmental_predictors.csv' table='[environmental_predictors#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='CountryShortName' ordinal='0' />
            <column datatype='real' name='Year' ordinal='1' />
            <column datatype='real' name='Life expectancy at birth, total (years)' ordinal='2' />
            <column datatype='real' name='Nitrous oxide (N2O) emissions (total) excluding LULUCF (% change from 1990)' ordinal='3' />
            <column datatype='real' name='Forest rents (% of GDP)' ordinal='4' />
            <column datatype='real' name='Capture fisheries production (metric tons)' ordinal='5' />
            <column datatype='real' name='Aquaculture production (metric tons)' ordinal='6' />
            <column datatype='real' name='Fertilizer consumption (kilograms per hectare of arable land)' ordinal='7' />
            <column datatype='real' name='Water productivity, total (constant 2015 US$ GDP per cubic meter of total freshwater withdrawal)' ordinal='8' />
            <column datatype='real' name='Mineral rents (% of GDP)' ordinal='9' />
            <column datatype='real' name='Arable land (% of land area)' ordinal='10' />
            <column datatype='real' name='Population density (people per sq. km of land area)' ordinal='11' />
            <column datatype='real' name='Carbon dioxide (CO2) emissions excluding LULUCF per capita (t CO2e/capita)' ordinal='12' />
            <column datatype='real' name='Methane (CH4) emissions from Building (Energy) (Mt CO2e)' ordinal='13' />
            <column datatype='real' name='Forest area (% of land area)' ordinal='14' />
            <column datatype='real' name='Rural population growth (annual %)' ordinal='15' />
            <column datatype='real' name='Renewable internal freshwater resources per capita (cubic meters)' ordinal='16' />
            <column datatype='real' name='Natural gas rents (% of GDP)' ordinal='17' />
            <column datatype='real' name='GOAL 13: Climate Action (5 year moving average)' ordinal='18' />
            <column datatype='real' name='Coal rents (% of GDP)' ordinal='19' />
            <column datatype='real' name='Oil rents (% of GDP)' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[environmental_predictors.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CountryShortName</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CountryShortName]</local-name>
            <parent-name>[environmental_predictors.csv]</parent-name>
            <remote-alias>CountryShortName</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[environmental_predictors.csv_C4E0CB1711F946B080BA8EE5F35C6DE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[environmental_predictors.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[environmental_predictors.csv_C4E0CB1711F946B080BA8EE5F35C6DE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Life expectancy at birth, total (years)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Life expectancy at birth, total (years)]</local-name>
            <parent-name>[environmental_predictors.csv]</parent-name>
            <remote-alias>Life expectancy at birth, total (years)</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[environmental_predictors.csv_C4E0CB1711F946B080BA8EE5F35C6DE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Nitrous oxide (N2O) emissions (total) excluding LULUCF (% change from 1990)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Nitrous oxide (N2O) emissions (total) excluding LULUCF (% change from 1990)]</local-name>
            <parent-name>[environmental_predictors.csv]</parent-name>
            <remote-alias>Nitrous oxide (N2O) emissions (total) excluding LULUCF (% change from 1990)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[environmental_predictors.csv_C4E0CB1711F946B080BA8EE5F35C6DE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Forest rents (% of GDP)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Forest rents (% of GDP)]</local-name>
            <parent-name>[environmental_predictors.csv]</parent-name>
            <remote-alias>Forest rents (% of GDP)</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[environmental_predictors.csv_C4E0CB1711F946B080BA8EE5F35C6DE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Capture fisheries production (metric tons)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Capture fisheries production (metric tons)]</local-name>
            <parent-name>[environmental_predictors.csv]</parent-name>
            <remote-alias>Capture fisheries production (metric tons)</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[environmental_predictors.csv_C4E0CB1711F946B080BA8EE5F35C6DE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Aquaculture production (metric tons)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Aquaculture production (metric tons)]</local-name>
            <parent-name>[environmental_predictors.csv]</parent-name>
            <remote-alias>Aquaculture production (metric tons)</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[environmental_predictors.csv_C4E0CB1711F946B080BA8EE5F35C6DE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Fertilizer consumption (kilograms per hectare of arable land)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Fertilizer consumption (kilograms per hectare of arable land)]</local-name>
            <parent-name>[environmental_predictors.csv]</parent-name>
            <remote-alias>Fertilizer consumption (kilograms per hectare of arable land)</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[environmental_predictors.csv_C4E0CB1711F946B080BA8EE5F35C6DE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Water productivity, total (constant 2015 US$ GDP per cubic meter of total freshwater withdrawal)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Water productivity, total (constant 2015 US$ GDP per cubic meter of total freshwater withdrawal)]</local-name>
            <parent-name>[environmental_predictors.csv]</parent-name>
            <remote-alias>Water productivity, total (constant 2015 US$ GDP per cubic meter of total freshwater withdrawal)</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[environmental_predictors.csv_C4E0CB1711F946B080BA8EE5F35C6DE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Mineral rents (% of GDP)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Mineral rents (% of GDP)]</local-name>
            <parent-name>[environmental_predictors.csv]</parent-name>
            <remote-alias>Mineral rents (% of GDP)</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[environmental_predictors.csv_C4E0CB1711F946B080BA8EE5F35C6DE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Arable land (% of land area)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Arable land (% of land area)]</local-name>
            <parent-name>[environmental_predictors.csv]</parent-name>
            <remote-alias>Arable land (% of land area)</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[environmental_predictors.csv_C4E0CB1711F946B080BA8EE5F35C6DE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population density (people per sq. km of land area)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Population density (people per sq. km of land area)]</local-name>
            <parent-name>[environmental_predictors.csv]</parent-name>
            <remote-alias>Population density (people per sq. km of land area)</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[environmental_predictors.csv_C4E0CB1711F946B080BA8EE5F35C6DE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Carbon dioxide (CO2) emissions excluding LULUCF per capita (t CO2e/capita)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Carbon dioxide (CO2) emissions excluding LULUCF per capita (t CO2e/capita)]</local-name>
            <parent-name>[environmental_predictors.csv]</parent-name>
            <remote-alias>Carbon dioxide (CO2) emissions excluding LULUCF per capita (t CO2e/capita)</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[environmental_predictors.csv_C4E0CB1711F946B080BA8EE5F35C6DE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Methane (CH4) emissions from Building (Energy) (Mt CO2e)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Methane (CH4) emissions from Building (Energy) (Mt CO2e)]</local-name>
            <parent-name>[environmental_predictors.csv]</parent-name>
            <remote-alias>Methane (CH4) emissions from Building (Energy) (Mt CO2e)</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[environmental_predictors.csv_C4E0CB1711F946B080BA8EE5F35C6DE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Forest area (% of land area)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Forest area (% of land area)]</local-name>
            <parent-name>[environmental_predictors.csv]</parent-name>
            <remote-alias>Forest area (% of land area)</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[environmental_predictors.csv_C4E0CB1711F946B080BA8EE5F35C6DE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Rural population growth (annual %)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Rural population growth (annual %)]</local-name>
            <parent-name>[environmental_predictors.csv]</parent-name>
            <remote-alias>Rural population growth (annual %)</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[environmental_predictors.csv_C4E0CB1711F946B080BA8EE5F35C6DE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Renewable internal freshwater resources per capita (cubic meters)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Renewable internal freshwater resources per capita (cubic meters)]</local-name>
            <parent-name>[environmental_predictors.csv]</parent-name>
            <remote-alias>Renewable internal freshwater resources per capita (cubic meters)</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[environmental_predictors.csv_C4E0CB1711F946B080BA8EE5F35C6DE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Natural gas rents (% of GDP)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Natural gas rents (% of GDP)]</local-name>
            <parent-name>[environmental_predictors.csv]</parent-name>
            <remote-alias>Natural gas rents (% of GDP)</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[environmental_predictors.csv_C4E0CB1711F946B080BA8EE5F35C6DE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GOAL 13: Climate Action (5 year moving average)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[GOAL 13: Climate Action (5 year moving average)]</local-name>
            <parent-name>[environmental_predictors.csv]</parent-name>
            <remote-alias>GOAL 13: Climate Action (5 year moving average)</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[environmental_predictors.csv_C4E0CB1711F946B080BA8EE5F35C6DE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Coal rents (% of GDP)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Coal rents (% of GDP)]</local-name>
            <parent-name>[environmental_predictors.csv]</parent-name>
            <remote-alias>Coal rents (% of GDP)</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[environmental_predictors.csv_C4E0CB1711F946B080BA8EE5F35C6DE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Oil rents (% of GDP)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Oil rents (% of GDP)]</local-name>
            <parent-name>[environmental_predictors.csv]</parent-name>
            <remote-alias>Oil rents (% of GDP)</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[environmental_predictors.csv_C4E0CB1711F946B080BA8EE5F35C6DE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='real' name='[Aquaculture production (metric tons)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Arable land (% of land area)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Capture fisheries production (metric tons)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Carbon dioxide (CO2) emissions excluding LULUCF per capita (t CO2e/capita)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Coal rents (% of GDP)]' role='measure' type='quantitative' />
      <column caption='Country Short Name' datatype='string' name='[CountryShortName]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='real' name='[Fertilizer consumption (kilograms per hectare of arable land)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Forest area (% of land area)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Forest rents (% of GDP)]' role='measure' type='quantitative' />
      <column datatype='real' name='[GOAL 13: Climate Action (5 year moving average)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Methane (CH4) emissions from Building (Energy) (Mt CO2e)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Mineral rents (% of GDP)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Natural gas rents (% of GDP)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Nitrous oxide (N2O) emissions (total) excluding LULUCF (% change from 1990)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Oil rents (% of GDP)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Population density (people per sq. km of land area)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Renewable internal freshwater resources per capita (cubic meters)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Rural population growth (annual %)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Water productivity, total (constant 2015 US$ GDP per cubic meter of total freshwater withdrawal)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='environmental_predictors.csv' datatype='table' name='[__tableau_internal_object_id__].[environmental_predictors.csv_C4E0CB1711F946B080BA8EE5F35C6DE8]' role='measure' type='quantitative' />
      <column-instance column='[Aquaculture production (metric tons)]' derivation='Avg' name='[avg:Aquaculture production (metric tons):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Arable land (% of land area)]' derivation='Avg' name='[avg:Arable land (% of land area):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Capture fisheries production (metric tons)]' derivation='Avg' name='[avg:Capture fisheries production (metric tons):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Carbon dioxide (CO2) emissions excluding LULUCF per capita (t CO2e/capita)]' derivation='Avg' name='[avg:Carbon dioxide (CO2) emissions excluding LULUCF per capita (t CO2e/capita):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Coal rents (% of GDP)]' derivation='Avg' name='[avg:Coal rents (% of GDP):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Fertilizer consumption (kilograms per hectare of arable land)]' derivation='Avg' name='[avg:Fertilizer consumption (kilograms per hectare of arable land):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Forest area (% of land area)]' derivation='Avg' name='[avg:Forest area (% of land area):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Forest rents (% of GDP)]' derivation='Avg' name='[avg:Forest rents (% of GDP):qk]' pivot='key' type='quantitative' />
      <column-instance column='[GOAL 13: Climate Action (5 year moving average)]' derivation='Avg' name='[avg:GOAL 13: Climate Action (5 year moving average):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Methane (CH4) emissions from Building (Energy) (Mt CO2e)]' derivation='Avg' name='[avg:Methane (CH4) emissions from Building (Energy) (Mt CO2e):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Mineral rents (% of GDP)]' derivation='Avg' name='[avg:Mineral rents (% of GDP):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Natural gas rents (% of GDP)]' derivation='Avg' name='[avg:Natural gas rents (% of GDP):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Nitrous oxide (N2O) emissions (total) excluding LULUCF (% change from 1990)]' derivation='Avg' name='[avg:Nitrous oxide (N2O) emissions (total) excluding LULUCF (% change from 1990):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Oil rents (% of GDP)]' derivation='Avg' name='[avg:Oil rents (% of GDP):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Population density (people per sq. km of land area)]' derivation='Avg' name='[avg:Population density (people per sq. km of land area):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Renewable internal freshwater resources per capita (cubic meters)]' derivation='Avg' name='[avg:Renewable internal freshwater resources per capita (cubic meters):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Rural population growth (annual %)]' derivation='Avg' name='[avg:Rural population growth (annual %):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Water productivity, total (constant 2015 US$ GDP per cubic meter of total freshwater withdrawal)]' derivation='Avg' name='[avg:Water productivity, total (constant 2015 US$ GDP per cubic meter of total freshwater withdrawal):qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <analytic-model>
        <name>
          <field name='[AnalyticModel:{513deeca-ef57-4ab3-a1eb-00e45d62fec9}]' />
        </name>
        <analytic-model-specifications class='cluster-specifications'>
          <analysis-fields>
            <field name='[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Aquaculture production (metric tons):qk]' />
            <field name='[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Arable land (% of land area):qk]' />
            <field name='[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Capture fisheries production (metric tons):qk]' />
            <field name='[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Carbon dioxide (CO2) emissions excluding LULUCF per capita (t CO2e/capita):qk]' />
            <field name='[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Coal rents (% of GDP):qk]' />
            <field name='[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Fertilizer consumption (kilograms per hectare of arable land):qk]' />
            <field name='[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Forest area (% of land area):qk]' />
            <field name='[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Forest rents (% of GDP):qk]' />
            <field name='[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:GOAL 13: Climate Action (5 year moving average):qk]' />
            <field name='[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Methane (CH4) emissions from Building (Energy) (Mt CO2e):qk]' />
            <field name='[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Mineral rents (% of GDP):qk]' />
            <field name='[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Natural gas rents (% of GDP):qk]' />
            <field name='[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Nitrous oxide (N2O) emissions (total) excluding LULUCF (% change from 1990):qk]' />
            <field name='[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Oil rents (% of GDP):qk]' />
            <field name='[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Population density (people per sq. km of land area):qk]' />
            <field name='[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Renewable internal freshwater resources per capita (cubic meters):qk]' />
            <field name='[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Rural population growth (annual %):qk]' />
            <field name='[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Water productivity, total (constant 2015 US$ GDP per cubic meter of total freshwater withdrawal):qk]' />
          </analysis-fields>
          <filter-fields />
          <lod-fields />
          <number-of-desired-clusters>0</number-of-desired-clusters>
          <is-dissagregate>false</is-dissagregate>
        </analytic-model-specifications>
        <result-fields>
          <field name='[federated.01cgkm51l5oq0x10q382e1vejl59].[AdhocCluster:2]' />
        </result-fields>
      </analytic-model>
      <analytic-model>
        <name>
          <field name='[AnalyticModel:{f77f02b8-282d-401a-9347-4726b76790e4}]' />
        </name>
        <analytic-model-specifications class='cluster-specifications'>
          <analysis-fields>
            <field name='[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Aquaculture production (metric tons):qk]' />
            <field name='[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Arable land (% of land area):qk]' />
            <field name='[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Capture fisheries production (metric tons):qk]' />
            <field name='[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Carbon dioxide (CO2) emissions excluding LULUCF per capita (t CO2e/capita):qk]' />
            <field name='[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Coal rents (% of GDP):qk]' />
            <field name='[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Fertilizer consumption (kilograms per hectare of arable land):qk]' />
            <field name='[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Forest area (% of land area):qk]' />
            <field name='[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Forest rents (% of GDP):qk]' />
            <field name='[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:GOAL 13: Climate Action (5 year moving average):qk]' />
            <field name='[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Methane (CH4) emissions from Building (Energy) (Mt CO2e):qk]' />
            <field name='[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Mineral rents (% of GDP):qk]' />
            <field name='[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Natural gas rents (% of GDP):qk]' />
            <field name='[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Nitrous oxide (N2O) emissions (total) excluding LULUCF (% change from 1990):qk]' />
            <field name='[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Oil rents (% of GDP):qk]' />
            <field name='[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Population density (people per sq. km of land area):qk]' />
            <field name='[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Renewable internal freshwater resources per capita (cubic meters):qk]' />
            <field name='[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Rural population growth (annual %):qk]' />
            <field name='[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Water productivity, total (constant 2015 US$ GDP per cubic meter of total freshwater withdrawal):qk]' />
          </analysis-fields>
          <filter-fields />
          <lod-fields />
          <number-of-desired-clusters>0</number-of-desired-clusters>
          <is-dissagregate>false</is-dissagregate>
        </analytic-model-specifications>
        <result-fields />
      </analytic-model>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='environmental_predictors.csv' id='environmental_predictors.csv_C4E0CB1711F946B080BA8EE5F35C6DE8'>
            <properties context=''>
              <relation connection='textscan.1bqo8tn0ylvcp217j4xi601fo05m' name='environmental_predictors.csv' table='[environmental_predictors#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='CountryShortName' ordinal='0' />
                  <column datatype='real' name='Year' ordinal='1' />
                  <column datatype='real' name='Life expectancy at birth, total (years)' ordinal='2' />
                  <column datatype='real' name='Nitrous oxide (N2O) emissions (total) excluding LULUCF (% change from 1990)' ordinal='3' />
                  <column datatype='real' name='Forest rents (% of GDP)' ordinal='4' />
                  <column datatype='real' name='Capture fisheries production (metric tons)' ordinal='5' />
                  <column datatype='real' name='Aquaculture production (metric tons)' ordinal='6' />
                  <column datatype='real' name='Fertilizer consumption (kilograms per hectare of arable land)' ordinal='7' />
                  <column datatype='real' name='Water productivity, total (constant 2015 US$ GDP per cubic meter of total freshwater withdrawal)' ordinal='8' />
                  <column datatype='real' name='Mineral rents (% of GDP)' ordinal='9' />
                  <column datatype='real' name='Arable land (% of land area)' ordinal='10' />
                  <column datatype='real' name='Population density (people per sq. km of land area)' ordinal='11' />
                  <column datatype='real' name='Carbon dioxide (CO2) emissions excluding LULUCF per capita (t CO2e/capita)' ordinal='12' />
                  <column datatype='real' name='Methane (CH4) emissions from Building (Energy) (Mt CO2e)' ordinal='13' />
                  <column datatype='real' name='Forest area (% of land area)' ordinal='14' />
                  <column datatype='real' name='Rural population growth (annual %)' ordinal='15' />
                  <column datatype='real' name='Renewable internal freshwater resources per capita (cubic meters)' ordinal='16' />
                  <column datatype='real' name='Natural gas rents (% of GDP)' ordinal='17' />
                  <column datatype='real' name='GOAL 13: Climate Action (5 year moving average)' ordinal='18' />
                  <column datatype='real' name='Coal rents (% of GDP)' ordinal='19' />
                  <column datatype='real' name='Oil rents (% of GDP)' ordinal='20' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='health_predictors' inline='true' name='federated.0vh5wok1xft0gw17xhskh1bhtrdb' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='health_predictors' name='textscan.0j4lq7a1obdwpj17t4jfp0msscko'>
            <connection class='textscan' directory='D:/GitHub Repos/culminating-project-group-1/Week 8 - Analysis/JC' filename='health_predictors.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0j4lq7a1obdwpj17t4jfp0msscko' name='health_predictors.csv' table='[health_predictors#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='CountryShortName' ordinal='0' />
            <column datatype='real' name='Year' ordinal='1' />
            <column datatype='real' name='Life expectancy at birth, total (years)' ordinal='2' />
            <column datatype='real' name='Prevalence of undernourishment (% of population)' ordinal='3' />
            <column datatype='real' name='Incidence of tuberculosis (per 100,000 people)' ordinal='4' />
            <column datatype='real' name='Number of maternal deaths' ordinal='5' />
            <column datatype='real' name='Lifetime risk of maternal death (%)' ordinal='6' />
            <column datatype='real' name='Prevalence of overweight (modeled estimate, % of children under 5)' ordinal='7' />
            <column datatype='real' name='Lifetime risk of maternal death (1 in: rate varies by country)' ordinal='8' />
            <column datatype='real' name='Total alcohol consumption per capita (liters of pure alcohol, projected estimates, 15+ years of age)' ordinal='9' />
            <column datatype='real' name='Domestic private health expenditure per capita (current US$)' ordinal='10' />
            <column datatype='real' name='People practicing open defecation (% of population)' ordinal='11' />
            <column datatype='real' name='Population ages 0-14, total' ordinal='12' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0j4lq7a1obdwpj17t4jfp0msscko' name='health_predictors.csv' table='[health_predictors#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='CountryShortName' ordinal='0' />
            <column datatype='real' name='Year' ordinal='1' />
            <column datatype='real' name='Life expectancy at birth, total (years)' ordinal='2' />
            <column datatype='real' name='Prevalence of undernourishment (% of population)' ordinal='3' />
            <column datatype='real' name='Incidence of tuberculosis (per 100,000 people)' ordinal='4' />
            <column datatype='real' name='Number of maternal deaths' ordinal='5' />
            <column datatype='real' name='Lifetime risk of maternal death (%)' ordinal='6' />
            <column datatype='real' name='Prevalence of overweight (modeled estimate, % of children under 5)' ordinal='7' />
            <column datatype='real' name='Lifetime risk of maternal death (1 in: rate varies by country)' ordinal='8' />
            <column datatype='real' name='Total alcohol consumption per capita (liters of pure alcohol, projected estimates, 15+ years of age)' ordinal='9' />
            <column datatype='real' name='Domestic private health expenditure per capita (current US$)' ordinal='10' />
            <column datatype='real' name='People practicing open defecation (% of population)' ordinal='11' />
            <column datatype='real' name='Population ages 0-14, total' ordinal='12' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[health_predictors.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CountryShortName</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CountryShortName]</local-name>
            <parent-name>[health_predictors.csv]</parent-name>
            <remote-alias>CountryShortName</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[health_predictors.csv_8F42F0CAB74647D09CE650B2B5647606]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[health_predictors.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[health_predictors.csv_8F42F0CAB74647D09CE650B2B5647606]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Life expectancy at birth, total (years)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Life expectancy at birth, total (years)]</local-name>
            <parent-name>[health_predictors.csv]</parent-name>
            <remote-alias>Life expectancy at birth, total (years)</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[health_predictors.csv_8F42F0CAB74647D09CE650B2B5647606]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Prevalence of undernourishment (% of population)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Prevalence of undernourishment (% of population)]</local-name>
            <parent-name>[health_predictors.csv]</parent-name>
            <remote-alias>Prevalence of undernourishment (% of population)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[health_predictors.csv_8F42F0CAB74647D09CE650B2B5647606]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Incidence of tuberculosis (per 100,000 people)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Incidence of tuberculosis (per 100,000 people)]</local-name>
            <parent-name>[health_predictors.csv]</parent-name>
            <remote-alias>Incidence of tuberculosis (per 100,000 people)</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[health_predictors.csv_8F42F0CAB74647D09CE650B2B5647606]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of maternal deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Number of maternal deaths]</local-name>
            <parent-name>[health_predictors.csv]</parent-name>
            <remote-alias>Number of maternal deaths</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[health_predictors.csv_8F42F0CAB74647D09CE650B2B5647606]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Lifetime risk of maternal death (%)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Lifetime risk of maternal death (%)]</local-name>
            <parent-name>[health_predictors.csv]</parent-name>
            <remote-alias>Lifetime risk of maternal death (%)</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[health_predictors.csv_8F42F0CAB74647D09CE650B2B5647606]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Prevalence of overweight (modeled estimate, % of children under 5)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Prevalence of overweight (modeled estimate, % of children under 5)]</local-name>
            <parent-name>[health_predictors.csv]</parent-name>
            <remote-alias>Prevalence of overweight (modeled estimate, % of children under 5)</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[health_predictors.csv_8F42F0CAB74647D09CE650B2B5647606]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Lifetime risk of maternal death (1 in: rate varies by country)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Lifetime risk of maternal death (1 in: rate varies by country)]</local-name>
            <parent-name>[health_predictors.csv]</parent-name>
            <remote-alias>Lifetime risk of maternal death (1 in: rate varies by country)</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[health_predictors.csv_8F42F0CAB74647D09CE650B2B5647606]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total alcohol consumption per capita (liters of pure alcohol, projected estimates, 15+ years of age)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total alcohol consumption per capita (liters of pure alcohol, projected estimates, 15+ years of age)]</local-name>
            <parent-name>[health_predictors.csv]</parent-name>
            <remote-alias>Total alcohol consumption per capita (liters of pure alcohol, projected estimates, 15+ years of age)</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[health_predictors.csv_8F42F0CAB74647D09CE650B2B5647606]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Domestic private health expenditure per capita (current US$)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Domestic private health expenditure per capita (current US$)]</local-name>
            <parent-name>[health_predictors.csv]</parent-name>
            <remote-alias>Domestic private health expenditure per capita (current US$)</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[health_predictors.csv_8F42F0CAB74647D09CE650B2B5647606]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>People practicing open defecation (% of population)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[People practicing open defecation (% of population)]</local-name>
            <parent-name>[health_predictors.csv]</parent-name>
            <remote-alias>People practicing open defecation (% of population)</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[health_predictors.csv_8F42F0CAB74647D09CE650B2B5647606]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population ages 0-14, total</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Population ages 0-14, total]</local-name>
            <parent-name>[health_predictors.csv]</parent-name>
            <remote-alias>Population ages 0-14, total</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[health_predictors.csv_8F42F0CAB74647D09CE650B2B5647606]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Country Short Name' datatype='string' name='[CountryShortName]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='real' name='[Domestic private health expenditure per capita (current US$)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Incidence of tuberculosis (per 100,000 people)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Lifetime risk of maternal death (%)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Lifetime risk of maternal death (1 in: rate varies by country)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Number of maternal deaths]' role='measure' type='quantitative' />
      <column datatype='real' name='[People practicing open defecation (% of population)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Population ages 0-14, total]' role='measure' type='quantitative' />
      <column datatype='real' name='[Prevalence of overweight (modeled estimate, % of children under 5)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Prevalence of undernourishment (% of population)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Total alcohol consumption per capita (liters of pure alcohol, projected estimates, 15+ years of age)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='health_predictors.csv' datatype='table' name='[__tableau_internal_object_id__].[health_predictors.csv_8F42F0CAB74647D09CE650B2B5647606]' role='measure' type='quantitative' />
      <column-instance column='[Domestic private health expenditure per capita (current US$)]' derivation='Avg' name='[avg:Domestic private health expenditure per capita (current US$):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Incidence of tuberculosis (per 100,000 people)]' derivation='Avg' name='[avg:Incidence of tuberculosis (per 100,000 people):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Lifetime risk of maternal death (%)]' derivation='Avg' name='[avg:Lifetime risk of maternal death (%):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Lifetime risk of maternal death (1 in: rate varies by country)]' derivation='Avg' name='[avg:Lifetime risk of maternal death (1 in: rate varies by country):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of maternal deaths]' derivation='Avg' name='[avg:Number of maternal deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[People practicing open defecation (% of population)]' derivation='Avg' name='[avg:People practicing open defecation (% of population):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Population ages 0-14, total]' derivation='Avg' name='[avg:Population ages 0-14, total:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Prevalence of overweight (modeled estimate, % of children under 5)]' derivation='Avg' name='[avg:Prevalence of overweight (modeled estimate, % of children under 5):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Prevalence of undernourishment (% of population)]' derivation='Avg' name='[avg:Prevalence of undernourishment (% of population):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total alcohol consumption per capita (liters of pure alcohol, projected estimates, 15+ years of age)]' derivation='Avg' name='[avg:Total alcohol consumption per capita (liters of pure alcohol, projected estimates, 15+ years of age):qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <analytic-model>
        <name>
          <field name='[AnalyticModel:{78b05925-5a2f-4447-b79f-a92a35ccc233}]' />
        </name>
        <analytic-model-specifications class='cluster-specifications'>
          <analysis-fields>
            <field name='[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[avg:Domestic private health expenditure per capita (current US$):qk]' />
            <field name='[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[avg:Incidence of tuberculosis (per 100,000 people):qk]' />
            <field name='[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[avg:Lifetime risk of maternal death (%):qk]' />
            <field name='[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[avg:Lifetime risk of maternal death (1 in: rate varies by country):qk]' />
            <field name='[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[avg:Number of maternal deaths:qk]' />
            <field name='[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[avg:People practicing open defecation (% of population):qk]' />
            <field name='[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[avg:Population ages 0-14, total:qk]' />
            <field name='[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[avg:Prevalence of overweight (modeled estimate, % of children under 5):qk]' />
            <field name='[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[avg:Prevalence of undernourishment (% of population):qk]' />
            <field name='[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[avg:Total alcohol consumption per capita (liters of pure alcohol, projected estimates, 15+ years of age):qk]' />
          </analysis-fields>
          <filter-fields />
          <lod-fields />
          <number-of-desired-clusters>0</number-of-desired-clusters>
          <is-dissagregate>false</is-dissagregate>
        </analytic-model-specifications>
        <result-fields />
      </analytic-model>
      <analytic-model>
        <name>
          <field name='[AnalyticModel:{acc4996c-858f-45c4-9d8b-6a7b6abbd507}]' />
        </name>
        <analytic-model-specifications class='cluster-specifications'>
          <analysis-fields>
            <field name='[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[avg:Domestic private health expenditure per capita (current US$):qk]' />
            <field name='[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[avg:Incidence of tuberculosis (per 100,000 people):qk]' />
            <field name='[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[avg:Lifetime risk of maternal death (%):qk]' />
            <field name='[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[avg:Lifetime risk of maternal death (1 in: rate varies by country):qk]' />
            <field name='[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[avg:Number of maternal deaths:qk]' />
            <field name='[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[avg:People practicing open defecation (% of population):qk]' />
            <field name='[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[avg:Population ages 0-14, total:qk]' />
            <field name='[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[avg:Prevalence of overweight (modeled estimate, % of children under 5):qk]' />
            <field name='[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[avg:Prevalence of undernourishment (% of population):qk]' />
            <field name='[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[avg:Total alcohol consumption per capita (liters of pure alcohol, projected estimates, 15+ years of age):qk]' />
          </analysis-fields>
          <filter-fields />
          <lod-fields />
          <number-of-desired-clusters>0</number-of-desired-clusters>
          <is-dissagregate>false</is-dissagregate>
        </analytic-model-specifications>
        <result-fields>
          <field name='[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[AdhocCluster:2]' />
        </result-fields>
      </analytic-model>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='health_predictors.csv' id='health_predictors.csv_8F42F0CAB74647D09CE650B2B5647606'>
            <properties context=''>
              <relation connection='textscan.0j4lq7a1obdwpj17t4jfp0msscko' name='health_predictors.csv' table='[health_predictors#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='CountryShortName' ordinal='0' />
                  <column datatype='real' name='Year' ordinal='1' />
                  <column datatype='real' name='Life expectancy at birth, total (years)' ordinal='2' />
                  <column datatype='real' name='Prevalence of undernourishment (% of population)' ordinal='3' />
                  <column datatype='real' name='Incidence of tuberculosis (per 100,000 people)' ordinal='4' />
                  <column datatype='real' name='Number of maternal deaths' ordinal='5' />
                  <column datatype='real' name='Lifetime risk of maternal death (%)' ordinal='6' />
                  <column datatype='real' name='Prevalence of overweight (modeled estimate, % of children under 5)' ordinal='7' />
                  <column datatype='real' name='Lifetime risk of maternal death (1 in: rate varies by country)' ordinal='8' />
                  <column datatype='real' name='Total alcohol consumption per capita (liters of pure alcohol, projected estimates, 15+ years of age)' ordinal='9' />
                  <column datatype='real' name='Domestic private health expenditure per capita (current US$)' ordinal='10' />
                  <column datatype='real' name='People practicing open defecation (% of population)' ordinal='11' />
                  <column datatype='real' name='Population ages 0-14, total' ordinal='12' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='env'>
      <table>
        <view>
          <datasources>
            <datasource caption='environmental_predictors' name='federated.01cgkm51l5oq0x10q382e1vejl59' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.01cgkm51l5oq0x10q382e1vejl59'>
            <column auto-hidden='true' caption='Clusters' datatype='integer' hidden='true' is-adhoc-cluster='true' name='[AdhocCluster:1]' parent-model='[AnalyticModel:{f77f02b8-282d-401a-9347-4726b76790e4}]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='-1' value='Cluster Outliers' />
                <alias key='0' value='Not Clustered' />
                <alias key='1' value='Cluster 1' />
                <alias key='2' value='Cluster 2' />
                <alias key='3' value='Cluster 3' />
                <alias key='4' value='Cluster 4' />
                <alias key='5' value='Cluster 5' />
                <alias key='6' value='Cluster 6' />
                <alias key='7' value='Cluster 7' />
                <alias key='8' value='Cluster 8' />
                <alias key='9' value='Cluster 9' />
                <alias key='10' value='Cluster 10' />
                <alias key='11' value='Cluster 11' />
                <alias key='12' value='Cluster 12' />
                <alias key='13' value='Cluster 13' />
                <alias key='14' value='Cluster 14' />
                <alias key='15' value='Cluster 15' />
                <alias key='16' value='Cluster 16' />
                <alias key='17' value='Cluster 17' />
                <alias key='18' value='Cluster 18' />
                <alias key='19' value='Cluster 19' />
                <alias key='20' value='Cluster 20' />
                <alias key='21' value='Cluster 21' />
                <alias key='22' value='Cluster 22' />
                <alias key='23' value='Cluster 23' />
                <alias key='24' value='Cluster 24' />
                <alias key='25' value='Cluster 25' />
                <alias key='26' value='Cluster 26' />
                <alias key='27' value='Cluster 27' />
                <alias key='28' value='Cluster 28' />
                <alias key='29' value='Cluster 29' />
                <alias key='30' value='Cluster 30' />
                <alias key='31' value='Cluster 31' />
                <alias key='32' value='Cluster 32' />
                <alias key='33' value='Cluster 33' />
                <alias key='34' value='Cluster 34' />
                <alias key='35' value='Cluster 35' />
                <alias key='36' value='Cluster 36' />
                <alias key='37' value='Cluster 37' />
                <alias key='38' value='Cluster 38' />
                <alias key='39' value='Cluster 39' />
                <alias key='40' value='Cluster 40' />
                <alias key='41' value='Cluster 41' />
                <alias key='42' value='Cluster 42' />
                <alias key='43' value='Cluster 43' />
                <alias key='44' value='Cluster 44' />
                <alias key='45' value='Cluster 45' />
                <alias key='46' value='Cluster 46' />
                <alias key='47' value='Cluster 47' />
                <alias key='48' value='Cluster 48' />
                <alias key='49' value='Cluster 49' />
                <alias key='50' value='Cluster 50' />
              </aliases>
            </column>
            <column datatype='real' name='[Aquaculture production (metric tons)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Arable land (% of land area)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Capture fisheries production (metric tons)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Carbon dioxide (CO2) emissions excluding LULUCF per capita (t CO2e/capita)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Coal rents (% of GDP)]' role='measure' type='quantitative' />
            <column caption='Country Short Name' datatype='string' name='[CountryShortName]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Fertilizer consumption (kilograms per hectare of arable land)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Forest area (% of land area)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Forest rents (% of GDP)]' role='measure' type='quantitative' />
            <column datatype='real' name='[GOAL 13: Climate Action (5 year moving average)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Methane (CH4) emissions from Building (Energy) (Mt CO2e)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Mineral rents (% of GDP)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Natural gas rents (% of GDP)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Nitrous oxide (N2O) emissions (total) excluding LULUCF (% change from 1990)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Oil rents (% of GDP)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Population density (people per sq. km of land area)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Renewable internal freshwater resources per capita (cubic meters)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Rural population growth (annual %)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Water productivity, total (constant 2015 US$ GDP per cubic meter of total freshwater withdrawal)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Aquaculture production (metric tons)]' derivation='Avg' name='[avg:Aquaculture production (metric tons):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Arable land (% of land area)]' derivation='Avg' name='[avg:Arable land (% of land area):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Capture fisheries production (metric tons)]' derivation='Avg' name='[avg:Capture fisheries production (metric tons):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Carbon dioxide (CO2) emissions excluding LULUCF per capita (t CO2e/capita)]' derivation='Avg' name='[avg:Carbon dioxide (CO2) emissions excluding LULUCF per capita (t CO2e/capita):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Coal rents (% of GDP)]' derivation='Avg' name='[avg:Coal rents (% of GDP):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Fertilizer consumption (kilograms per hectare of arable land)]' derivation='Avg' name='[avg:Fertilizer consumption (kilograms per hectare of arable land):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forest area (% of land area)]' derivation='Avg' name='[avg:Forest area (% of land area):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forest rents (% of GDP)]' derivation='Avg' name='[avg:Forest rents (% of GDP):qk]' pivot='key' type='quantitative' />
            <column-instance column='[GOAL 13: Climate Action (5 year moving average)]' derivation='Avg' name='[avg:GOAL 13: Climate Action (5 year moving average):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Methane (CH4) emissions from Building (Energy) (Mt CO2e)]' derivation='Avg' name='[avg:Methane (CH4) emissions from Building (Energy) (Mt CO2e):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Mineral rents (% of GDP)]' derivation='Avg' name='[avg:Mineral rents (% of GDP):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Natural gas rents (% of GDP)]' derivation='Avg' name='[avg:Natural gas rents (% of GDP):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Nitrous oxide (N2O) emissions (total) excluding LULUCF (% change from 1990)]' derivation='Avg' name='[avg:Nitrous oxide (N2O) emissions (total) excluding LULUCF (% change from 1990):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Oil rents (% of GDP)]' derivation='Avg' name='[avg:Oil rents (% of GDP):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population density (people per sq. km of land area)]' derivation='Avg' name='[avg:Population density (people per sq. km of land area):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Renewable internal freshwater resources per capita (cubic meters)]' derivation='Avg' name='[avg:Renewable internal freshwater resources per capita (cubic meters):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Rural population growth (annual %)]' derivation='Avg' name='[avg:Rural population growth (annual %):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Water productivity, total (constant 2015 US$ GDP per cubic meter of total freshwater withdrawal)]' derivation='Avg' name='[avg:Water productivity, total (constant 2015 US$ GDP per cubic meter of total freshwater withdrawal):qk]' pivot='key' type='quantitative' />
            <column-instance column='[AdhocCluster:1]' derivation='None' is-adhoc-cluster='true' name='[none:AdhocCluster:1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[CountryShortName]' derivation='None' name='[none:CountryShortName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.01cgkm51l5oq0x10q382e1vejl59].[none:Year:qk]' included-values='in-range'>
            <min>2005.0</min>
            <max>2005.0</max>
          </filter>
          <slices>
            <column>[federated.01cgkm51l5oq0x10q382e1vejl59].[none:Year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.01cgkm51l5oq0x10q382e1vejl59].[none:AdhocCluster:1:ok]' />
              <lod column='[federated.01cgkm51l5oq0x10q382e1vejl59].[none:CountryShortName:nk]' />
              <lod column='[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Aquaculture production (metric tons):qk]' />
              <lod column='[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Arable land (% of land area):qk]' />
              <lod column='[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Capture fisheries production (metric tons):qk]' />
              <lod column='[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Carbon dioxide (CO2) emissions excluding LULUCF per capita (t CO2e/capita):qk]' />
              <lod column='[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Coal rents (% of GDP):qk]' />
              <lod column='[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Fertilizer consumption (kilograms per hectare of arable land):qk]' />
              <lod column='[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Forest area (% of land area):qk]' />
              <lod column='[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Forest rents (% of GDP):qk]' />
              <lod column='[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:GOAL 13: Climate Action (5 year moving average):qk]' />
              <lod column='[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Methane (CH4) emissions from Building (Energy) (Mt CO2e):qk]' />
              <lod column='[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Mineral rents (% of GDP):qk]' />
              <lod column='[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Natural gas rents (% of GDP):qk]' />
              <lod column='[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Nitrous oxide (N2O) emissions (total) excluding LULUCF (% change from 1990):qk]' />
              <lod column='[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Oil rents (% of GDP):qk]' />
              <lod column='[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Population density (people per sq. km of land area):qk]' />
              <lod column='[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Renewable internal freshwater resources per capita (cubic meters):qk]' />
              <lod column='[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Rural population growth (annual %):qk]' />
              <lod column='[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Water productivity, total (constant 2015 US$ GDP per cubic meter of total freshwater withdrawal):qk]' />
              <geometry column='[federated.01cgkm51l5oq0x10q382e1vejl59].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.01cgkm51l5oq0x10q382e1vejl59].[Latitude (generated)]</rows>
        <cols>[federated.01cgkm51l5oq0x10q382e1vejl59].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{D737B8B4-74AC-483E-AFF3-B019D7748D98}' />
    </worksheet>
    <worksheet name='env_kMeans'>
      <table>
        <view>
          <datasources>
            <datasource caption='environmental_predictors' name='federated.01cgkm51l5oq0x10q382e1vejl59' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.01cgkm51l5oq0x10q382e1vejl59'>
            <column auto-hidden='true' caption='Clusters (1)' datatype='integer' hidden='true' is-adhoc-cluster='true' name='[AdhocCluster:2]' parent-model='[AnalyticModel:{513deeca-ef57-4ab3-a1eb-00e45d62fec9}]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='-1' value='Cluster Outliers' />
                <alias key='0' value='Not Clustered' />
                <alias key='1' value='Cluster 1' />
                <alias key='2' value='Cluster 2' />
                <alias key='3' value='Cluster 3' />
                <alias key='4' value='Cluster 4' />
                <alias key='5' value='Cluster 5' />
                <alias key='6' value='Cluster 6' />
                <alias key='7' value='Cluster 7' />
                <alias key='8' value='Cluster 8' />
                <alias key='9' value='Cluster 9' />
                <alias key='10' value='Cluster 10' />
                <alias key='11' value='Cluster 11' />
                <alias key='12' value='Cluster 12' />
                <alias key='13' value='Cluster 13' />
                <alias key='14' value='Cluster 14' />
                <alias key='15' value='Cluster 15' />
                <alias key='16' value='Cluster 16' />
                <alias key='17' value='Cluster 17' />
                <alias key='18' value='Cluster 18' />
                <alias key='19' value='Cluster 19' />
                <alias key='20' value='Cluster 20' />
                <alias key='21' value='Cluster 21' />
                <alias key='22' value='Cluster 22' />
                <alias key='23' value='Cluster 23' />
                <alias key='24' value='Cluster 24' />
                <alias key='25' value='Cluster 25' />
                <alias key='26' value='Cluster 26' />
                <alias key='27' value='Cluster 27' />
                <alias key='28' value='Cluster 28' />
                <alias key='29' value='Cluster 29' />
                <alias key='30' value='Cluster 30' />
                <alias key='31' value='Cluster 31' />
                <alias key='32' value='Cluster 32' />
                <alias key='33' value='Cluster 33' />
                <alias key='34' value='Cluster 34' />
                <alias key='35' value='Cluster 35' />
                <alias key='36' value='Cluster 36' />
                <alias key='37' value='Cluster 37' />
                <alias key='38' value='Cluster 38' />
                <alias key='39' value='Cluster 39' />
                <alias key='40' value='Cluster 40' />
                <alias key='41' value='Cluster 41' />
                <alias key='42' value='Cluster 42' />
                <alias key='43' value='Cluster 43' />
                <alias key='44' value='Cluster 44' />
                <alias key='45' value='Cluster 45' />
                <alias key='46' value='Cluster 46' />
                <alias key='47' value='Cluster 47' />
                <alias key='48' value='Cluster 48' />
                <alias key='49' value='Cluster 49' />
                <alias key='50' value='Cluster 50' />
              </aliases>
            </column>
            <column datatype='real' name='[Aquaculture production (metric tons)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Arable land (% of land area)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Capture fisheries production (metric tons)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Carbon dioxide (CO2) emissions excluding LULUCF per capita (t CO2e/capita)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Coal rents (% of GDP)]' role='measure' type='quantitative' />
            <column caption='Country Short Name' datatype='string' name='[CountryShortName]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Fertilizer consumption (kilograms per hectare of arable land)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Forest area (% of land area)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Forest rents (% of GDP)]' role='measure' type='quantitative' />
            <column datatype='real' name='[GOAL 13: Climate Action (5 year moving average)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Methane (CH4) emissions from Building (Energy) (Mt CO2e)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Mineral rents (% of GDP)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Natural gas rents (% of GDP)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Nitrous oxide (N2O) emissions (total) excluding LULUCF (% change from 1990)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Oil rents (% of GDP)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Population density (people per sq. km of land area)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Renewable internal freshwater resources per capita (cubic meters)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Rural population growth (annual %)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Water productivity, total (constant 2015 US$ GDP per cubic meter of total freshwater withdrawal)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Aquaculture production (metric tons)]' derivation='Avg' name='[avg:Aquaculture production (metric tons):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Arable land (% of land area)]' derivation='Avg' name='[avg:Arable land (% of land area):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Capture fisheries production (metric tons)]' derivation='Avg' name='[avg:Capture fisheries production (metric tons):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Carbon dioxide (CO2) emissions excluding LULUCF per capita (t CO2e/capita)]' derivation='Avg' name='[avg:Carbon dioxide (CO2) emissions excluding LULUCF per capita (t CO2e/capita):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Coal rents (% of GDP)]' derivation='Avg' name='[avg:Coal rents (% of GDP):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Fertilizer consumption (kilograms per hectare of arable land)]' derivation='Avg' name='[avg:Fertilizer consumption (kilograms per hectare of arable land):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forest area (% of land area)]' derivation='Avg' name='[avg:Forest area (% of land area):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forest rents (% of GDP)]' derivation='Avg' name='[avg:Forest rents (% of GDP):qk]' pivot='key' type='quantitative' />
            <column-instance column='[GOAL 13: Climate Action (5 year moving average)]' derivation='Avg' name='[avg:GOAL 13: Climate Action (5 year moving average):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Methane (CH4) emissions from Building (Energy) (Mt CO2e)]' derivation='Avg' name='[avg:Methane (CH4) emissions from Building (Energy) (Mt CO2e):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Mineral rents (% of GDP)]' derivation='Avg' name='[avg:Mineral rents (% of GDP):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Natural gas rents (% of GDP)]' derivation='Avg' name='[avg:Natural gas rents (% of GDP):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Nitrous oxide (N2O) emissions (total) excluding LULUCF (% change from 1990)]' derivation='Avg' name='[avg:Nitrous oxide (N2O) emissions (total) excluding LULUCF (% change from 1990):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Oil rents (% of GDP)]' derivation='Avg' name='[avg:Oil rents (% of GDP):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population density (people per sq. km of land area)]' derivation='Avg' name='[avg:Population density (people per sq. km of land area):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Renewable internal freshwater resources per capita (cubic meters)]' derivation='Avg' name='[avg:Renewable internal freshwater resources per capita (cubic meters):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Rural population growth (annual %)]' derivation='Avg' name='[avg:Rural population growth (annual %):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Water productivity, total (constant 2015 US$ GDP per cubic meter of total freshwater withdrawal)]' derivation='Avg' name='[avg:Water productivity, total (constant 2015 US$ GDP per cubic meter of total freshwater withdrawal):qk]' pivot='key' type='quantitative' />
            <column-instance column='[AdhocCluster:2]' derivation='None' is-adhoc-cluster='true' name='[none:AdhocCluster:2:ok]' pivot='key' type='ordinal' />
            <column-instance column='[CountryShortName]' derivation='None' name='[none:CountryShortName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01cgkm51l5oq0x10q382e1vejl59].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Aquaculture production (metric tons):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Arable land (\% of land area):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Capture fisheries production (metric tons):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Carbon dioxide (CO2) emissions excluding LULUCF per capita (t CO2e/capita):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Coal rents (\% of GDP):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Fertilizer consumption (kilograms per hectare of arable land):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Forest area (\% of land area):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Forest rents (\% of GDP):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:GOAL 13: Climate Action (5 year moving average):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Methane (CH4) emissions from Building (Energy) (Mt CO2e):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Mineral rents (\% of GDP):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Natural gas rents (\% of GDP):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Nitrous oxide (N2O) emissions (total) excluding LULUCF (\% change from 1990):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Oil rents (\% of GDP):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Population density (people per sq. km of land area):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Renewable internal freshwater resources per capita (cubic meters):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Rural population growth (annual \%):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01cgkm51l5oq0x10q382e1vejl59].[avg:Water productivity, total (constant 2015 US$ GDP per cubic meter of total freshwater withdrawal):qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.01cgkm51l5oq0x10q382e1vejl59].[none:Year:qk]' included-values='in-range'>
            <min>2005.0</min>
            <max>2005.0</max>
          </filter>
          <slices>
            <column>[federated.01cgkm51l5oq0x10q382e1vejl59].[none:Year:qk]</column>
            <column>[federated.01cgkm51l5oq0x10q382e1vejl59].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.01cgkm51l5oq0x10q382e1vejl59].[Multiple Values]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.01cgkm51l5oq0x10q382e1vejl59].[none:CountryShortName:nk] / [federated.01cgkm51l5oq0x10q382e1vejl59].[none:AdhocCluster:2:ok])</rows>
        <cols>[federated.01cgkm51l5oq0x10q382e1vejl59].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{61D29E9E-FB19-4659-A52C-F8D7883F420A}' />
    </worksheet>
    <worksheet name='health'>
      <table>
        <view>
          <datasources>
            <datasource caption='health_predictors' name='federated.0vh5wok1xft0gw17xhskh1bhtrdb' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0vh5wok1xft0gw17xhskh1bhtrdb'>
            <column auto-hidden='true' caption='Clusters' datatype='integer' hidden='true' is-adhoc-cluster='true' name='[AdhocCluster:1]' parent-model='[AnalyticModel:{78b05925-5a2f-4447-b79f-a92a35ccc233}]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='-1' value='Cluster Outliers' />
                <alias key='0' value='Not Clustered' />
                <alias key='1' value='Cluster 1' />
                <alias key='2' value='Cluster 2' />
                <alias key='3' value='Cluster 3' />
                <alias key='4' value='Cluster 4' />
                <alias key='5' value='Cluster 5' />
                <alias key='6' value='Cluster 6' />
                <alias key='7' value='Cluster 7' />
                <alias key='8' value='Cluster 8' />
                <alias key='9' value='Cluster 9' />
                <alias key='10' value='Cluster 10' />
                <alias key='11' value='Cluster 11' />
                <alias key='12' value='Cluster 12' />
                <alias key='13' value='Cluster 13' />
                <alias key='14' value='Cluster 14' />
                <alias key='15' value='Cluster 15' />
                <alias key='16' value='Cluster 16' />
                <alias key='17' value='Cluster 17' />
                <alias key='18' value='Cluster 18' />
                <alias key='19' value='Cluster 19' />
                <alias key='20' value='Cluster 20' />
                <alias key='21' value='Cluster 21' />
                <alias key='22' value='Cluster 22' />
                <alias key='23' value='Cluster 23' />
                <alias key='24' value='Cluster 24' />
                <alias key='25' value='Cluster 25' />
                <alias key='26' value='Cluster 26' />
                <alias key='27' value='Cluster 27' />
                <alias key='28' value='Cluster 28' />
                <alias key='29' value='Cluster 29' />
                <alias key='30' value='Cluster 30' />
                <alias key='31' value='Cluster 31' />
                <alias key='32' value='Cluster 32' />
                <alias key='33' value='Cluster 33' />
                <alias key='34' value='Cluster 34' />
                <alias key='35' value='Cluster 35' />
                <alias key='36' value='Cluster 36' />
                <alias key='37' value='Cluster 37' />
                <alias key='38' value='Cluster 38' />
                <alias key='39' value='Cluster 39' />
                <alias key='40' value='Cluster 40' />
                <alias key='41' value='Cluster 41' />
                <alias key='42' value='Cluster 42' />
                <alias key='43' value='Cluster 43' />
                <alias key='44' value='Cluster 44' />
                <alias key='45' value='Cluster 45' />
                <alias key='46' value='Cluster 46' />
                <alias key='47' value='Cluster 47' />
                <alias key='48' value='Cluster 48' />
                <alias key='49' value='Cluster 49' />
                <alias key='50' value='Cluster 50' />
              </aliases>
            </column>
            <column caption='Country Short Name' datatype='string' name='[CountryShortName]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Domestic private health expenditure per capita (current US$)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Incidence of tuberculosis (per 100,000 people)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Lifetime risk of maternal death (%)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Lifetime risk of maternal death (1 in: rate varies by country)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Number of maternal deaths]' role='measure' type='quantitative' />
            <column datatype='real' name='[People practicing open defecation (% of population)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Population ages 0-14, total]' role='measure' type='quantitative' />
            <column datatype='real' name='[Prevalence of overweight (modeled estimate, % of children under 5)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Prevalence of undernourishment (% of population)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Total alcohol consumption per capita (liters of pure alcohol, projected estimates, 15+ years of age)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Domestic private health expenditure per capita (current US$)]' derivation='Avg' name='[avg:Domestic private health expenditure per capita (current US$):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Incidence of tuberculosis (per 100,000 people)]' derivation='Avg' name='[avg:Incidence of tuberculosis (per 100,000 people):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Lifetime risk of maternal death (%)]' derivation='Avg' name='[avg:Lifetime risk of maternal death (%):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Lifetime risk of maternal death (1 in: rate varies by country)]' derivation='Avg' name='[avg:Lifetime risk of maternal death (1 in: rate varies by country):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of maternal deaths]' derivation='Avg' name='[avg:Number of maternal deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[People practicing open defecation (% of population)]' derivation='Avg' name='[avg:People practicing open defecation (% of population):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population ages 0-14, total]' derivation='Avg' name='[avg:Population ages 0-14, total:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Prevalence of overweight (modeled estimate, % of children under 5)]' derivation='Avg' name='[avg:Prevalence of overweight (modeled estimate, % of children under 5):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Prevalence of undernourishment (% of population)]' derivation='Avg' name='[avg:Prevalence of undernourishment (% of population):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total alcohol consumption per capita (liters of pure alcohol, projected estimates, 15+ years of age)]' derivation='Avg' name='[avg:Total alcohol consumption per capita (liters of pure alcohol, projected estimates, 15+ years of age):qk]' pivot='key' type='quantitative' />
            <column-instance column='[AdhocCluster:1]' derivation='None' is-adhoc-cluster='true' name='[none:AdhocCluster:1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[CountryShortName]' derivation='None' name='[none:CountryShortName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[none:Year:qk]' included-values='in-range'>
            <min>2005.0</min>
            <max>2005.0</max>
          </filter>
          <slices>
            <column>[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[none:Year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[Longitude (generated)]' field-type='quantitative' max='27607726.860998668' min='-13280976.322618337' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[Latitude (generated)]' field-type='quantitative' max='13874481.859865634' min='-9373957.3510587458' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[none:AdhocCluster:1:ok]' />
              <lod column='[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[none:CountryShortName:nk]' />
              <lod column='[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[avg:Domestic private health expenditure per capita (current US$):qk]' />
              <lod column='[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[avg:Incidence of tuberculosis (per 100,000 people):qk]' />
              <lod column='[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[avg:Lifetime risk of maternal death (%):qk]' />
              <lod column='[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[avg:Lifetime risk of maternal death (1 in: rate varies by country):qk]' />
              <lod column='[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[avg:Number of maternal deaths:qk]' />
              <lod column='[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[avg:People practicing open defecation (% of population):qk]' />
              <lod column='[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[avg:Population ages 0-14, total:qk]' />
              <lod column='[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[avg:Prevalence of overweight (modeled estimate, % of children under 5):qk]' />
              <lod column='[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[avg:Prevalence of undernourishment (% of population):qk]' />
              <lod column='[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[avg:Total alcohol consumption per capita (liters of pure alcohol, projected estimates, 15+ years of age):qk]' />
              <geometry column='[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[Latitude (generated)]</rows>
        <cols>[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{EA9402BF-2F8E-4CDE-93C9-2A894F331D37}' />
    </worksheet>
    <worksheet name='health_kMeans'>
      <table>
        <view>
          <datasources>
            <datasource caption='health_predictors' name='federated.0vh5wok1xft0gw17xhskh1bhtrdb' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0vh5wok1xft0gw17xhskh1bhtrdb'>
            <column auto-hidden='true' caption='Clusters (1)' datatype='integer' hidden='true' is-adhoc-cluster='true' name='[AdhocCluster:2]' parent-model='[AnalyticModel:{acc4996c-858f-45c4-9d8b-6a7b6abbd507}]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='-1' value='Cluster Outliers' />
                <alias key='0' value='Not Clustered' />
                <alias key='1' value='Cluster 1' />
                <alias key='2' value='Cluster 2' />
                <alias key='3' value='Cluster 3' />
                <alias key='4' value='Cluster 4' />
                <alias key='5' value='Cluster 5' />
                <alias key='6' value='Cluster 6' />
                <alias key='7' value='Cluster 7' />
                <alias key='8' value='Cluster 8' />
                <alias key='9' value='Cluster 9' />
                <alias key='10' value='Cluster 10' />
                <alias key='11' value='Cluster 11' />
                <alias key='12' value='Cluster 12' />
                <alias key='13' value='Cluster 13' />
                <alias key='14' value='Cluster 14' />
                <alias key='15' value='Cluster 15' />
                <alias key='16' value='Cluster 16' />
                <alias key='17' value='Cluster 17' />
                <alias key='18' value='Cluster 18' />
                <alias key='19' value='Cluster 19' />
                <alias key='20' value='Cluster 20' />
                <alias key='21' value='Cluster 21' />
                <alias key='22' value='Cluster 22' />
                <alias key='23' value='Cluster 23' />
                <alias key='24' value='Cluster 24' />
                <alias key='25' value='Cluster 25' />
                <alias key='26' value='Cluster 26' />
                <alias key='27' value='Cluster 27' />
                <alias key='28' value='Cluster 28' />
                <alias key='29' value='Cluster 29' />
                <alias key='30' value='Cluster 30' />
                <alias key='31' value='Cluster 31' />
                <alias key='32' value='Cluster 32' />
                <alias key='33' value='Cluster 33' />
                <alias key='34' value='Cluster 34' />
                <alias key='35' value='Cluster 35' />
                <alias key='36' value='Cluster 36' />
                <alias key='37' value='Cluster 37' />
                <alias key='38' value='Cluster 38' />
                <alias key='39' value='Cluster 39' />
                <alias key='40' value='Cluster 40' />
                <alias key='41' value='Cluster 41' />
                <alias key='42' value='Cluster 42' />
                <alias key='43' value='Cluster 43' />
                <alias key='44' value='Cluster 44' />
                <alias key='45' value='Cluster 45' />
                <alias key='46' value='Cluster 46' />
                <alias key='47' value='Cluster 47' />
                <alias key='48' value='Cluster 48' />
                <alias key='49' value='Cluster 49' />
                <alias key='50' value='Cluster 50' />
              </aliases>
            </column>
            <column caption='Country Short Name' datatype='string' name='[CountryShortName]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Domestic private health expenditure per capita (current US$)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Incidence of tuberculosis (per 100,000 people)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Lifetime risk of maternal death (%)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Lifetime risk of maternal death (1 in: rate varies by country)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Number of maternal deaths]' role='measure' type='quantitative' />
            <column datatype='real' name='[People practicing open defecation (% of population)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Population ages 0-14, total]' role='measure' type='quantitative' />
            <column datatype='real' name='[Prevalence of overweight (modeled estimate, % of children under 5)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Prevalence of undernourishment (% of population)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Total alcohol consumption per capita (liters of pure alcohol, projected estimates, 15+ years of age)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Domestic private health expenditure per capita (current US$)]' derivation='Avg' name='[avg:Domestic private health expenditure per capita (current US$):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Incidence of tuberculosis (per 100,000 people)]' derivation='Avg' name='[avg:Incidence of tuberculosis (per 100,000 people):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Lifetime risk of maternal death (%)]' derivation='Avg' name='[avg:Lifetime risk of maternal death (%):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Lifetime risk of maternal death (1 in: rate varies by country)]' derivation='Avg' name='[avg:Lifetime risk of maternal death (1 in: rate varies by country):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of maternal deaths]' derivation='Avg' name='[avg:Number of maternal deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[People practicing open defecation (% of population)]' derivation='Avg' name='[avg:People practicing open defecation (% of population):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population ages 0-14, total]' derivation='Avg' name='[avg:Population ages 0-14, total:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Prevalence of overweight (modeled estimate, % of children under 5)]' derivation='Avg' name='[avg:Prevalence of overweight (modeled estimate, % of children under 5):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Prevalence of undernourishment (% of population)]' derivation='Avg' name='[avg:Prevalence of undernourishment (% of population):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total alcohol consumption per capita (liters of pure alcohol, projected estimates, 15+ years of age)]' derivation='Avg' name='[avg:Total alcohol consumption per capita (liters of pure alcohol, projected estimates, 15+ years of age):qk]' pivot='key' type='quantitative' />
            <column-instance column='[AdhocCluster:2]' derivation='None' is-adhoc-cluster='true' name='[none:AdhocCluster:2:ok]' pivot='key' type='ordinal' />
            <column-instance column='[CountryShortName]' derivation='None' name='[none:CountryShortName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[avg:Domestic private health expenditure per capita (current US$):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[avg:Incidence of tuberculosis (per 100,000 people):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[avg:Lifetime risk of maternal death (\%):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[avg:Lifetime risk of maternal death (1 in: rate varies by country):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[avg:Number of maternal deaths:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[avg:People practicing open defecation (\% of population):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[avg:Population ages 0-14, total:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[avg:Prevalence of overweight (modeled estimate, \% of children under 5):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[avg:Prevalence of undernourishment (\% of population):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[avg:Total alcohol consumption per capita (liters of pure alcohol, projected estimates, 15+ years of age):qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[none:Year:qk]' included-values='in-range'>
            <min>2005.0</min>
            <max>2005.0</max>
          </filter>
          <slices>
            <column>[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[none:Year:qk]</column>
            <column>[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[Multiple Values]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0vh5wok1xft0gw17xhskh1bhtrdb].[none:CountryShortName:nk] / [federated.0vh5wok1xft0gw17xhskh1bhtrdb].[none:AdhocCluster:2:ok])</rows>
        <cols>[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{46397701-6DDE-48BB-83B1-E9607C71B6C9}' />
    </worksheet>
    <worksheet name='socio'>
      <table>
        <view>
          <datasources>
            <datasource caption='socioeconomic_predictors' name='federated.0cl0ztz1eeohc51e85dpd1v5fkta' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0cl0ztz1eeohc51e85dpd1v5fkta'>
            <column auto-hidden='true' caption='Clusters' datatype='integer' hidden='true' is-adhoc-cluster='true' name='[AdhocCluster:1]' parent-model='[AnalyticModel:{5321eba1-2efc-4fb9-a2c4-4458fd3c9fd1}]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='-1' value='Cluster Outliers' />
                <alias key='0' value='Not Clustered' />
                <alias key='1' value='Cluster 1' />
                <alias key='2' value='Cluster 2' />
                <alias key='3' value='Cluster 3' />
                <alias key='4' value='Cluster 4' />
                <alias key='5' value='Cluster 5' />
                <alias key='6' value='Cluster 6' />
                <alias key='7' value='Cluster 7' />
                <alias key='8' value='Cluster 8' />
                <alias key='9' value='Cluster 9' />
                <alias key='10' value='Cluster 10' />
                <alias key='11' value='Cluster 11' />
                <alias key='12' value='Cluster 12' />
                <alias key='13' value='Cluster 13' />
                <alias key='14' value='Cluster 14' />
                <alias key='15' value='Cluster 15' />
                <alias key='16' value='Cluster 16' />
                <alias key='17' value='Cluster 17' />
                <alias key='18' value='Cluster 18' />
                <alias key='19' value='Cluster 19' />
                <alias key='20' value='Cluster 20' />
                <alias key='21' value='Cluster 21' />
                <alias key='22' value='Cluster 22' />
                <alias key='23' value='Cluster 23' />
                <alias key='24' value='Cluster 24' />
                <alias key='25' value='Cluster 25' />
                <alias key='26' value='Cluster 26' />
                <alias key='27' value='Cluster 27' />
                <alias key='28' value='Cluster 28' />
                <alias key='29' value='Cluster 29' />
                <alias key='30' value='Cluster 30' />
                <alias key='31' value='Cluster 31' />
                <alias key='32' value='Cluster 32' />
                <alias key='33' value='Cluster 33' />
                <alias key='34' value='Cluster 34' />
                <alias key='35' value='Cluster 35' />
                <alias key='36' value='Cluster 36' />
                <alias key='37' value='Cluster 37' />
                <alias key='38' value='Cluster 38' />
                <alias key='39' value='Cluster 39' />
                <alias key='40' value='Cluster 40' />
                <alias key='41' value='Cluster 41' />
                <alias key='42' value='Cluster 42' />
                <alias key='43' value='Cluster 43' />
                <alias key='44' value='Cluster 44' />
                <alias key='45' value='Cluster 45' />
                <alias key='46' value='Cluster 46' />
                <alias key='47' value='Cluster 47' />
                <alias key='48' value='Cluster 48' />
                <alias key='49' value='Cluster 49' />
                <alias key='50' value='Cluster 50' />
              </aliases>
            </column>
            <column datatype='real' name='[Adjusted savings: energy depletion (% of GNI)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Agriculture, forestry, and fishing, value added per worker (constant 2015 US$)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Claims on central government, etc. (% GDP)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Commercial bank branches (per 100,000 adults)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Communications, computer, etc. (% of service exports, BoP)]' role='measure' type='quantitative' />
            <column caption='Country Short Name' datatype='string' name='[CountryShortName]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[External balance on goods and services (% of GDP)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Final consumption expenditure (annual % growth)]' role='measure' type='quantitative' />
            <column datatype='real' name='[GOAL 11: Sustainable Cities and Communities (5 year moving average)]' role='measure' type='quantitative' />
            <column caption='Income Group Low income' datatype='integer' name='[Income Group_Low income]' role='measure' type='quantitative' />
            <column caption='Income Group Upper middle income' datatype='integer' name='[Income Group_Upper middle income]' role='measure' type='quantitative' />
            <column datatype='real' name='[Inflation, GDP deflator (annual %)]' role='measure' type='quantitative' />
            <column datatype='real' name='[International tourism, expenditures for travel items (current US$)]' role='measure' type='quantitative' />
            <column datatype='real' name='[International tourism, number of arrivals]' role='measure' type='quantitative' />
            <column datatype='real' name='[Ores and metals imports (% of merchandise imports)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Primary education, pupils]' role='measure' type='quantitative' />
            <column caption='Region Latin America &amp; Caribbean' datatype='integer' name='[Region_Latin America &amp; Caribbean]' role='measure' type='quantitative' />
            <column caption='Region South Asia' datatype='integer' name='[Region_South Asia]' role='measure' type='quantitative' />
            <column caption='Region Sub-Saharan Africa' datatype='integer' name='[Region_Sub-Saharan Africa]' role='measure' type='quantitative' />
            <column datatype='real' name='[Travel services (% of commercial service imports)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Unemployment, youth total (% of total labor force ages 15-24) (modeled ILO estimate)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Adjusted savings: energy depletion (% of GNI)]' derivation='Avg' name='[avg:Adjusted savings: energy depletion (% of GNI):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Agriculture, forestry, and fishing, value added per worker (constant 2015 US$)]' derivation='Avg' name='[avg:Agriculture, forestry, and fishing, value added per worker (constant 2015 US$):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Claims on central government, etc. (% GDP)]' derivation='Avg' name='[avg:Claims on central government, etc. (% GDP):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Commercial bank branches (per 100,000 adults)]' derivation='Avg' name='[avg:Commercial bank branches (per 100,000 adults):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Communications, computer, etc. (% of service exports, BoP)]' derivation='Avg' name='[avg:Communications, computer, etc. (% of service exports, BoP):qk]' pivot='key' type='quantitative' />
            <column-instance column='[External balance on goods and services (% of GDP)]' derivation='Avg' name='[avg:External balance on goods and services (% of GDP):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Final consumption expenditure (annual % growth)]' derivation='Avg' name='[avg:Final consumption expenditure (annual % growth):qk]' pivot='key' type='quantitative' />
            <column-instance column='[GOAL 11: Sustainable Cities and Communities (5 year moving average)]' derivation='Avg' name='[avg:GOAL 11: Sustainable Cities and Communities (5 year moving average):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Income Group_Low income]' derivation='Avg' name='[avg:Income Group_Low income:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Income Group_Upper middle income]' derivation='Avg' name='[avg:Income Group_Upper middle income:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Inflation, GDP deflator (annual %)]' derivation='Avg' name='[avg:Inflation, GDP deflator (annual %):qk]' pivot='key' type='quantitative' />
            <column-instance column='[International tourism, expenditures for travel items (current US$)]' derivation='Avg' name='[avg:International tourism, expenditures for travel items (current US$):qk]' pivot='key' type='quantitative' />
            <column-instance column='[International tourism, number of arrivals]' derivation='Avg' name='[avg:International tourism, number of arrivals:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ores and metals imports (% of merchandise imports)]' derivation='Avg' name='[avg:Ores and metals imports (% of merchandise imports):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Primary education, pupils]' derivation='Avg' name='[avg:Primary education, pupils:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Region_Latin America &amp; Caribbean]' derivation='Avg' name='[avg:Region_Latin America &amp; Caribbean:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Region_South Asia]' derivation='Avg' name='[avg:Region_South Asia:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Region_Sub-Saharan Africa]' derivation='Avg' name='[avg:Region_Sub-Saharan Africa:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Travel services (% of commercial service imports)]' derivation='Avg' name='[avg:Travel services (% of commercial service imports):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Unemployment, youth total (% of total labor force ages 15-24) (modeled ILO estimate)]' derivation='Avg' name='[avg:Unemployment, youth total (% of total labor force ages 15-24) (modeled ILO estimate):qk]' pivot='key' type='quantitative' />
            <column-instance column='[AdhocCluster:1]' derivation='None' is-adhoc-cluster='true' name='[none:AdhocCluster:1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[CountryShortName]' derivation='None' name='[none:CountryShortName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <style>
              <style-rule element='mark'>
                <encoding attr='color' field='[none:AdhocCluster:1:ok]' type='palette'>
                  <map to='#4e79a7'>
                    <bucket>1</bucket>
                  </map>
                  <map to='#59a14f'>
                    <bucket>3</bucket>
                  </map>
                  <map to='#f28e2b'>
                    <bucket>2</bucket>
                  </map>
                </encoding>
              </style-rule>
            </style>
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[none:Year:qk]' included-values='in-range'>
            <min>2005.0</min>
            <max>2005.0</max>
          </filter>
          <slices>
            <column>[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[none:Year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[Longitude (generated)]' field-type='quantitative' max='27493006.119649339' min='-13395696.890442068' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[Latitude (generated)]' field-type='quantitative' max='13518327.802184712' min='-9730111.3100767415' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[none:AdhocCluster:1:ok]' />
              <lod column='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[none:CountryShortName:nk]' />
              <lod column='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Adjusted savings: energy depletion (% of GNI):qk]' />
              <lod column='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Agriculture, forestry, and fishing, value added per worker (constant 2015 US$):qk]' />
              <lod column='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Claims on central government, etc. (% GDP):qk]' />
              <lod column='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Commercial bank branches (per 100,000 adults):qk]' />
              <lod column='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Communications, computer, etc. (% of service exports, BoP):qk]' />
              <lod column='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:External balance on goods and services (% of GDP):qk]' />
              <lod column='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Final consumption expenditure (annual % growth):qk]' />
              <lod column='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:GOAL 11: Sustainable Cities and Communities (5 year moving average):qk]' />
              <lod column='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Income Group_Low income:qk]' />
              <lod column='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Income Group_Upper middle income:qk]' />
              <lod column='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Inflation, GDP deflator (annual %):qk]' />
              <lod column='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:International tourism, expenditures for travel items (current US$):qk]' />
              <lod column='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:International tourism, number of arrivals:qk]' />
              <lod column='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Ores and metals imports (% of merchandise imports):qk]' />
              <lod column='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Primary education, pupils:qk]' />
              <lod column='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Region_Latin America &amp; Caribbean:qk]' />
              <lod column='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Region_South Asia:qk]' />
              <lod column='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Region_Sub-Saharan Africa:qk]' />
              <lod column='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Travel services (% of commercial service imports):qk]' />
              <lod column='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Unemployment, youth total (% of total labor force ages 15-24) (modeled ILO estimate):qk]' />
              <geometry column='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[Latitude (generated)]</rows>
        <cols>[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{9D156356-DC7B-4088-BD62-38D85AB4DA1B}' />
    </worksheet>
    <worksheet name='socio_kMeans'>
      <table>
        <view>
          <datasources>
            <datasource caption='socioeconomic_predictors' name='federated.0cl0ztz1eeohc51e85dpd1v5fkta' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0cl0ztz1eeohc51e85dpd1v5fkta'>
            <column auto-hidden='true' caption='Clusters (1)' datatype='integer' hidden='true' is-adhoc-cluster='true' name='[AdhocCluster:2]' parent-model='[AnalyticModel:{551cd312-311f-499f-95f4-b5a374527863}]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='-1' value='Cluster Outliers' />
                <alias key='0' value='Not Clustered' />
                <alias key='1' value='Cluster 1' />
                <alias key='2' value='Cluster 2' />
                <alias key='3' value='Cluster 3' />
                <alias key='4' value='Cluster 4' />
                <alias key='5' value='Cluster 5' />
                <alias key='6' value='Cluster 6' />
                <alias key='7' value='Cluster 7' />
                <alias key='8' value='Cluster 8' />
                <alias key='9' value='Cluster 9' />
                <alias key='10' value='Cluster 10' />
                <alias key='11' value='Cluster 11' />
                <alias key='12' value='Cluster 12' />
                <alias key='13' value='Cluster 13' />
                <alias key='14' value='Cluster 14' />
                <alias key='15' value='Cluster 15' />
                <alias key='16' value='Cluster 16' />
                <alias key='17' value='Cluster 17' />
                <alias key='18' value='Cluster 18' />
                <alias key='19' value='Cluster 19' />
                <alias key='20' value='Cluster 20' />
                <alias key='21' value='Cluster 21' />
                <alias key='22' value='Cluster 22' />
                <alias key='23' value='Cluster 23' />
                <alias key='24' value='Cluster 24' />
                <alias key='25' value='Cluster 25' />
                <alias key='26' value='Cluster 26' />
                <alias key='27' value='Cluster 27' />
                <alias key='28' value='Cluster 28' />
                <alias key='29' value='Cluster 29' />
                <alias key='30' value='Cluster 30' />
                <alias key='31' value='Cluster 31' />
                <alias key='32' value='Cluster 32' />
                <alias key='33' value='Cluster 33' />
                <alias key='34' value='Cluster 34' />
                <alias key='35' value='Cluster 35' />
                <alias key='36' value='Cluster 36' />
                <alias key='37' value='Cluster 37' />
                <alias key='38' value='Cluster 38' />
                <alias key='39' value='Cluster 39' />
                <alias key='40' value='Cluster 40' />
                <alias key='41' value='Cluster 41' />
                <alias key='42' value='Cluster 42' />
                <alias key='43' value='Cluster 43' />
                <alias key='44' value='Cluster 44' />
                <alias key='45' value='Cluster 45' />
                <alias key='46' value='Cluster 46' />
                <alias key='47' value='Cluster 47' />
                <alias key='48' value='Cluster 48' />
                <alias key='49' value='Cluster 49' />
                <alias key='50' value='Cluster 50' />
              </aliases>
            </column>
            <column datatype='real' name='[Adjusted savings: energy depletion (% of GNI)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Agriculture, forestry, and fishing, value added per worker (constant 2015 US$)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Claims on central government, etc. (% GDP)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Commercial bank branches (per 100,000 adults)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Communications, computer, etc. (% of service exports, BoP)]' role='measure' type='quantitative' />
            <column caption='Country Short Name' datatype='string' name='[CountryShortName]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[External balance on goods and services (% of GDP)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Final consumption expenditure (annual % growth)]' role='measure' type='quantitative' />
            <column datatype='real' name='[GOAL 11: Sustainable Cities and Communities (5 year moving average)]' role='measure' type='quantitative' />
            <column caption='Income Group Low income' datatype='integer' name='[Income Group_Low income]' role='measure' type='quantitative' />
            <column caption='Income Group Upper middle income' datatype='integer' name='[Income Group_Upper middle income]' role='measure' type='quantitative' />
            <column datatype='real' name='[Inflation, GDP deflator (annual %)]' role='measure' type='quantitative' />
            <column datatype='real' name='[International tourism, expenditures for travel items (current US$)]' role='measure' type='quantitative' />
            <column datatype='real' name='[International tourism, number of arrivals]' role='measure' type='quantitative' />
            <column datatype='real' name='[Ores and metals imports (% of merchandise imports)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Primary education, pupils]' role='measure' type='quantitative' />
            <column caption='Region Latin America &amp; Caribbean' datatype='integer' name='[Region_Latin America &amp; Caribbean]' role='measure' type='quantitative' />
            <column caption='Region South Asia' datatype='integer' name='[Region_South Asia]' role='measure' type='quantitative' />
            <column caption='Region Sub-Saharan Africa' datatype='integer' name='[Region_Sub-Saharan Africa]' role='measure' type='quantitative' />
            <column datatype='real' name='[Travel services (% of commercial service imports)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Unemployment, youth total (% of total labor force ages 15-24) (modeled ILO estimate)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Adjusted savings: energy depletion (% of GNI)]' derivation='Avg' name='[avg:Adjusted savings: energy depletion (% of GNI):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Agriculture, forestry, and fishing, value added per worker (constant 2015 US$)]' derivation='Avg' name='[avg:Agriculture, forestry, and fishing, value added per worker (constant 2015 US$):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Claims on central government, etc. (% GDP)]' derivation='Avg' name='[avg:Claims on central government, etc. (% GDP):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Commercial bank branches (per 100,000 adults)]' derivation='Avg' name='[avg:Commercial bank branches (per 100,000 adults):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Communications, computer, etc. (% of service exports, BoP)]' derivation='Avg' name='[avg:Communications, computer, etc. (% of service exports, BoP):qk]' pivot='key' type='quantitative' />
            <column-instance column='[External balance on goods and services (% of GDP)]' derivation='Avg' name='[avg:External balance on goods and services (% of GDP):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Final consumption expenditure (annual % growth)]' derivation='Avg' name='[avg:Final consumption expenditure (annual % growth):qk]' pivot='key' type='quantitative' />
            <column-instance column='[GOAL 11: Sustainable Cities and Communities (5 year moving average)]' derivation='Avg' name='[avg:GOAL 11: Sustainable Cities and Communities (5 year moving average):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Income Group_Low income]' derivation='Avg' name='[avg:Income Group_Low income:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Income Group_Upper middle income]' derivation='Avg' name='[avg:Income Group_Upper middle income:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Inflation, GDP deflator (annual %)]' derivation='Avg' name='[avg:Inflation, GDP deflator (annual %):qk]' pivot='key' type='quantitative' />
            <column-instance column='[International tourism, expenditures for travel items (current US$)]' derivation='Avg' name='[avg:International tourism, expenditures for travel items (current US$):qk]' pivot='key' type='quantitative' />
            <column-instance column='[International tourism, number of arrivals]' derivation='Avg' name='[avg:International tourism, number of arrivals:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ores and metals imports (% of merchandise imports)]' derivation='Avg' name='[avg:Ores and metals imports (% of merchandise imports):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Primary education, pupils]' derivation='Avg' name='[avg:Primary education, pupils:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Region_Latin America &amp; Caribbean]' derivation='Avg' name='[avg:Region_Latin America &amp; Caribbean:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Region_South Asia]' derivation='Avg' name='[avg:Region_South Asia:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Region_Sub-Saharan Africa]' derivation='Avg' name='[avg:Region_Sub-Saharan Africa:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Travel services (% of commercial service imports)]' derivation='Avg' name='[avg:Travel services (% of commercial service imports):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Unemployment, youth total (% of total labor force ages 15-24) (modeled ILO estimate)]' derivation='Avg' name='[avg:Unemployment, youth total (% of total labor force ages 15-24) (modeled ILO estimate):qk]' pivot='key' type='quantitative' />
            <column-instance column='[AdhocCluster:2]' derivation='None' is-adhoc-cluster='true' name='[none:AdhocCluster:2:ok]' pivot='key' type='ordinal' />
            <column-instance column='[CountryShortName]' derivation='None' name='[none:CountryShortName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Adjusted savings: energy depletion (\% of GNI):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Agriculture, forestry, and fishing, value added per worker (constant 2015 US$):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Claims on central government, etc. (\% GDP):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Commercial bank branches (per 100,000 adults):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Communications, computer, etc. (\% of service exports, BoP):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:External balance on goods and services (\% of GDP):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Final consumption expenditure (annual \% growth):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:GOAL 11: Sustainable Cities and Communities (5 year moving average):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Income Group_Low income:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Income Group_Upper middle income:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Inflation, GDP deflator (annual \%):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:International tourism, expenditures for travel items (current US$):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:International tourism, number of arrivals:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Ores and metals imports (\% of merchandise imports):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Primary education, pupils:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Region_Latin America &amp; Caribbean:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Region_South Asia:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Region_Sub-Saharan Africa:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Travel services (\% of commercial service imports):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[avg:Unemployment, youth total (\% of total labor force ages 15-24) (modeled ILO estimate):qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[none:Year:qk]' included-values='in-range'>
            <min>2005.0</min>
            <max>2005.0</max>
          </filter>
          <slices>
            <column>[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[none:Year:qk]</column>
            <column>[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[Multiple Values]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0cl0ztz1eeohc51e85dpd1v5fkta].[none:CountryShortName:nk] / [federated.0cl0ztz1eeohc51e85dpd1v5fkta].[none:AdhocCluster:2:ok])</rows>
        <cols>[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{643BB176-7972-4FC7-951E-606A8727B4D3}' />
    </worksheet>
  </worksheets>
  <windows source-height='72'>
    <window class='worksheet' name='socio'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[none:AdhocCluster:1:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[none:AdhocCluster:1:ok]</field>
            <field>[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[none:CountryShortName:nk]</field>
            <field>[federated.0cl0ztz1eeohc51e85dpd1v5fkta].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5F0578E7-DB77-47BE-9E19-65D11789D96C}' />
    </window>
    <window class='worksheet' name='socio_kMeans'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{0C6CBDB4-7350-4D59-9DA4-BB18D7FB830B}' />
    </window>
    <window class='worksheet' name='env'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.01cgkm51l5oq0x10q382e1vejl59].[none:AdhocCluster:1:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01cgkm51l5oq0x10q382e1vejl59].[none:AdhocCluster:1:ok]</field>
            <field>[federated.01cgkm51l5oq0x10q382e1vejl59].[none:CountryShortName:nk]</field>
            <field>[federated.01cgkm51l5oq0x10q382e1vejl59].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{10C1C8CF-E0EB-4B01-AD14-B95095A97A34}' />
    </window>
    <window class='worksheet' name='env_kMeans'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{45B0FE43-EB42-4805-94E9-FD7FACA45003}' />
    </window>
    <window class='worksheet' maximized='true' name='health'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[none:AdhocCluster:1:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[none:AdhocCluster:1:ok]</field>
            <field>[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[none:CountryShortName:nk]</field>
            <field>[federated.0vh5wok1xft0gw17xhskh1bhtrdb].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DE8B2BF1-7FB4-4869-A433-FA18ECB07CB4}' />
    </window>
    <window class='worksheet' name='health_kMeans'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{E37EB439-2743-44C4-83D3-C89D887C3709}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='env' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='env_kMeans' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='health' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='health_kMeans' width='192'>
      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
      AGPPGybRyB0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='socio' width='192'>
      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
      bkzwDm4emgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='socio_kMeans' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
